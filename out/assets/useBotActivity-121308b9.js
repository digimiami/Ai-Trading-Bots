import{r as l,s as g}from"./index-8a16c905.js";function L(i){const[w,m]=l.useState([]),[p,u]=l.useState(!0),[y,f]=l.useState(null),d=async(t,e)=>{try{const{data:{user:s}}=await g.auth.getUser();if(!s)throw new Error("No active session");const o={bot_id:t,level:e.level,category:e.category,message:e.message,details:e.details,timestamp:new Date().toISOString()},{error:n}=await g.from("bot_activity_logs").insert(o);if(n){console.error("Error saving log to database:",n);const r=[...JSON.parse(localStorage.getItem(`bot_logs_${t}`)||"[]"),{...e,id:Date.now().toString(),botId:t,timestamp:new Date().toISOString()}];localStorage.setItem(`bot_logs_${t}`,JSON.stringify(r))}return m(a=>a.map(r=>r.botId===t?{...r,logs:[{...e,id:Date.now().toString(),botId:t,timestamp:new Date().toISOString()},...r.logs.slice(0,49)],lastActivity:new Date().toISOString(),errorCount:e.level==="error"?r.errorCount+1:r.errorCount,successCount:e.level==="success"?r.successCount+1:r.successCount}:r)),o}catch(s){throw console.error("Error adding bot log:",s),s}},v=async t=>{try{const{data:{user:e}}=await g.auth.getUser();if(!e)throw new Error("No active session");const{data:s,error:o}=await g.from("bot_activity_logs").select("*").eq("bot_id",t).order("timestamp",{ascending:!1}).limit(100);return o?(console.error("Error fetching bot logs from database:",o),JSON.parse(localStorage.getItem(`bot_logs_${t}`)||"[]").sort((a,r)=>new Date(r.timestamp).getTime()-new Date(a.timestamp).getTime())):s||[]}catch(e){return console.error("Error fetching bot logs:",e),JSON.parse(localStorage.getItem(`bot_logs_${t}`)||"[]").sort((o,n)=>new Date(n.timestamp).getTime()-new Date(o.timestamp).getTime())}},c=async()=>{try{if(u(!0),f(null),!i||i.length===0){m([]);return}const t=await Promise.all(i.map(async e=>{const s=await v(e.id),o=s.filter(a=>a.level==="error").length,n=s.filter(a=>a.level==="success").length;return{botId:e.id,botName:e.name,status:e.status,lastActivity:s.length>0?s[0].timestamp:e.createdAt,logs:s.slice(0,50),isActive:e.status==="running",currentAction:s.length>0?s[0].message:"Initializing...",waitingFor:e.status==="running"?"Market conditions":void 0,errorCount:o,successCount:n}}));m(t)}catch(t){console.error("Error fetching bot activities:",t),f(t instanceof Error?t.message:"Failed to fetch activities")}finally{u(!1)}},h=async t=>{try{localStorage.removeItem(`bot_logs_${t}`),await c()}catch(e){console.error("Error clearing bot logs:",e)}},S=async t=>{const e=[{level:"info",category:"system",message:"Bot initialized successfully"},{level:"info",category:"market",message:"Analyzing market conditions..."},{level:"info",category:"strategy",message:"RSI: 45, ADX: 28 - Market trending"},{level:"success",category:"trade",message:"Long position opened at $45,250"},{level:"info",category:"market",message:"Monitoring position..."},{level:"warning",category:"market",message:"Price approaching stop loss"},{level:"success",category:"trade",message:"Position closed with +2.5% profit"}];for(const s of e)await d(t,s),await new Promise(o=>setTimeout(o,1e3))};return l.useEffect(()=>{c();const t=setInterval(c,3e4);return()=>clearInterval(t)},[i]),{activities:w,loading:p,error:y,addLog:d,fetchBotLogs:v,clearBotLogs:h,simulateBotActivity:S,refetch:c}}export{L as u};
//# sourceMappingURL=useBotActivity-121308b9.js.map
