{"version":3,"file":"page-D40P9783.js","sources":["../../src/pages/bots/page.tsx"],"sourcesContent":["\nimport { useState } from 'react';\nimport { Header } from '../../components/feature/Header';\nimport Navigation from '../../components/feature/Navigation';\nimport Button from '../../components/base/Button';\nimport Card from '../../components/base/Card';\nimport { TradingBot } from '../../types/trading';\nimport { useNavigate } from 'react-router-dom';\nimport { useBots } from '../../hooks/useBots';\n\nexport default function BotsPage() {\n  const navigate = useNavigate();\n  const { bots, loading, startBot, stopBot, updateBot } = useBots();\n  const [filter, setFilter] = useState<'all' | 'active' | 'paused' | 'stopped'>('all');\n\n  const filteredBots = bots.filter(bot => \n    filter === 'all' || bot.status === filter\n  );\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'bg-green-100 text-green-800';\n      case 'paused': return 'bg-yellow-100 text-yellow-800';\n      case 'stopped': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getRiskColor = (risk: string) => {\n    switch (risk) {\n      case 'low': return 'text-green-600';\n      case 'medium': return 'text-yellow-600';\n      case 'high': return 'text-red-600';\n      default: return 'text-gray-600';\n    }\n  };\n\n  const handleBotAction = async (botId: string, action: 'start' | 'pause' | 'stop') => {\n    try {\n      if (action === 'start') {\n        await startBot(botId);\n      } else if (action === 'stop') {\n        await stopBot(botId);\n      } else if (action === 'pause') {\n        await updateBot(botId, { status: 'paused' });\n      }\n    } catch (error) {\n      console.error('Failed to update bot:', error);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header \n        title=\"Trading Bots\"\n        action={\n          <Button\n            variant=\"primary\"\n            size=\"sm\"\n            onClick={() => navigate('/create-bot')}\n          >\n            <i className=\"ri-add-line mr-1\"></i>\n            New Bot\n          </Button>\n        }\n      />\n      \n      <div className=\"pt-20 pb-20 px-4\">\n        <div className=\"max-w-6xl mx-auto space-y-4\">\n          {/* Filter Tabs */}\n          <div className=\"flex space-x-2 overflow-x-auto\">\n            {['all', 'active', 'paused', 'stopped'].map((status) => (\n              <button\n                key={status}\n                onClick={() => setFilter(status as any)}\n                className={`px-4 py-2 rounded-full text-sm font-medium whitespace-nowrap ${\n                  filter === status\n                    ? 'bg-blue-600 text-white'\n                    : 'bg-white text-gray-600 border border-gray-200'\n                }`}\n              >\n                {status.charAt(0).toUpperCase() + status.slice(1)}\n              </button>\n            ))}\n          </div>\n\n          {/* Bot List */}\n          <div className=\"space-y-4\">\n            {loading ? (\n              <div className=\"text-center py-12\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n                <p className=\"text-gray-600\">Loading bots...</p>\n              </div>\n            ) : filteredBots.length === 0 ? (\n              <div className=\"text-center py-12\">\n                <i className=\"ri-robot-line text-4xl text-gray-400 mb-4\"></i>\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No bots found</h3>\n                <p className=\"text-gray-500 mb-4\">Create your first trading bot to get started</p>\n                <Button onClick={() => navigate('/create-bot')}>\n                  <i className=\"ri-add-line mr-2\"></i>\n                  Create Bot\n                </Button>\n              </div>\n            ) : (\n              filteredBots.map((bot) => (\n              <Card key={bot.id} className=\"space-y-4\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n                      <i className={`${bot.exchange === 'bybit' ? 'ri-currency-line' : 'ri-exchange-line'} text-blue-600 text-xl`}></i>\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900\">{bot.name}</h3>\n                      <p className=\"text-sm text-gray-500\">{bot.symbol} â€¢ {bot.exchange.toUpperCase()}</p>\n                      <div className=\"flex items-center space-x-2 mt-1\">\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(bot.status)}`}>\n                          {bot.status}\n                        </span>\n                        <span className={`text-xs font-medium ${getRiskColor(bot.riskLevel)}`}>\n                          {bot.riskLevel} risk\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"text-right\">\n                    <p className={`text-lg font-bold ${bot.pnl >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                      {bot.pnl >= 0 ? '+' : ''}${bot.pnl.toFixed(2)}\n                    </p>\n                    <p className={`text-sm ${bot.pnlPercentage >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                      {bot.pnlPercentage >= 0 ? '+' : ''}{bot.pnlPercentage.toFixed(2)}%\n                    </p>\n                  </div>\n                </div>\n\n                {/* Bot Stats */}\n                <div className=\"grid grid-cols-3 gap-4 pt-4 border-t border-gray-100\">\n                  <div className=\"text-center\">\n                    <p className=\"text-sm text-gray-500\">Trades</p>\n                    <p className=\"font-semibold text-gray-900\">{bot.totalTrades}</p>\n                  </div>\n                  <div className=\"text-center\">\n                    <p className=\"text-sm text-gray-500\">Win Rate</p>\n                    <p className=\"font-semibold text-gray-900\">{bot.winRate}%</p>\n                  </div>\n                  <div className=\"text-center\">\n                    <p className=\"text-sm text-gray-500\">Leverage</p>\n                    <p className=\"font-semibold text-gray-900\">{bot.leverage}x</p>\n                  </div>\n                </div>\n\n                {/* Bot Actions */}\n                <div className=\"flex space-x-2 pt-4 border-t border-gray-100\">\n                  {bot.status === 'active' ? (\n                    <Button \n                      variant=\"secondary\" \n                      size=\"sm\" \n                      className=\"flex-1\"\n                      onClick={() => handleBotAction(bot.id, 'pause')}\n                    >\n                      <i className=\"ri-pause-line mr-1\"></i>\n                      Pause\n                    </Button>\n                  ) : (\n                    <Button \n                      variant=\"success\" \n                      size=\"sm\" \n                      className=\"flex-1\"\n                      onClick={() => handleBotAction(bot.id, 'start')}\n                    >\n                      <i className=\"ri-play-line mr-1\"></i>\n                      Start\n                    </Button>\n                  )}\n                  <Button \n                    variant=\"danger\" \n                    size=\"sm\"\n                    onClick={() => handleBotAction(bot.id, 'stop')}\n                  >\n                    <i className=\"ri-stop-line\"></i>\n                  </Button>\n                  <Button \n                    variant=\"secondary\" \n                    size=\"sm\"\n                  >\n                    <i className=\"ri-settings-line\"></i>\n                  </Button>\n                </div>\n              </Card>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n      <Navigation />\n    </div>\n  );\n}\n"],"names":["BotsPage","navigate","useNavigate","bots","loading","startBot","stopBot","updateBot","useBots","filter","setFilter","useState","filteredBots","bot","getStatusColor","status","getRiskColor","risk","handleBotAction","botId","action","error","jsxs","jsx","Header","Button","Card","Navigation"],"mappings":"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"}