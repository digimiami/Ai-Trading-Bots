{"version":3,"file":"page-BqaVpBTU.js","sources":["../../src/components/bot/BotActivityLogs.tsx","../../src/pages/bot-activity/page.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport Card from '../../components/base/Card';\r\nimport Button from '../../components/base/Button';\r\nimport { BotActivityLog, BotActivity } from '../../hooks/useBotActivity';\r\n\r\ninterface BotActivityLogsProps {\r\n  activity: BotActivity;\r\n  onClearLogs: (botId: string) => void;\r\n  onSimulateActivity: (botId: string) => void;\r\n}\r\n\r\nexport default function BotActivityLogs({ activity, onClearLogs, onSimulateActivity }: BotActivityLogsProps) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [filter, setFilter] = useState<'all' | 'info' | 'warning' | 'error' | 'success'>('all');\r\n\r\n  const getLevelColor = (level: string) => {\r\n    switch (level) {\r\n      case 'info': return 'text-blue-600 bg-blue-50';\r\n      case 'warning': return 'text-yellow-600 bg-yellow-50';\r\n      case 'error': return 'text-red-600 bg-red-50';\r\n      case 'success': return 'text-green-600 bg-green-50';\r\n      default: return 'text-gray-600 bg-gray-50';\r\n    }\r\n  };\r\n\r\n  const getCategoryIcon = (category: string) => {\r\n    switch (category) {\r\n      case 'market': return 'ri-line-chart-line';\r\n      case 'trade': return 'ri-exchange-line';\r\n      case 'strategy': return 'ri-brain-line';\r\n      case 'system': return 'ri-settings-line';\r\n      case 'error': return 'ri-error-warning-line';\r\n      default: return 'ri-information-line';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'running': return 'ri-play-circle-fill text-green-500';\r\n      case 'paused': return 'ri-pause-circle-fill text-yellow-500';\r\n      case 'stopped': return 'ri-stop-circle-fill text-red-500';\r\n      default: return 'ri-question-mark-circle-fill text-gray-500';\r\n    }\r\n  };\r\n\r\n  const filteredLogs = activity.logs.filter(log => \r\n    filter === 'all' || log.level === filter\r\n  );\r\n\r\n  const formatTime = (timestamp: string) => {\r\n    return new Date(timestamp).toLocaleTimeString();\r\n  };\r\n\r\n  const formatDate = (timestamp: string) => {\r\n    return new Date(timestamp).toLocaleDateString();\r\n  };\r\n\r\n  return (\r\n    <Card className=\"p-4\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <i className={`${getStatusIcon(activity.status)} text-xl`}></i>\r\n          <div>\r\n            <h3 className=\"font-semibold text-gray-900\">{activity.botName}</h3>\r\n            <p className=\"text-sm text-gray-500\">\r\n              {activity.currentAction || 'No recent activity'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n            activity.isActive ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\r\n          }`}>\r\n            {activity.status}\r\n          </span>\r\n          <Button\r\n            variant=\"secondary\"\r\n            size=\"sm\"\r\n            onClick={() => setExpanded(!expanded)}\r\n          >\r\n            <i className={`ri-${expanded ? 'arrow-up' : 'arrow-down'}-line`}></i>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Activity Stats */}\r\n      <div className=\"grid grid-cols-4 gap-4 mb-4\">\r\n        <div className=\"text-center\">\r\n          <div className=\"text-lg font-bold text-blue-600\">{activity.logs.length}</div>\r\n          <div className=\"text-xs text-gray-500\">Total Logs</div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <div className=\"text-lg font-bold text-green-600\">{activity.successCount}</div>\r\n          <div className=\"text-xs text-gray-500\">Success</div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <div className=\"text-lg font-bold text-yellow-600\">{activity.logs.filter(l => l.level === 'warning').length}</div>\r\n          <div className=\"text-xs text-gray-500\">Warnings</div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <div className=\"text-lg font-bold text-red-600\">{activity.errorCount}</div>\r\n          <div className=\"text-xs text-gray-500\">Errors</div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Current Status */}\r\n      {activity.waitingFor && (\r\n        <div className=\"mb-4 p-3 bg-blue-50 rounded-lg\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <i className=\"ri-time-line text-blue-600\"></i>\r\n            <span className=\"text-sm text-blue-800\">\r\n              Waiting for: {activity.waitingFor}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Expanded Logs */}\r\n      {expanded && (\r\n        <div className=\"space-y-4\">\r\n          {/* Filter Buttons */}\r\n          <div className=\"flex space-x-2\">\r\n            {['all', 'info', 'warning', 'error', 'success'].map((level) => (\r\n              <button\r\n                key={level}\r\n                onClick={() => setFilter(level as any)}\r\n                className={`px-3 py-1 rounded-full text-xs font-medium ${\r\n                  filter === level\r\n                    ? 'bg-blue-600 text-white'\r\n                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\r\n                }`}\r\n              >\r\n                {level.charAt(0).toUpperCase() + level.slice(1)}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Logs List */}\r\n          <div className=\"max-h-96 overflow-y-auto space-y-2\">\r\n            {filteredLogs.length === 0 ? (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                <i className=\"ri-file-list-line text-2xl mb-2\"></i>\r\n                <p>No logs found</p>\r\n              </div>\r\n            ) : (\r\n              filteredLogs.map((log) => (\r\n                <div key={log.id} className=\"flex items-start space-x-3 p-3 bg-gray-50 rounded-lg\">\r\n                  <div className={`w-8 h-8 rounded-full flex items-center justify-center ${getLevelColor(log.level)}`}>\r\n                    <i className={`${getCategoryIcon(log.category)} text-sm`}></i>\r\n                  </div>\r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <div className=\"flex items-center justify-between mb-1\">\r\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${getLevelColor(log.level)}`}>\r\n                        {log.level}\r\n                      </span>\r\n                      <span className=\"text-xs text-gray-500\">\r\n                        {formatTime(log.timestamp)}\r\n                      </span>\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-900 mb-1\">{log.message}</p>\r\n                    {log.details && (\r\n                      <details className=\"text-xs text-gray-600\">\r\n                        <summary className=\"cursor-pointer hover:text-gray-800\">Details</summary>\r\n                        <pre className=\"mt-1 p-2 bg-white rounded border text-xs overflow-x-auto\">\r\n                          {JSON.stringify(log.details, null, 2)}\r\n                        </pre>\r\n                      </details>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n\r\n          {/* Action Buttons */}\r\n          <div className=\"flex space-x-2 pt-4 border-t border-gray-200\">\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={() => onSimulateActivity(activity.botId)}\r\n            >\r\n              <i className=\"ri-play-line mr-1\"></i>\r\n              Simulate Activity\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              size=\"sm\"\r\n              onClick={() => onClearLogs(activity.botId)}\r\n            >\r\n              <i className=\"ri-delete-bin-line mr-1\"></i>\r\n              Clear Logs\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import { useState } from 'react';\nimport Header from '../../components/feature/Header';\nimport Navigation from '../../components/feature/Navigation';\nimport Button from '../../components/base/Button';\nimport Card from '../../components/base/Card';\nimport { useBotActivity } from '../../hooks/useBotActivity';\nimport { useBots } from '../../hooks/useBots';\nimport BotActivityLogs from '../../components/bot/BotActivityLogs';\n\nexport default function BotActivityPage() {\n  const { bots } = useBots();\n  const { activities, loading, addLog, clearBotLogs, simulateBotActivity } = useBotActivity(bots);\n  const [filter, setFilter] = useState<'all' | 'running' | 'paused' | 'stopped'>('all');\n\n  const filteredActivities = activities.filter(activity => \n    filter === 'all' || activity.status === filter\n  );\n\n  const handleAddTestLog = async (botId: string) => {\n    await addLog(botId, {\n      level: 'info',\n      category: 'system',\n      message: 'Manual test log added',\n      details: { timestamp: new Date().toISOString(), source: 'manual' }\n    });\n  };\n\n  const handleSimulateError = async (botId: string) => {\n    await addLog(botId, {\n      level: 'error',\n      category: 'error',\n      message: 'Simulated error for testing',\n      details: { error: 'Connection timeout', retry: true }\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header \n        title=\"Bot Activity Logs\"\n        subtitle=\"Monitor bot operations and debug issues\"\n        rightAction={\n          <div className=\"flex space-x-2\">\n            <Button\n              variant=\"primary\"\n              size=\"sm\"\n              onClick={() => window.location.reload()}\n            >\n              <i className=\"ri-refresh-line mr-1\"></i>\n              Refresh\n            </Button>\n          </div>\n        }\n      />\n      \n      <div className=\"pt-20 pb-20 px-4 space-y-6\">\n        {/* Filter Tabs */}\n        <div className=\"flex space-x-2 overflow-x-auto\">\n          {['all', 'running', 'paused', 'stopped'].map((status) => (\n            <button\n              key={status}\n              onClick={() => setFilter(status as any)}\n              className={`px-4 py-2 rounded-full text-sm font-medium whitespace-nowrap ${\n                filter === status\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-white text-gray-600 border border-gray-200'\n              }`}\n            >\n              {status.charAt(0).toUpperCase() + status.slice(1)}\n            </button>\n          ))}\n        </div>\n\n        {/* Summary Stats */}\n        <div className=\"grid grid-cols-4 gap-4\">\n          <Card className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-blue-600\">{activities.length}</div>\n            <div className=\"text-sm text-gray-500\">Total Bots</div>\n          </Card>\n          <Card className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-green-600\">\n              {activities.filter(a => a.status === 'running').length}\n            </div>\n            <div className=\"text-sm text-gray-500\">Active</div>\n          </Card>\n          <Card className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-yellow-600\">\n              {activities.reduce((sum, a) => sum + a.logs.filter(l => l.level === 'warning').length, 0)}\n            </div>\n            <div className=\"text-sm text-gray-500\">Warnings</div>\n          </Card>\n          <Card className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-red-600\">\n              {activities.reduce((sum, a) => sum + a.errorCount, 0)}\n            </div>\n            <div className=\"text-sm text-gray-500\">Errors</div>\n          </Card>\n        </div>\n\n        {/* Bot Activities */}\n        <div className=\"space-y-4\">\n          {loading ? (\n            <div className=\"text-center py-12\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n              <p className=\"text-gray-600\">Loading bot activities...</p>\n            </div>\n          ) : filteredActivities.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <i className=\"ri-robot-line text-4xl text-gray-400 mb-4\"></i>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No bots found</h3>\n              <p className=\"text-gray-500 mb-4\">Create some bots to see their activity logs</p>\n            </div>\n          ) : (\n            filteredActivities.map((activity) => (\n              <BotActivityLogs\n                key={activity.botId}\n                activity={activity}\n                onClearLogs={clearBotLogs}\n                onSimulateActivity={simulateBotActivity}\n              />\n            ))\n          )}\n        </div>\n\n        {/* Debug Tools */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Debug Tools</h3>\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <h4 className=\"font-medium text-gray-700 mb-2\">Test Logging</h4>\n              <p className=\"text-sm text-gray-500 mb-3\">\n                Add test logs to verify the logging system is working\n              </p>\n              <div className=\"space-x-2\">\n                {activities.slice(0, 3).map((activity) => (\n                  <Button\n                    key={activity.botId}\n                    variant=\"secondary\"\n                    size=\"sm\"\n                    onClick={() => handleAddTestLog(activity.botId)}\n                  >\n                    Test {activity.botName}\n                  </Button>\n                ))}\n              </div>\n            </div>\n            <div>\n              <h4 className=\"font-medium text-gray-700 mb-2\">Error Simulation</h4>\n              <p className=\"text-sm text-gray-500 mb-3\">\n                Simulate errors to test error handling and logging\n              </p>\n              <div className=\"space-x-2\">\n                {activities.slice(0, 3).map((activity) => (\n                  <Button\n                    key={activity.botId}\n                    variant=\"danger\"\n                    size=\"sm\"\n                    onClick={() => handleSimulateError(activity.botId)}\n                  >\n                    Error {activity.botName}\n                  </Button>\n                ))}\n              </div>\n            </div>\n          </div>\n        </Card>\n      </div>\n\n      <Navigation />\n    </div>\n  );\n}\n"],"names":["BotActivityLogs","activity","onClearLogs","onSimulateActivity","expanded","setExpanded","useState","filter","setFilter","getLevelColor","level","getCategoryIcon","category","getStatusIcon","status","filteredLogs","log","formatTime","timestamp","jsxs","Card","jsx","Button","l","BotActivityPage","bots","useBots","activities","loading","addLog","clearBotLogs","simulateBotActivity","useBotActivity","filteredActivities","handleAddTestLog","botId","handleSimulateError","Header","a","sum","Navigation"],"mappings":"gTAWA,SAAwBA,EAAgB,CAAE,SAAAC,EAAU,YAAAC,EAAa,mBAAAC,GAA4C,CAC3G,KAAM,CAACC,EAAUC,CAAW,EAAIC,EAAAA,SAAS,EAAK,EACxC,CAACC,EAAQC,CAAS,EAAIF,EAAAA,SAA2D,KAAK,EAEtFG,EAAiBC,GAAkB,CACvC,OAAQA,EAAA,CACN,IAAK,OAAQ,MAAO,2BACpB,IAAK,UAAW,MAAO,+BACvB,IAAK,QAAS,MAAO,yBACrB,IAAK,UAAW,MAAO,6BACvB,QAAS,MAAO,0BAAA,CAEpB,EAEMC,EAAmBC,GAAqB,CAC5C,OAAQA,EAAA,CACN,IAAK,SAAU,MAAO,qBACtB,IAAK,QAAS,MAAO,mBACrB,IAAK,WAAY,MAAO,gBACxB,IAAK,SAAU,MAAO,mBACtB,IAAK,QAAS,MAAO,wBACrB,QAAS,MAAO,qBAAA,CAEpB,EAEMC,EAAiBC,GAAmB,CACxC,OAAQA,EAAA,CACN,IAAK,UAAW,MAAO,qCACvB,IAAK,SAAU,MAAO,uCACtB,IAAK,UAAW,MAAO,mCACvB,QAAS,MAAO,4CAAA,CAEpB,EAEMC,EAAed,EAAS,KAAK,OAAOe,GACxCT,IAAW,OAASS,EAAI,QAAUT,CAAA,EAG9BU,EAAcC,GACX,IAAI,KAAKA,CAAS,EAAE,mBAAA,EAO7B,OACEC,EAAAA,KAACC,EAAA,CAAK,UAAU,MACd,SAAA,CAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAE,MAAC,KAAE,UAAW,GAAGR,EAAcZ,EAAS,MAAM,CAAC,WAAY,SAC1D,MAAA,CACC,SAAA,CAAAoB,EAAAA,IAAC,KAAA,CAAG,UAAU,8BAA+B,SAAApB,EAAS,QAAQ,QAC7D,IAAA,CAAE,UAAU,wBACV,SAAAA,EAAS,eAAiB,oBAAA,CAC7B,CAAA,CAAA,CACF,CAAA,EACF,EACAkB,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAE,EAAAA,IAAC,OAAA,CAAK,UAAW,8CACfpB,EAAS,SAAW,8BAAgC,2BACtD,GACG,SAAAA,EAAS,MAAA,CACZ,EACAoB,EAAAA,IAACC,EAAA,CACC,QAAQ,YACR,KAAK,KACL,QAAS,IAAMjB,EAAY,CAACD,CAAQ,EAEpC,eAAC,IAAA,CAAE,UAAW,MAAMA,EAAW,WAAa,YAAY,OAAA,CAAS,CAAA,CAAA,CACnE,CAAA,CACF,CAAA,EACF,EAGAe,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAE,MAAC,MAAA,CAAI,UAAU,kCAAmC,SAAApB,EAAS,KAAK,OAAO,EACvEoB,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,YAAA,CAAU,CAAA,EACnD,EACAF,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAE,EAAAA,IAAC,MAAA,CAAI,UAAU,mCAAoC,SAAApB,EAAS,aAAa,EACzEoB,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,SAAA,CAAO,CAAA,EAChD,EACAF,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAE,EAAAA,IAAC,MAAA,CAAI,UAAU,oCAAqC,SAAApB,EAAS,KAAK,OAAOsB,GAAKA,EAAE,QAAU,SAAS,EAAE,OAAO,EAC5GF,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,UAAA,CAAQ,CAAA,EACjD,EACAF,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAE,EAAAA,IAAC,MAAA,CAAI,UAAU,iCAAkC,SAAApB,EAAS,WAAW,EACrEoB,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,QAAA,CAAM,CAAA,CAAA,CAC/C,CAAA,EACF,EAGCpB,EAAS,YACRoB,EAAAA,IAAC,MAAA,CAAI,UAAU,iCACb,SAAAF,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAE,UAAU,4BAAA,CAA6B,EAC1CF,EAAAA,KAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,CAAA,gBACxBlB,EAAS,UAAA,CAAA,CACzB,CAAA,CAAA,CACF,CAAA,CACF,EAIDG,GACCe,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAE,EAAAA,IAAC,MAAA,CAAI,UAAU,iBACZ,SAAA,CAAC,MAAO,OAAQ,UAAW,QAAS,SAAS,EAAE,IAAKX,GACnDW,EAAAA,IAAC,SAAA,CAEC,QAAS,IAAMb,EAAUE,CAAY,EACrC,UAAW,8CACTH,IAAWG,EACP,yBACA,6CACN,GAEC,SAAAA,EAAM,OAAO,CAAC,EAAE,cAAgBA,EAAM,MAAM,CAAC,CAAA,EARzCA,CAAA,CAUR,EACH,EAGAW,EAAAA,IAAC,MAAA,CAAI,UAAU,qCACZ,SAAAN,EAAa,SAAW,EACvBI,EAAAA,KAAC,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAE,UAAU,iCAAA,CAAkC,EAC/CA,EAAAA,IAAC,KAAE,SAAA,eAAA,CAAa,CAAA,CAAA,CAClB,EAEAN,EAAa,IAAKC,GAChBG,OAAC,MAAA,CAAiB,UAAU,uDAC1B,SAAA,CAAAE,MAAC,OAAI,UAAW,yDAAyDZ,EAAcO,EAAI,KAAK,CAAC,GAC/F,SAAAK,EAAAA,IAAC,IAAA,CAAE,UAAW,GAAGV,EAAgBK,EAAI,QAAQ,CAAC,WAAY,EAC5D,EACAG,EAAAA,KAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAE,EAAAA,IAAC,OAAA,CAAK,UAAW,8CAA8CZ,EAAcO,EAAI,KAAK,CAAC,GACpF,SAAAA,EAAI,KAAA,CACP,QACC,OAAA,CAAK,UAAU,wBACb,SAAAC,EAAWD,EAAI,SAAS,CAAA,CAC3B,CAAA,EACF,EACAK,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA8B,WAAI,QAAQ,EACtDL,EAAI,SACHG,OAAC,UAAA,CAAQ,UAAU,wBACjB,SAAA,CAAAE,EAAAA,IAAC,UAAA,CAAQ,UAAU,qCAAqC,SAAA,UAAO,EAC/DA,EAAAA,IAAC,MAAA,CAAI,UAAU,2DACZ,SAAA,KAAK,UAAUL,EAAI,QAAS,KAAM,CAAC,CAAA,CACtC,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EAtBQA,EAAI,EAuBd,CACD,EAEL,EAGAG,EAAAA,KAAC,MAAA,CAAI,UAAU,+CACb,SAAA,CAAAA,EAAAA,KAACG,EAAA,CACC,QAAQ,YACR,KAAK,KACL,QAAS,IAAMnB,EAAmBF,EAAS,KAAK,EAEhD,SAAA,CAAAoB,EAAAA,IAAC,IAAA,CAAE,UAAU,mBAAA,CAAoB,EAAI,mBAAA,CAAA,CAAA,EAGvCF,EAAAA,KAACG,EAAA,CACC,QAAQ,SACR,KAAK,KACL,QAAS,IAAMpB,EAAYD,EAAS,KAAK,EAEzC,SAAA,CAAAoB,EAAAA,IAAC,IAAA,CAAE,UAAU,yBAAA,CAA0B,EAAI,YAAA,CAAA,CAAA,CAE7C,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EAEJ,CAEJ,CC5LA,SAAwBG,GAAkB,CACxC,KAAM,CAAE,KAAAC,CAAA,EAASC,EAAA,EACX,CAAE,WAAAC,EAAY,QAAAC,EAAS,OAAAC,EAAQ,aAAAC,EAAc,oBAAAC,CAAA,EAAwBC,EAAeP,CAAI,EACxF,CAAClB,EAAQC,CAAS,EAAIF,EAAAA,SAAmD,KAAK,EAE9E2B,EAAqBN,EAAW,OAAO1B,GAC3CM,IAAW,OAASN,EAAS,SAAWM,CAAA,EAGpC2B,EAAmB,MAAOC,GAAkB,CAChD,MAAMN,EAAOM,EAAO,CAClB,MAAO,OACP,SAAU,SACV,QAAS,wBACT,QAAS,CAAE,UAAW,IAAI,OAAO,YAAA,EAAe,OAAQ,QAAA,CAAS,CAClE,CACH,EAEMC,EAAsB,MAAOD,GAAkB,CACnD,MAAMN,EAAOM,EAAO,CAClB,MAAO,QACP,SAAU,QACV,QAAS,8BACT,QAAS,CAAE,MAAO,qBAAsB,MAAO,EAAA,CAAK,CACrD,CACH,EAEA,OACEhB,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAE,EAAAA,IAACgB,EAAA,CACC,MAAM,oBACN,SAAS,0CACT,YACEhB,EAAAA,IAAC,MAAA,CAAI,UAAU,iBACb,SAAAF,EAAAA,KAACG,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IAAM,OAAO,SAAS,OAAA,EAE/B,SAAA,CAAAD,EAAAA,IAAC,IAAA,CAAE,UAAU,sBAAA,CAAuB,EAAI,SAAA,CAAA,CAAA,CAE1C,CACF,CAAA,CAAA,EAIJF,EAAAA,KAAC,MAAA,CAAI,UAAU,6BAEb,SAAA,CAAAE,EAAAA,IAAC,MAAA,CAAI,UAAU,iCACZ,SAAA,CAAC,MAAO,UAAW,SAAU,SAAS,EAAE,IAAKP,GAC5CO,EAAAA,IAAC,SAAA,CAEC,QAAS,IAAMb,EAAUM,CAAa,EACtC,UAAW,gEACTP,IAAWO,EACP,yBACA,+CACN,GAEC,SAAAA,EAAO,OAAO,CAAC,EAAE,cAAgBA,EAAO,MAAM,CAAC,CAAA,EAR3CA,CAAA,CAUR,EACH,EAGAK,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,EAAAA,KAACC,EAAA,CAAK,UAAU,kBACd,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,mCAAoC,SAAAM,EAAW,OAAO,EACrEN,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,YAAA,CAAU,CAAA,EACnD,EACAF,EAAAA,KAACC,EAAA,CAAK,UAAU,kBACd,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,oCACZ,SAAAM,EAAW,UAAYW,EAAE,SAAW,SAAS,EAAE,MAAA,CAClD,EACAjB,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,QAAA,CAAM,CAAA,EAC/C,EACAF,EAAAA,KAACC,EAAA,CAAK,UAAU,kBACd,SAAA,CAAAC,MAAC,OAAI,UAAU,qCACZ,WAAW,OAAO,CAACkB,EAAKD,IAAMC,EAAMD,EAAE,KAAK,UAAYf,EAAE,QAAU,SAAS,EAAE,OAAQ,CAAC,EAC1F,EACAF,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,UAAA,CAAQ,CAAA,EACjD,EACAF,EAAAA,KAACC,EAAA,CAAK,UAAU,kBACd,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,kCACZ,SAAAM,EAAW,OAAO,CAACY,EAAKD,IAAMC,EAAMD,EAAE,WAAY,CAAC,EACtD,EACAjB,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,QAAA,CAAM,CAAA,CAAA,CAC/C,CAAA,EACF,EAGAA,EAAAA,IAAC,OAAI,UAAU,YACZ,WACCF,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAE,EAAAA,IAAC,MAAA,CAAI,UAAU,6EAAA,CAA8E,EAC7FA,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,2BAAA,CAAyB,CAAA,EACxD,EACEY,EAAmB,SAAW,EAChCd,OAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAE,UAAU,2CAAA,CAA4C,EACzDA,EAAAA,IAAC,KAAA,CAAG,UAAU,yCAAyC,SAAA,gBAAa,EACpEA,EAAAA,IAAC,IAAA,CAAE,UAAU,qBAAqB,SAAA,6CAAA,CAA2C,CAAA,CAAA,CAC/E,EAEAY,EAAmB,IAAKhC,GACtBoB,EAAAA,IAACrB,EAAA,CAEC,SAAAC,EACA,YAAa6B,EACb,mBAAoBC,CAAA,EAHf9B,EAAS,KAAA,CAKjB,EAEL,EAGAkB,EAAAA,KAACC,EAAA,CAAK,UAAU,MACd,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,2CAA2C,SAAA,cAAW,EACpEF,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,eAAY,EAC3DA,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,wDAE1C,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,YACZ,SAAAM,EAAW,MAAM,EAAG,CAAC,EAAE,IAAK1B,GAC3BkB,EAAAA,KAACG,EAAA,CAEC,QAAQ,YACR,KAAK,KACL,QAAS,IAAMY,EAAiBjC,EAAS,KAAK,EAC/C,SAAA,CAAA,QACOA,EAAS,OAAA,CAAA,EALVA,EAAS,KAAA,CAOjB,CAAA,CACH,CAAA,EACF,SACC,MAAA,CACC,SAAA,CAAAoB,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,mBAAgB,EAC/DA,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,qDAE1C,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,YACZ,SAAAM,EAAW,MAAM,EAAG,CAAC,EAAE,IAAK1B,GAC3BkB,EAAAA,KAACG,EAAA,CAEC,QAAQ,SACR,KAAK,KACL,QAAS,IAAMc,EAAoBnC,EAAS,KAAK,EAClD,SAAA,CAAA,SACQA,EAAS,OAAA,CAAA,EALXA,EAAS,KAAA,CAOjB,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,QAECuC,EAAA,CAAA,CAAW,CAAA,EACd,CAEJ"}