{"version":3,"file":"page-fe60e5e3.js","sources":["../../src/pages/create-bot/page.tsx"],"sourcesContent":["\n\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '../../components/base/Button';\nimport Card from '../../components/base/Card';\nimport Header from '../../components/feature/Header';\nimport type { TradingStrategy, AdvancedStrategyConfig } from '../../types/trading';\nimport { useBots } from '../../hooks/useBots';\n\nexport default function CreateBotPage() {\n  const navigate = useNavigate();\n  const { createBot } = useBots();\n  \n  // Check if coming from backtest\n  const location = window.history.state?.usr || {};\n  const isFromBacktest = location.fromBacktest;\n  const backtestResults = location.backtestResults;\n  const backtestConfig = location.backtestConfig;\n  \n  const [formData, setFormData] = useState({\n    name: location.botName || '',\n    exchange: backtestConfig?.exchange || 'bybit' as 'bybit' | 'okx',\n    tradingType: backtestConfig?.tradingType || 'spot' as 'spot' | 'futures',\n    symbol: 'BTCUSDT',\n    customPairs: '',\n    useCustomPairs: false,\n    timeframe: backtestConfig?.timeframe || '1h' as '1m' | '5m' | '15m' | '1h' | '2h' | '3h' | '4h' | '1d' | '1w',\n    leverage: backtestConfig?.leverage || 5,\n    riskLevel: backtestConfig?.riskLevel || 'medium' as 'low' | 'medium' | 'high',\n    tradeAmount: backtestConfig?.tradeAmount || 100, // Amount in USD per trade\n    stopLoss: backtestConfig?.stopLoss || 2.0,\n    takeProfit: backtestConfig?.takeProfit || 4.0\n  });\n\n  const [strategy, setStrategy] = useState<TradingStrategy>(location.backtestStrategy || {\n    rsiThreshold: 70,\n    adxThreshold: 25,\n    bbWidthThreshold: 0.02,\n    emaSlope: 0.5,\n    atrPercentage: 2.5,\n    vwapDistance: 1.2,\n    momentumThreshold: 0.8,\n    useMLPrediction: true,\n    minSamplesForML: 100\n  });\n\n  const [advancedConfig, setAdvancedConfig] = useState<AdvancedStrategyConfig>(location.backtestAdvancedConfig || {\n    // Directional Bias\n    bias_mode: 'auto',\n    htf_timeframe: '4h',\n    htf_trend_indicator: 'EMA200',\n    ema_fast_period: 50,\n    require_price_vs_trend: 'any',\n    adx_min_htf: 23,\n    require_adx_rising: true,\n    \n    // Regime Filter\n    regime_mode: 'auto',\n    adx_trend_min: 25,\n    adx_meanrev_max: 19,\n    \n    // Session/Timing\n    session_filter_enabled: false,\n    allowed_hours_utc: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],\n    cooldown_bars: 8,\n    \n    // Volatility/Liquidity Gates\n    atr_percentile_min: 20,\n    bb_width_min: 0.012,\n    bb_width_max: 0.03,\n    min_24h_volume_usd: 500000000,\n    max_spread_bps: 3,\n    \n    // Risk & Exits\n    risk_per_trade_pct: 0.75,\n    daily_loss_limit_pct: 3.0,\n    weekly_loss_limit_pct: 6.0,\n    max_trades_per_day: 8,\n    max_concurrent: 2,\n    sl_atr_mult: 1.3,\n    tp1_r: 1.0,\n    tp2_r: 2.0,\n    tp1_size: 0.5,\n    breakeven_at_r: 0.8,\n    trail_after_tp1_atr: 1.0,\n    time_stop_hours: 48,\n    \n    // Technical Indicators\n    rsi_period: 14,\n    rsi_oversold: 30,\n    rsi_overbought: 70,\n    \n    // ML/AI Settings\n    use_ml_prediction: true,\n    ml_confidence_threshold: 0.6,\n    ml_min_samples: 100\n  });\n\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const [isCreating, setIsCreating] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const popularSymbols = [\n    'BTCUSDT', 'ETHUSDT', 'SOLUSDT', 'ADAUSDT', 'DOTUSDT', 'AVAXUSDT',\n    'BNBUSDT', 'XRPUSDT', 'MATICUSDT', 'LINKUSDT', 'UNIUSDT', 'LTCUSDT'\n  ];\n\n  // Exchange balance validation removed - will be handled by real API integration\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsCreating(true);\n    setError(null);\n    \n    try {\n      // Parse custom pairs if enabled\n      let symbols: string[] = [];\n      if (formData.useCustomPairs && formData.customPairs.trim()) {\n        // Split by new lines or commas\n        symbols = formData.customPairs\n          .split(/[\\n,]/)\n          .map(pair => pair.trim().toUpperCase())\n          .filter(pair => pair.length > 0);\n        \n        if (symbols.length === 0) {\n          throw new Error('Please enter at least one trading pair');\n        }\n      } else {\n        symbols = [formData.symbol];\n      }\n\n      // Debug: Log the form data being sent\n      const botData = {\n        name: formData.name,\n        exchange: formData.exchange,\n        tradingType: formData.tradingType,\n        symbol: formData.useCustomPairs ? symbols[0] : formData.symbol, // Keep for backward compatibility\n        symbols: symbols, // New field for multiple symbols\n        customPairs: formData.useCustomPairs ? formData.customPairs : undefined,\n        timeframe: formData.timeframe,\n        leverage: formData.leverage,\n        riskLevel: formData.riskLevel,\n        tradeAmount: formData.tradeAmount,\n        stopLoss: formData.stopLoss,\n        takeProfit: formData.takeProfit,\n        strategy: strategy,\n        strategyConfig: advancedConfig,  // Include advanced configuration\n        // Initialize with default values\n        status: 'stopped' as const,\n        pnl: 0,\n        pnlPercentage: 0,\n        totalTrades: 0,\n        winRate: 0,\n        lastTradeAt: undefined\n      };\n      \n      console.log('Frontend: Sending bot data:', botData);\n      console.log('Frontend: Exchange value:', formData.exchange, 'Type:', typeof formData.exchange);\n      console.log('Frontend: Symbols to trade:', symbols);\n      \n      // Create bot using the hook\n      await createBot(botData);\n      \n      // Navigate back to bots page with success message\n      const pairsMessage = symbols.length > 1 \n        ? `Bot \"${formData.name}\" created with ${symbols.length} trading pairs!` \n        : `Bot \"${formData.name}\" created successfully!`;\n      navigate('/bots', { state: { message: pairsMessage } });\n    } catch (error: any) {\n      setError(error.message || 'Failed to create bot');\n    } finally {\n      setIsCreating(false);\n    }\n  };\n\n  const handleInputChange = (field: string, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const handleStrategyChange = (field: keyof TradingStrategy, value: any) => {\n    setStrategy(prev => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header title=\"Create New Bot\" />\n      \n      <div className=\"pt-16 pb-6 px-4\">\n        <div className=\"max-w-2xl mx-auto\">\n          <div className=\"flex items-center mb-6\">\n            <button\n              onClick={() => navigate('/bots')}\n              className=\"mr-3 p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n            >\n              <i className=\"ri-arrow-left-line text-xl\"></i>\n            </button>\n            <h1 className=\"text-2xl font-bold text-gray-900\">Create New Bot</h1>\n          </div>\n\n          {error && (\n            <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n              <div className=\"flex items-center\">\n                <i className=\"ri-error-warning-line text-red-500 mr-2\"></i>\n                <span className=\"text-red-700\">{error}</span>\n              </div>\n            </div>\n          )}\n\n          {/* Backtest Results Banner */}\n          {isFromBacktest && backtestResults && (\n            <Card className=\"mb-6 bg-gradient-to-r from-green-50 to-blue-50 border-green-200\">\n              <div className=\"p-4\">\n                <div className=\"flex items-center mb-3\">\n                  <i className=\"ri-test-tube-line text-2xl text-green-600 mr-2\"></i>\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Creating Bot from Backtest Results</h3>\n                </div>\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-3\">\n                  <div>\n                    <div className=\"text-sm text-gray-500\">Win Rate</div>\n                    <div className=\"text-2xl font-bold text-green-600\">{backtestResults.win_rate?.toFixed(1)}%</div>\n                  </div>\n                  <div>\n                    <div className=\"text-sm text-gray-500\">Total PnL</div>\n                    <div className=\"text-2xl font-bold text-purple-600\">${backtestResults.total_pnl?.toFixed(2)}</div>\n                  </div>\n                  <div>\n                    <div className=\"text-sm text-gray-500\">Total Trades</div>\n                    <div className=\"text-2xl font-bold text-blue-600\">{backtestResults.total_trades}</div>\n                  </div>\n                  <div>\n                    <div className=\"text-sm text-gray-500\">Sharpe Ratio</div>\n                    <div className=\"text-2xl font-bold text-orange-600\">{backtestResults.sharpe_ratio?.toFixed(2)}</div>\n                  </div>\n                </div>\n                <p className=\"text-sm text-gray-600\">\n                  This configuration is based on a successful backtest. Review and adjust settings as needed before creating your bot.\n                </p>\n              </div>\n            </Card>\n          )}\n\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {/* Basic Configuration */}\n            <Card className=\"p-6\">\n              <h2 className=\"text-lg font-semibold mb-4 text-gray-900\">Basic Configuration</h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Bot Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.name}\n                    onChange={(e) => handleInputChange('name', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"Enter bot name\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Exchange\n                  </label>\n                  <select\n                    value={formData.exchange}\n                    onChange={(e) => handleInputChange('exchange', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"bybit\">Bybit</option>\n                    <option value=\"okx\">OKX</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Trading Type\n                  </label>\n                  <select\n                    value={formData.tradingType}\n                    onChange={(e) => handleInputChange('tradingType', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"spot\">Spot Trading</option>\n                    <option value=\"futures\">Futures Trading</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Trading Pair Mode\n                  </label>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center\">\n                      <input\n                        type=\"radio\"\n                        name=\"pairMode\"\n                        checked={!formData.useCustomPairs}\n                        onChange={() => handleInputChange('useCustomPairs', false)}\n                        className=\"mr-2\"\n                      />\n                      <label className=\"text-sm text-gray-700\">Select from popular pairs</label>\n                    </div>\n                    \n                    {!formData.useCustomPairs ? (\n                      <select\n                        value={formData.symbol}\n                        onChange={(e) => handleInputChange('symbol', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      >\n                        {popularSymbols.map(symbol => (\n                          <option key={symbol} value={symbol}>{symbol}</option>\n                        ))}\n                      </select>\n                    ) : (\n                      <div className=\"space-y-2\">\n                        <textarea\n                          value={formData.customPairs}\n                          onChange={(e) => handleInputChange('customPairs', e.target.value)}\n                          placeholder=\"Enter pairs separated by comma or new line&#10;Example: BTCUSDT, ETHUSDT, SOLUSDT\"\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                          rows={4}\n                          required={formData.useCustomPairs}\n                        />\n                        <p className=\"text-xs text-gray-500\">\n                          Enter trading pairs separated by commas (e.g., BTCUSDT, ETHUSDT, SOLUSDT) or one per line\n                        </p>\n                      </div>\n                    )}\n                    \n                    <div className=\"flex items-center\">\n                      <input\n                        type=\"radio\"\n                        name=\"pairMode\"\n                        checked={formData.useCustomPairs}\n                        onChange={() => handleInputChange('useCustomPairs', true)}\n                        className=\"mr-2\"\n                      />\n                      <label className=\"text-sm text-gray-700\">Use custom pairs</label>\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Time Frame\n                  </label>\n                  <select\n                    value={formData.timeframe}\n                    onChange={(e) => handleInputChange('timeframe', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"1m\">1 Minute</option>\n                    <option value=\"5m\">5 Minutes</option>\n                    <option value=\"15m\">15 Minutes</option>\n                    <option value=\"1h\">1 Hour</option>\n                    <option value=\"2h\">2 Hours</option>\n                    <option value=\"3h\">3 Hours</option>\n                    <option value=\"4h\">4 Hours</option>\n                    <option value=\"1d\">1 Day</option>\n                    <option value=\"1w\">1 Week</option>\n                  </select>\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Chart interval for technical analysis\n                  </p>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Leverage\n                  </label>\n                  <select\n                    value={formData.leverage}\n                    onChange={(e) => handleInputChange('leverage', parseInt(e.target.value))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value={1}>1x</option>\n                    <option value={2}>2x</option>\n                    <option value={3}>3x</option>\n                    <option value={5}>5x</option>\n                    <option value={10}>10x</option>\n                    <option value={20}>20x</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Risk Level\n                  </label>\n                  <select\n                    value={formData.riskLevel}\n                    onChange={(e) => handleInputChange('riskLevel', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"low\">Low Risk</option>\n                    <option value=\"medium\">Medium Risk</option>\n                    <option value=\"high\">High Risk</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Trade Amount (USD)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={formData.tradeAmount}\n                    onChange={(e) => handleInputChange('tradeAmount', parseFloat(e.target.value))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    min=\"10\"\n                    max=\"10000\"\n                    step=\"10\"\n                    required\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Base trade amount in USD (will be multiplied by leverage and risk level)\n                  </p>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Stop Loss (%)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={(formData as any).stopLoss}\n                    onChange={(e) => handleInputChange('stopLoss', parseFloat(e.target.value))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    min=\"0.5\"\n                    max=\"10\"\n                    step=\"0.5\"\n                    required\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Maximum loss percentage before closing position\n                  </p>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Take Profit (%)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={(formData as any).takeProfit}\n                    onChange={(e) => handleInputChange('takeProfit', parseFloat(e.target.value))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    min=\"1\"\n                    max=\"20\"\n                    step=\"0.5\"\n                    required\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Target profit percentage before closing position\n                  </p>\n                </div>\n              </div>\n            </Card>\n\n            {/* Strategy Configuration */}\n            <Card className=\"p-6\">\n              <h2 className=\"text-lg font-semibold mb-4 text-gray-900\">Strategy Parameters</h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    RSI Threshold\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={strategy.rsiThreshold}\n                    onChange={(e) => handleStrategyChange('rsiThreshold', parseFloat(e.target.value))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    min=\"30\"\n                    max=\"90\"\n                    step=\"5\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    ADX Threshold\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={strategy.adxThreshold}\n                    onChange={(e) => handleStrategyChange('adxThreshold', parseFloat(e.target.value))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    min=\"10\"\n                    max=\"50\"\n                    step=\"5\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    BB Width Threshold\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={strategy.bbWidthThreshold}\n                    onChange={(e) => handleStrategyChange('bbWidthThreshold', parseFloat(e.target.value))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    min=\"0.01\"\n                    max=\"0.1\"\n                    step=\"0.005\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    EMA Slope\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={strategy.emaSlope}\n                    onChange={(e) => handleStrategyChange('emaSlope', parseFloat(e.target.value))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    min=\"0.1\"\n                    max=\"2\"\n                    step=\"0.1\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    ATR Percentage\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={strategy.atrPercentage}\n                    onChange={(e) => handleStrategyChange('atrPercentage', parseFloat(e.target.value))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    min=\"1\"\n                    max=\"10\"\n                    step=\"0.5\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    VWAP Distance\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={strategy.vwapDistance}\n                    onChange={(e) => handleStrategyChange('vwapDistance', parseFloat(e.target.value))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    min=\"0.5\"\n                    max=\"3\"\n                    step=\"0.1\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Momentum Threshold\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={strategy.momentumThreshold}\n                    onChange={(e) => handleStrategyChange('momentumThreshold', parseFloat(e.target.value))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    min=\"0.1\"\n                    max=\"2\"\n                    step=\"0.1\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Min Samples for ML\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={strategy.minSamplesForML}\n                    onChange={(e) => handleStrategyChange('minSamplesForML', parseInt(e.target.value))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    min=\"50\"\n                    max=\"500\"\n                    step=\"25\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"mt-4\">\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={strategy.useMLPrediction}\n                    onChange={(e) => handleStrategyChange('useMLPrediction', e.target.checked)}\n                    className=\"mr-2 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                  />\n                  <span className=\"text-sm font-medium text-gray-700\">\n                    Enable ML Prediction (fallback to rules until min samples)\n                  </span>\n                </label>\n              </div>\n            </Card>\n\n            {/* Advanced Configuration - Collapsible */}\n            <Card className=\"p-6\">\n              <button\n                type=\"button\"\n                onClick={() => setShowAdvanced(!showAdvanced)}\n                className=\"w-full flex items-center justify-between text-left\"\n              >\n                <h2 className=\"text-lg font-semibold text-gray-900\">\n                  ⚙️ Advanced Strategy Configuration\n                </h2>\n                <i className={`ri-arrow-${showAdvanced ? 'up' : 'down'}-s-line text-2xl text-gray-600`}></i>\n              </button>\n              \n              {showAdvanced && (\n                <div className=\"mt-6 space-y-6\">\n                  {/* Directional Bias */}\n                  <div className=\"border-l-4 border-purple-500 pl-4\">\n                    <h3 className=\"text-md font-semibold text-gray-800 mb-3\">🎯 Directional Bias</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Bias Mode\n                        </label>\n                        <select\n                          value={advancedConfig.bias_mode}\n                          onChange={(e) => setAdvancedConfig(prev => ({ ...prev, bias_mode: e.target.value as any }))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                        >\n                          <option value=\"auto\">Auto (Follow HTF Trend)</option>\n                          <option value=\"long-only\">Long Only</option>\n                          <option value=\"short-only\">Short Only</option>\n                          <option value=\"both\">Both Directions</option>\n                        </select>\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          HTF Timeframe\n                        </label>\n                        <select\n                          value={advancedConfig.htf_timeframe}\n                          onChange={(e) => setAdvancedConfig(prev => ({ ...prev, htf_timeframe: e.target.value as any }))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                        >\n                          <option value=\"4h\">4 Hours</option>\n                          <option value=\"1d\">1 Day</option>\n                          <option value=\"1h\">1 Hour</option>\n                        </select>\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          HTF Trend Indicator\n                        </label>\n                        <select\n                          value={advancedConfig.htf_trend_indicator}\n                          onChange={(e) => setAdvancedConfig(prev => ({ ...prev, htf_trend_indicator: e.target.value as any }))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                        >\n                          <option value=\"EMA200\">EMA 200</option>\n                          <option value=\"SMA200\">SMA 200</option>\n                          <option value=\"Supertrend\">Supertrend</option>\n                        </select>\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          ADX Min (HTF): {advancedConfig.adx_min_htf}\n                        </label>\n                        <input\n                          type=\"range\"\n                          value={advancedConfig.adx_min_htf}\n                          onChange={(e) => setAdvancedConfig(prev => ({ ...prev, adx_min_htf: parseFloat(e.target.value) }))}\n                          className=\"w-full\"\n                          min=\"15\"\n                          max=\"35\"\n                          step=\"1\"\n                        />\n                        <p className=\"text-xs text-gray-500\">Minimum ADX for trend confirmation</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Regime Filter */}\n                  <div className=\"border-l-4 border-blue-500 pl-4\">\n                    <h3 className=\"text-md font-semibold text-gray-800 mb-3\">📊 Regime Filter</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Regime Mode\n                        </label>\n                        <select\n                          value={advancedConfig.regime_mode}\n                          onChange={(e) => setAdvancedConfig(prev => ({ ...prev, regime_mode: e.target.value as any }))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                        >\n                          <option value=\"auto\">Auto Detect</option>\n                          <option value=\"trend\">Trend Only</option>\n                          <option value=\"mean-reversion\">Mean Reversion Only</option>\n                        </select>\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          ADX Trend Min: {advancedConfig.adx_trend_min}\n                        </label>\n                        <input\n                          type=\"range\"\n                          value={advancedConfig.adx_trend_min}\n                          onChange={(e) => setAdvancedConfig(prev => ({ ...prev, adx_trend_min: parseFloat(e.target.value) }))}\n                          className=\"w-full\"\n                          min=\"20\"\n                          max=\"35\"\n                          step=\"1\"\n                        />\n                        <p className=\"text-xs text-gray-500\">ADX ≥ this = trending</p>\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          ADX Mean Rev Max: {advancedConfig.adx_meanrev_max}\n                        </label>\n                        <input\n                          type=\"range\"\n                          value={advancedConfig.adx_meanrev_max}\n                          onChange={(e) => setAdvancedConfig(prev => ({ ...prev, adx_meanrev_max: parseFloat(e.target.value) }))}\n                          className=\"w-full\"\n                          min=\"15\"\n                          max=\"25\"\n                          step=\"1\"\n                        />\n                        <p className=\"text-xs text-gray-500\">ADX ≤ this = ranging</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Risk Management */}\n                  <div className=\"border-l-4 border-red-500 pl-4\">\n                    <h3 className=\"text-md font-semibold text-gray-800 mb-3\">🛡️ Risk Management</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Risk Per Trade: {advancedConfig.risk_per_trade_pct}%\n                        </label>\n                        <input\n                          type=\"range\"\n                          value={advancedConfig.risk_per_trade_pct}\n                          onChange={(e) => setAdvancedConfig(prev => ({ ...prev, risk_per_trade_pct: parseFloat(e.target.value) }))}\n                          className=\"w-full\"\n                          min=\"0.25\"\n                          max=\"2.0\"\n                          step=\"0.25\"\n                        />\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Daily Loss Limit: {advancedConfig.daily_loss_limit_pct}%\n                        </label>\n                        <input\n                          type=\"range\"\n                          value={advancedConfig.daily_loss_limit_pct}\n                          onChange={(e) => setAdvancedConfig(prev => ({ ...prev, daily_loss_limit_pct: parseFloat(e.target.value) }))}\n                          className=\"w-full\"\n                          min=\"1\"\n                          max=\"10\"\n                          step=\"0.5\"\n                        />\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Max Trades/Day: {advancedConfig.max_trades_per_day}\n                        </label>\n                        <input\n                          type=\"range\"\n                          value={advancedConfig.max_trades_per_day}\n                          onChange={(e) => setAdvancedConfig(prev => ({ ...prev, max_trades_per_day: parseInt(e.target.value) }))}\n                          className=\"w-full\"\n                          min=\"2\"\n                          max=\"20\"\n                          step=\"1\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Exit Strategy */}\n                  <div className=\"border-l-4 border-green-500 pl-4\">\n                    <h3 className=\"text-md font-semibold text-gray-800 mb-3\">🎯 Exit Strategy</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          TP1 (R): {advancedConfig.tp1_r}\n                        </label>\n                        <input\n                          type=\"range\"\n                          value={advancedConfig.tp1_r}\n                          onChange={(e) => setAdvancedConfig(prev => ({ ...prev, tp1_r: parseFloat(e.target.value) }))}\n                          className=\"w-full\"\n                          min=\"0.5\"\n                          max=\"3.0\"\n                          step=\"0.25\"\n                        />\n                        <p className=\"text-xs text-gray-500\">First take profit (R = Risk units)</p>\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          TP2 (R): {advancedConfig.tp2_r}\n                        </label>\n                        <input\n                          type=\"range\"\n                          value={advancedConfig.tp2_r}\n                          onChange={(e) => setAdvancedConfig(prev => ({ ...prev, tp2_r: parseFloat(e.target.value) }))}\n                          className=\"w-full\"\n                          min=\"1.0\"\n                          max=\"5.0\"\n                          step=\"0.25\"\n                        />\n                        <p className=\"text-xs text-gray-500\">Second take profit</p>\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          TP1 Size: {(advancedConfig.tp1_size * 100).toFixed(0)}%\n                        </label>\n                        <input\n                          type=\"range\"\n                          value={advancedConfig.tp1_size}\n                          onChange={(e) => setAdvancedConfig(prev => ({ ...prev, tp1_size: parseFloat(e.target.value) }))}\n                          className=\"w-full\"\n                          min=\"0.25\"\n                          max=\"0.75\"\n                          step=\"0.05\"\n                        />\n                        <p className=\"text-xs text-gray-500\">% to close at TP1</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Quick Presets */}\n                  <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                    <h4 className=\"font-semibold text-blue-900 mb-3\">⚡ Quick Presets</h4>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\n                      <button\n                        type=\"button\"\n                        onClick={() => setAdvancedConfig({\n                          ...advancedConfig,\n                          bias_mode: 'auto',\n                          regime_mode: 'trend',\n                          risk_per_trade_pct: 0.5,\n                          max_trades_per_day: 6,\n                          tp1_r: 1.5,\n                          tp2_r: 3.0\n                        })}\n                        className=\"px-4 py-2 bg-white border-2 border-blue-300 text-blue-700 rounded-lg hover:bg-blue-50 font-medium\"\n                      >\n                        🐢 Conservative\n                      </button>\n                      <button\n                        type=\"button\"\n                        onClick={() => setAdvancedConfig({\n                          ...advancedConfig,\n                          bias_mode: 'auto',\n                          regime_mode: 'auto',\n                          risk_per_trade_pct: 0.75,\n                          max_trades_per_day: 8,\n                          tp1_r: 1.0,\n                          tp2_r: 2.0\n                        })}\n                        className=\"px-4 py-2 bg-white border-2 border-blue-300 text-blue-700 rounded-lg hover:bg-blue-50 font-medium\"\n                      >\n                        ⚖️ Balanced\n                      </button>\n                      <button\n                        type=\"button\"\n                        onClick={() => setAdvancedConfig({\n                          ...advancedConfig,\n                          bias_mode: 'both',\n                          regime_mode: 'auto',\n                          risk_per_trade_pct: 1.0,\n                          max_trades_per_day: 12,\n                          tp1_r: 0.8,\n                          tp2_r: 1.5\n                        })}\n                        className=\"px-4 py-2 bg-white border-2 border-blue-300 text-blue-700 rounded-lg hover:bg-blue-50 font-medium\"\n                      >\n                        🚀 Aggressive\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </Card>\n\n            {/* Action Buttons */}\n            <div className=\"flex gap-4\">\n              <Button\n                type=\"button\"\n                variant=\"secondary\"\n                onClick={() => navigate('/bots')}\n                className=\"flex-1\"\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"primary\"\n                loading={isCreating}\n                className=\"flex-1\"\n              >\n                {isCreating ? 'Creating Bot...' : 'Create Bot'}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n"],"names":["CreateBotPage","navigate","useNavigate","createBot","useBots","location","_a","isFromBacktest","backtestResults","backtestConfig","formData","setFormData","useState","strategy","setStrategy","advancedConfig","setAdvancedConfig","showAdvanced","setShowAdvanced","isCreating","setIsCreating","error","setError","popularSymbols","handleSubmit","e","symbols","pair","botData","pairsMessage","handleInputChange","field","value","prev","handleStrategyChange","jsxs","jsx","Header","Card","_b","_c","symbol","Button"],"mappings":"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"}