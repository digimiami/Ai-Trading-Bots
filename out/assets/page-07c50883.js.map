{"version":3,"file":"page-07c50883.js","sources":["../../src/hooks/useTelegram.ts","../../src/components/settings/TelegramSettings.tsx","../../src/hooks/useApiKeys.ts","../../src/hooks/useProfile.ts","../../src/pages/settings/page.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { supabase } from '../lib/supabase';\r\n\r\ninterface TelegramConfig {\r\n  bot_token: string;\r\n  chat_id: string;\r\n  enabled: boolean;\r\n  notifications: {\r\n    trade_executed: boolean;\r\n    bot_started: boolean;\r\n    bot_stopped: boolean;\r\n    error_occurred: boolean;\r\n    daily_summary: boolean;\r\n    profit_alert: boolean;\r\n    loss_alert: boolean;\r\n  };\r\n}\r\n\r\nexport function useTelegram() {\r\n  const [config, setConfig] = useState<TelegramConfig | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const fetchConfig = async () => {\r\n    try {\r\n      const { data: { session } } = await supabase.auth.getSession();\r\n      if (!session) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(\r\n        `${import.meta.env.VITE_PUBLIC_SUPABASE_URL}/functions/v1/telegram-notifier?action=get_config`,\r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${session.access_token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch Telegram configuration');\r\n      }\r\n\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        setConfig(result.config);\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Error fetching Telegram config:', err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const saveConfig = async (configData: Partial<TelegramConfig>) => {\r\n    try {\r\n      const { data: { session } } = await supabase.auth.getSession();\r\n      if (!session) {\r\n        throw new Error('Not authenticated');\r\n      }\r\n\r\n      const response = await fetch(\r\n        `${import.meta.env.VITE_PUBLIC_SUPABASE_URL}/functions/v1/telegram-notifier?action=save_config`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${session.access_token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(configData)\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to save Telegram configuration');\r\n      }\r\n\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        setConfig(result.config);\r\n        return { success: true, message: result.message };\r\n      }\r\n      throw new Error('Failed to save configuration');\r\n    } catch (err: any) {\r\n      console.error('Error saving Telegram config:', err);\r\n      return { success: false, message: err.message };\r\n    }\r\n  };\r\n\r\n  const sendTestMessage = async () => {\r\n    try {\r\n      const { data: { session } } = await supabase.auth.getSession();\r\n      if (!session) {\r\n        throw new Error('Not authenticated');\r\n      }\r\n\r\n      const response = await fetch(\r\n        `${import.meta.env.VITE_PUBLIC_SUPABASE_URL}/functions/v1/telegram-notifier?action=test`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${session.access_token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({})\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to send test message');\r\n      }\r\n\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        return { success: true, message: result.message };\r\n      }\r\n      throw new Error('Failed to send test message');\r\n    } catch (err: any) {\r\n      console.error('Error sending test message:', err);\r\n      return { success: false, message: err.message };\r\n    }\r\n  };\r\n\r\n  const sendNotification = async (type: string, data: any) => {\r\n    try {\r\n      const { data: { session } } = await supabase.auth.getSession();\r\n      if (!session) {\r\n        throw new Error('Not authenticated');\r\n      }\r\n\r\n      const response = await fetch(\r\n        `${import.meta.env.VITE_PUBLIC_SUPABASE_URL}/functions/v1/telegram-notifier?action=send`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${session.access_token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            notification_type: type,\r\n            data: data\r\n          })\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to send notification');\r\n      }\r\n\r\n      const result = await response.json();\r\n      return result.success;\r\n    } catch (err: any) {\r\n      console.error('Error sending notification:', err);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchConfig();\r\n  }, []);\r\n\r\n  return {\r\n    config,\r\n    loading,\r\n    error,\r\n    saveConfig,\r\n    sendTestMessage,\r\n    sendNotification,\r\n    refreshConfig: fetchConfig\r\n  };\r\n}\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport Card from '../base/Card';\r\nimport { useTelegram } from '../../hooks/useTelegram';\r\n\r\nexport default function TelegramSettings() {\r\n  const { config: telegramConfig, loading, saveConfig, sendTestMessage } = useTelegram();\r\n  const [showConfig, setShowConfig] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [isTesting, setIsTesting] = useState(false);\r\n  \r\n  const [settings, setSettings] = useState({\r\n    bot_token: '',\r\n    chat_id: '',\r\n    enabled: true,\r\n    notifications: {\r\n      trade_executed: true,\r\n      bot_started: true,\r\n      bot_stopped: true,\r\n      error_occurred: true,\r\n      daily_summary: true,\r\n      profit_alert: true,\r\n      loss_alert: true\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (telegramConfig) {\r\n      setSettings({\r\n        bot_token: telegramConfig.bot_token || '',\r\n        chat_id: telegramConfig.chat_id || '',\r\n        enabled: telegramConfig.enabled,\r\n        notifications: telegramConfig.notifications || settings.notifications\r\n      });\r\n    }\r\n  }, [telegramConfig]);\r\n\r\n  const handleSave = async () => {\r\n    setIsSaving(true);\r\n    const result = await saveConfig(settings);\r\n    setIsSaving(false);\r\n    \r\n    if (result.success) {\r\n      alert('✅ Telegram configuration saved successfully!');\r\n      setShowConfig(false);\r\n    } else {\r\n      alert(`❌ Error: ${result.message}`);\r\n    }\r\n  };\r\n\r\n  const handleTest = async () => {\r\n    setIsTesting(true);\r\n    const result = await sendTestMessage();\r\n    setIsTesting(false);\r\n    \r\n    if (result.success) {\r\n      alert('✅ Test message sent! Check your Telegram.');\r\n    } else {\r\n      alert(`❌ Error: ${result.message}`);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card className=\"p-6\">\r\n        <div className=\"text-center py-4\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card className=\"p-6\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 flex items-center\">\r\n          <i className=\"ri-telegram-line text-xl mr-2 text-blue-500\"></i>\r\n          Telegram Notifications\r\n        </h3>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className={`w-2 h-2 rounded-full ${settings.enabled && telegramConfig ? 'bg-green-500' : 'bg-gray-400'}`}></div>\r\n          <span className={`text-sm ${settings.enabled && telegramConfig ? 'text-green-600' : 'text-gray-600'}`}>\r\n            {settings.enabled && telegramConfig ? 'Active' : 'Inactive'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <p className=\"text-gray-500 text-sm mb-4\">\r\n        Get real-time alerts for trades, bot status, and errors directly on Telegram\r\n      </p>\r\n\r\n      {!showConfig ? (\r\n        <button\r\n          onClick={() => setShowConfig(true)}\r\n          className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg transition-colors font-medium\"\r\n        >\r\n          <i className=\"ri-settings-line mr-2\"></i>\r\n          {telegramConfig ? 'Edit Configuration' : 'Setup Telegram Notifications'}\r\n        </button>\r\n      ) : (\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Bot Token\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              value={settings.bot_token}\r\n              onChange={(e) => setSettings(prev => ({ ...prev, bot_token: e.target.value }))}\r\n              placeholder=\"1234567890:ABCdefGHIjklMNOpqrsTUVwxyz\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            />\r\n            <p className=\"text-xs text-gray-500 mt-1\">Get from @BotFather on Telegram</p>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Chat ID\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={settings.chat_id}\r\n              onChange={(e) => setSettings(prev => ({ ...prev, chat_id: e.target.value }))}\r\n              placeholder=\"123456789\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            />\r\n            <p className=\"text-xs text-gray-500 mt-1\">Your Telegram user ID (get from @userinfobot)</p>\r\n          </div>\r\n\r\n          <div className=\"border-t pt-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\r\n              Notification Types\r\n            </label>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n              <label className=\"flex items-center p-2 hover:bg-gray-50 rounded\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={settings.notifications.trade_executed}\r\n                  onChange={(e) => setSettings(prev => ({\r\n                    ...prev,\r\n                    notifications: { ...prev.notifications, trade_executed: e.target.checked }\r\n                  }))}\r\n                  className=\"mr-2 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                />\r\n                <span className=\"text-sm text-gray-700\">💰 Trade Executed</span>\r\n              </label>\r\n\r\n              <label className=\"flex items-center p-2 hover:bg-gray-50 rounded\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={settings.notifications.bot_started}\r\n                  onChange={(e) => setSettings(prev => ({\r\n                    ...prev,\r\n                    notifications: { ...prev.notifications, bot_started: e.target.checked }\r\n                  }))}\r\n                  className=\"mr-2 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                />\r\n                <span className=\"text-sm text-gray-700\">🚀 Bot Started</span>\r\n              </label>\r\n\r\n              <label className=\"flex items-center p-2 hover:bg-gray-50 rounded\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={settings.notifications.bot_stopped}\r\n                  onChange={(e) => setSettings(prev => ({\r\n                    ...prev,\r\n                    notifications: { ...prev.notifications, bot_stopped: e.target.checked }\r\n                  }))}\r\n                  className=\"mr-2 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                />\r\n                <span className=\"text-sm text-gray-700\">🛑 Bot Stopped</span>\r\n              </label>\r\n\r\n              <label className=\"flex items-center p-2 hover:bg-gray-50 rounded\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={settings.notifications.error_occurred}\r\n                  onChange={(e) => setSettings(prev => ({\r\n                    ...prev,\r\n                    notifications: { ...prev.notifications, error_occurred: e.target.checked }\r\n                  }))}\r\n                  className=\"mr-2 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                />\r\n                <span className=\"text-sm text-gray-700\">❌ Errors</span>\r\n              </label>\r\n\r\n              <label className=\"flex items-center p-2 hover:bg-gray-50 rounded\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={settings.notifications.profit_alert}\r\n                  onChange={(e) => setSettings(prev => ({\r\n                    ...prev,\r\n                    notifications: { ...prev.notifications, profit_alert: e.target.checked }\r\n                  }))}\r\n                  className=\"mr-2 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                />\r\n                <span className=\"text-sm text-gray-700\">🎉 Profit Alert</span>\r\n              </label>\r\n\r\n              <label className=\"flex items-center p-2 hover:bg-gray-50 rounded\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={settings.notifications.loss_alert}\r\n                  onChange={(e) => setSettings(prev => ({\r\n                    ...prev,\r\n                    notifications: { ...prev.notifications, loss_alert: e.target.checked }\r\n                  }))}\r\n                  className=\"mr-2 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                />\r\n                <span className=\"text-sm text-gray-700\">⚠️ Loss Alert</span>\r\n              </label>\r\n\r\n              <label className=\"flex items-center p-2 hover:bg-gray-50 rounded\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={settings.notifications.daily_summary}\r\n                  onChange={(e) => setSettings(prev => ({\r\n                    ...prev,\r\n                    notifications: { ...prev.notifications, daily_summary: e.target.checked }\r\n                  }))}\r\n                  className=\"mr-2 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                />\r\n                <span className=\"text-sm text-gray-700\">📊 Daily Summary</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex space-x-3\">\r\n            <button\r\n              onClick={handleSave}\r\n              disabled={isSaving || !settings.bot_token || !settings.chat_id}\r\n              className=\"flex-1 bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed font-medium\"\r\n            >\r\n              {isSaving ? 'Saving...' : '💾 Save Configuration'}\r\n            </button>\r\n            \r\n            <button\r\n              onClick={handleTest}\r\n              disabled={isTesting || !telegramConfig}\r\n              className=\"px-6 bg-blue-600 hover:bg-blue-700 text-white py-2 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed font-medium\"\r\n            >\r\n              {isTesting ? 'Testing...' : '📨 Test'}\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => setShowConfig(false)}\r\n              className=\"px-6 bg-gray-200 hover:bg-gray-300 text-gray-700 py-2 rounded-lg transition-colors font-medium\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"bg-gradient-to-r from-blue-50 to-purple-50 border border-blue-200 rounded-lg p-4 mt-4\">\r\n            <h4 className=\"font-semibold text-blue-900 text-sm mb-2 flex items-center\">\r\n              <i className=\"ri-information-line mr-2\"></i>\r\n              How to Setup Telegram Bot\r\n            </h4>\r\n            <ol className=\"text-xs text-blue-800 space-y-1.5 ml-1 list-decimal list-inside\">\r\n              <li>Open Telegram and search for <strong className=\"font-bold\">@BotFather</strong></li>\r\n              <li>Send command <code className=\"bg-blue-100 px-1 py-0.5 rounded\">/newbot</code> and follow instructions</li>\r\n              <li>Copy the <strong className=\"font-bold\">Bot Token</strong> you receive</li>\r\n              <li>Search for <strong className=\"font-bold\">@userinfobot</strong> to get your Chat ID</li>\r\n              <li>Paste both values above and click <strong className=\"font-bold\">Save</strong></li>\r\n              <li>Click <strong className=\"font-bold\">Test</strong> to verify notifications work!</li>\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\n","import { useState, useEffect } from 'react'\r\nimport { API_ENDPOINTS, apiCall } from '../lib/supabase'\r\n\r\nexport interface ApiKey {\r\n  id: string\r\n  exchange: string\r\n  isTestnet: boolean\r\n  isActive: boolean\r\n  createdAt: string\r\n}\r\n\r\nexport interface ApiKeyFormData {\r\n  exchange: 'bybit' | 'okx'\r\n  apiKey: string\r\n  apiSecret: string\r\n  passphrase?: string\r\n  isTestnet: boolean\r\n}\r\n\r\nexport function useApiKeys() {\r\n  const [apiKeys, setApiKeys] = useState<ApiKey[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  const fetchApiKeys = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await apiCall(`${API_ENDPOINTS.API_KEYS}/list`)\r\n      setApiKeys(response.apiKeys || [])\r\n      setError(null)\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch API keys')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const saveApiKey = async (formData: ApiKeyFormData) => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await apiCall(`${API_ENDPOINTS.API_KEYS}/save`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(formData),\r\n      })\r\n      \r\n      // Refresh the list\r\n      await fetchApiKeys()\r\n      return response.apiKey\r\n    } catch (err) {\r\n      throw new Error(err instanceof Error ? err.message : 'Failed to save API key')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const testApiConnection = async (formData: ApiKeyFormData) => {\r\n    try {\r\n      const response = await apiCall(`${API_ENDPOINTS.API_KEYS}/test`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(formData),\r\n      })\r\n      return response\r\n    } catch (err) {\r\n      throw new Error(err instanceof Error ? err.message : 'Failed to test API connection')\r\n    }\r\n  }\r\n\r\n  const toggleApiKey = async (id: string, isActive: boolean) => {\r\n    try {\r\n      const response = await apiCall(`${API_ENDPOINTS.API_KEYS}/toggle`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify({ id, isActive }),\r\n      })\r\n      \r\n      // Refresh the list\r\n      await fetchApiKeys()\r\n      return response.apiKey\r\n    } catch (err) {\r\n      throw new Error(err instanceof Error ? err.message : 'Failed to toggle API key')\r\n    }\r\n  }\r\n\r\n  const deleteApiKey = async (id: string) => {\r\n    try {\r\n      await apiCall(`${API_ENDPOINTS.API_KEYS}?id=${id}`, {\r\n        method: 'DELETE',\r\n      })\r\n      \r\n      // Refresh the list\r\n      await fetchApiKeys()\r\n    } catch (err) {\r\n      throw new Error(err instanceof Error ? err.message : 'Failed to delete API key')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchApiKeys()\r\n  }, [])\r\n\r\n  return {\r\n    apiKeys,\r\n    loading,\r\n    error,\r\n    saveApiKey,\r\n    testApiConnection,\r\n    toggleApiKey,\r\n    deleteApiKey,\r\n    refetch: fetchApiKeys,\r\n  }\r\n}\r\n","import { useState } from 'react';\r\nimport { supabase } from '../lib/supabase';\r\n\r\nexport interface ProfileData {\r\n  id: string;\r\n  email: string;\r\n  name: string;\r\n  bio?: string;\r\n  location?: string;\r\n  website?: string;\r\n  profile_picture_url?: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nexport function useProfile() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const callProfileFunction = async (action: string, params: any = {}) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const { data, error } = await supabase.functions.invoke('profile-management', {\r\n        body: { action, ...params }\r\n      });\r\n\r\n      if (error) throw error;\r\n      return data;\r\n    } catch (err: any) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getProfile = async (): Promise<ProfileData> => {\r\n    const data = await callProfileFunction('getProfile');\r\n    return data.profile;\r\n  };\r\n\r\n  const updateProfile = async (profileData: Partial<ProfileData> & { profilePicture?: string }) => {\r\n    return await callProfileFunction('updateProfile', profileData);\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getProfile,\r\n    updateProfile\r\n  };\r\n}\r\n\r\n","\n\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../../components/feature/Header';\nimport Navigation from '../../components/feature/Navigation';\nimport Button from '../../components/base/Button';\nimport Card from '../../components/base/Card';\nimport TelegramSettings from '../../components/settings/TelegramSettings';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useApiKeys } from '../../hooks/useApiKeys';\nimport type { ApiKeyFormData } from '../../hooks/useApiKeys';\nimport { useProfile } from '../../hooks/useProfile';\nimport type { ProfileData } from '../../hooks/useProfile';\nimport { supabase } from '../../lib/supabase';\n\nexport default function Settings() {\n  const navigate = useNavigate();\n  const { signOut, user } = useAuth();\n  const { apiKeys, loading: apiKeysLoading, saveApiKey, testApiConnection: testConnection, toggleApiKey, deleteApiKey } = useApiKeys();\n  const { getProfile, updateProfile } = useProfile();\n\n  const [notifications] = useState({\n    push: true,\n    email: false,\n    trading: true,\n    price: true\n  });\n\n  const [security, setSecurity] = useState({\n    twoFactor: false,\n    biometric: true,\n    autoLogout: 30\n  });\n\n  const [trading, setTrading] = useState({\n    defaultLeverage: 5,\n    riskLevel: 'medium',\n    autoRebalance: true,\n    stopLoss: 5\n  });\n\n  const [appearance, setAppearance] = useState(() => {\n    // Load from localStorage\n    const saved = localStorage.getItem('appearance_settings');\n    if (saved) {\n      return JSON.parse(saved);\n    }\n    return {\n      theme: 'light',\n      currency: 'USD',\n      language: 'English'\n    };\n  });\n\n  const [apiSettings, setApiSettings] = useState({\n    bybitApiKey: '',\n    bybitApiSecret: '',\n    bybitTestnet: true,\n    okxApiKey: '',\n    okxApiSecret: '',\n    okxPassphrase: '',\n    okxTestnet: true,\n    webhookUrl: '',\n    webhookSecret: '',\n    alertsEnabled: true\n  });\n\n  const [alerts, setAlerts] = useState({\n    priceThreshold: 5,\n    pnlThreshold: 10,\n    volumeThreshold: 50,\n    rsiOverbought: 70,\n    rsiOversold: 30,\n    emailAlerts: true,\n    pushAlerts: true,\n    webhookAlerts: false,\n    telegramBot: '',\n    discordWebhook: '',\n    // New risk management alerts\n    lowBalanceAlert: true,\n    lowBalanceThreshold: 100,\n    liquidationAlert: true,\n    liquidationThreshold: 80,\n    newTradeAlert: true,\n    closePositionAlert: true,\n    profitAlert: true,\n    profitThreshold: 5,\n    lossAlert: true,\n    lossThreshold: 5,\n    dailyPnlAlert: true,\n    weeklyPnlAlert: false,\n    monthlyPnlAlert: true\n  });\n\n  const [riskManagement, setRiskManagement] = useState({\n    maxDailyLoss: 500,\n    maxPositionSize: 1000,\n    stopLossPercentage: 5,\n    takeProfitPercentage: 10,\n    maxOpenPositions: 5,\n    riskPerTrade: 2,\n    autoStopTrading: true,\n    emergencyStopLoss: 20\n  });\n\n  const [showEditProfile, setShowEditProfile] = useState(false);\n  const [showApiConfig, setShowApiConfig] = useState(false);\n  const [showAlertsConfig, setShowAlertsConfig] = useState(false);\n  const [showRiskConfig, setShowRiskConfig] = useState(false);\n  const [profileData, setProfileData] = useState<ProfileData>({\n    id: '',\n    email: '',\n    name: '',\n    bio: '',\n    location: '',\n    website: '',\n    profile_picture_url: ''\n  });\n\n  const [profilePicture, setProfilePicture] = useState<File | null>(null);\n  const [profilePicturePreview, setProfilePicturePreview] = useState<string>('');\n  const [isSavingProfile, setIsSavingProfile] = useState(false);\n\n  // Load profile data on component mount\n  // Apply theme whenever it changes\n  useEffect(() => {\n    if (appearance.theme === 'dark') {\n      document.documentElement.classList.add('dark');\n      document.body.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      document.body.classList.remove('dark');\n    }\n    console.log(`🎨 Theme applied: ${appearance.theme}`);\n  }, [appearance.theme]); // Watch for theme changes\n\n  useEffect(() => {\n    const loadProfile = async () => {\n      try {\n        console.log('🔄 Loading profile for user:', user?.email);\n        \n        // First, set current user data as default\n        if (user) {\n          const currentUserProfile = {\n            id: user.id,\n            email: user.email || '',\n            name: user.user_metadata?.name || user.email?.split('@')[0] || 'User',\n            bio: '',\n            location: '',\n            website: '',\n            profile_picture_url: ''\n          };\n          console.log('📋 Setting current user profile as default:', currentUserProfile);\n          setProfileData(currentUserProfile);\n        }\n        \n        // Then try to get profile from backend\n        const profile = await getProfile();\n        console.log('📋 Profile loaded from backend:', profile);\n        \n        // Only use backend data if it has the correct email\n        if (profile.email === user?.email) {\n          console.log('✅ Using backend profile data');\n          setProfileData(profile);\n          if (profile.profile_picture_url) {\n            setProfilePicturePreview(profile.profile_picture_url);\n          }\n        } else {\n          console.log('⚠️ Backend profile has wrong email, keeping current user data');\n        }\n      } catch (error) {\n        console.error('❌ Error loading profile:', error);\n        // Keep the current user data that was already set\n        console.log('📋 Keeping current user data due to error');\n      }\n    };\n\n    if (user) {\n      loadProfile();\n    }\n  }, [user]); // Removed getProfile from dependencies to prevent infinite loop\n\n  const handleProfilePictureChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setProfilePicture(file);\n      // Create a preview URL\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        if (event.target?.result) {\n          setProfilePicturePreview(event.target.result as string);\n        }\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSaveProfile = async () => {\n    if (isSavingProfile) {\n      console.log('⚠️ Profile save already in progress, ignoring duplicate click');\n      return;\n    }\n    \n    try {\n      setIsSavingProfile(true);\n      console.log('🔄 Starting profile save...');\n      let profilePictureBase64 = '';\n      \n      // Convert profile picture to base64 if provided\n      if (profilePicture) {\n        console.log('📸 Converting profile picture to base64...');\n        profilePictureBase64 = await new Promise((resolve, reject) => {\n          const reader = new FileReader();\n          reader.onload = (event) => {\n            if (event.target?.result) {\n              resolve(event.target.result as string);\n            } else {\n              reject(new Error('Failed to read file'));\n            }\n          };\n          reader.onerror = () => reject(new Error('File read error'));\n          reader.readAsDataURL(profilePicture);\n        });\n      }\n\n      console.log('💾 Updating profile with backend...');\n      // Update profile with backend\n      const result = await updateProfile({\n        name: profileData.name,\n        bio: profileData.bio,\n        location: profileData.location,\n        website: profileData.website,\n        profilePicture: profilePictureBase64\n      });\n\n      console.log('✅ Profile update result:', result);\n      if (result.success) {\n        // Update local state with returned data\n        if (result.profilePictureUrl) {\n          setProfilePicturePreview(result.profilePictureUrl);\n          setProfileData(prev => ({ ...prev, profile_picture_url: result.profilePictureUrl }));\n        }\n        \n        alert('Profile saved successfully!');\n        setShowEditProfile(false);\n      } else {\n        alert(`Failed to save profile: ${result.message || 'Unknown error'}`);\n      }\n    } catch (error: any) {\n      console.error('❌ Error saving profile:', error);\n      alert(`Failed to save profile: ${error.message}`);\n    } finally {\n      setIsSavingProfile(false);\n    }\n  };\n\n  const handleSecurityChange = (key: string, value: any) => {\n    setSecurity(prev => ({ ...prev, [key]: value }));\n  };\n\n  const handleTradingChange = (key: string, value: any) => {\n    setTrading(prev => ({ ...prev, [key]: value }));\n  };\n\n  const handleAppearanceChange = (key: string, value: any) => {\n    console.log(`⚙️ Appearance change: ${key} = ${value}`);\n    \n    const newAppearance = { ...appearance, [key]: value };\n    setAppearance(newAppearance);\n    \n    // Save to localStorage\n    localStorage.setItem('appearance_settings', JSON.stringify(newAppearance));\n    console.log(`💾 Saved to localStorage:`, newAppearance);\n    \n    // Apply theme immediately (useEffect will handle the actual application)\n    if (key === 'theme') {\n      console.log(`🎨 Theme will change to: ${value}`);\n      // Force immediate application\n      if (value === 'dark') {\n        document.documentElement.classList.add('dark');\n        document.body.classList.add('dark');\n        alert('✅ Dark mode enabled!');\n      } else {\n        document.documentElement.classList.remove('dark');\n        document.body.classList.remove('dark');\n        alert('✅ Light mode enabled!');\n      }\n    }\n    \n    // Apply language immediately\n    if (key === 'language') {\n      // Map display names to i18n codes\n      const languageMap: { [key: string]: string } = {\n        'English': 'en',\n        'Spanish': 'es',\n        'French': 'fr',\n        'German': 'de',\n        'Chinese': 'zh',\n        'Japanese': 'ja',\n        'Korean': 'ko',\n        'Russian': 'ru',\n        'Portuguese': 'pt',\n        'Italian': 'it'\n      };\n      const i18nCode = languageMap[value] || 'en';\n      localStorage.setItem('i18nextLng', i18nCode);\n      console.log(`🌍 Language changed to: ${value} (${i18nCode})`);\n      \n      if (confirm(`Change language to ${value}?\\n\\nThe page will reload to apply the new language.`)) {\n        window.location.reload();\n      }\n    }\n    \n    // Show confirmation for currency changes\n    if (key === 'currency') {\n      console.log(`💰 Currency changed to: ${value}`);\n      alert(`✅ Currency changed to ${value}!`);\n    }\n  };\n\n  const handleApiChange = (key: string, value: any) => {\n    setApiSettings(prev => ({ ...prev, [key]: value }));\n  };\n\n  const handleAlertsChange = (key: string, value: any) => {\n    setAlerts(prev => ({ ...prev, [key]: value }));\n  };\n\n\n  const ensureUserExists = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return false;\n\n      // Check if user exists in users table\n      const { error: userCheckError } = await supabase\n        .from('users')\n        .select('id')\n        .eq('id', user.id)\n        .single();\n\n      if (userCheckError && userCheckError.code === 'PGRST116') {\n        // User doesn't exist, create them\n        const { error: createUserError } = await supabase\n          .from('users')\n          .insert({\n            id: user.id,\n            email: user.email,\n            role: 'user',\n            name: user.user_metadata?.name || user.email?.split('@')[0] || 'User',\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n          });\n\n        if (createUserError) {\n          console.error('Error creating user:', createUserError);\n          return false;\n        }\n        console.log('Created user:', user.id);\n        return true;\n      } else if (userCheckError) {\n        console.error('Error checking user:', userCheckError);\n        return false;\n      }\n      return true; // User already exists\n    } catch (error) {\n      console.error('Error ensuring user exists:', error);\n      return false;\n    }\n  };\n\n  const handleApiSave = async () => {\n    try {\n      // Ensure user exists before saving API keys\n      const userExists = await ensureUserExists();\n      if (!userExists) {\n        alert('Failed to create user account. Please try again.');\n        return;\n      }\n\n      // Save Bybit API key if provided\n      if (apiSettings.bybitApiKey && apiSettings.bybitApiSecret) {\n        await saveApiKey({\n          exchange: 'bybit',\n          apiKey: apiSettings.bybitApiKey,\n          apiSecret: apiSettings.bybitApiSecret,\n          isTestnet: apiSettings.bybitTestnet,\n        });\n      }\n\n      // Save OKX API key if provided\n      if (apiSettings.okxApiKey && apiSettings.okxApiSecret) {\n        await saveApiKey({\n          exchange: 'okx',\n          apiKey: apiSettings.okxApiKey,\n          apiSecret: apiSettings.okxApiSecret,\n          passphrase: apiSettings.okxPassphrase,\n          isTestnet: apiSettings.okxTestnet,\n        });\n      }\n\n    setShowApiConfig(false);\n      alert('API keys saved successfully!');\n    } catch (error: any) {\n      alert(`Failed to save API keys: ${error.message}`);\n    }\n  };\n\n  const handleAlertsSave = () => {\n    // Save alerts settings\n    setShowAlertsConfig(false);\n  };\n\n  const handleProfileChange = (field: keyof ProfileData, value: string) => {\n    setProfileData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const handleOpenEditProfile = async () => {\n    console.log('🔄 Opening Edit Profile modal for user:', user?.email);\n    \n    // Force use current user data instead of database data\n    if (user) {\n      console.log('🔄 Forcing current user data for profile');\n      const currentUserProfile = {\n        id: user.id,\n        email: user.email || '',\n        name: user.user_metadata?.name || user.email?.split('@')[0] || 'User',\n        bio: '',\n        location: '',\n        website: '',\n        profile_picture_url: ''\n      };\n      console.log('📋 Current user profile data:', currentUserProfile);\n      setProfileData(currentUserProfile);\n    }\n    \n    // Also try to get profile from backend as backup\n    try {\n      const profile = await getProfile();\n      console.log('📋 Backend profile data:', profile);\n      // Only use backend data if it has the correct email\n      if (profile.email === user?.email) {\n        console.log('✅ Using backend profile data');\n        setProfileData(profile);\n        if (profile.profile_picture_url) {\n          setProfilePicturePreview(profile.profile_picture_url);\n        }\n      } else {\n        console.log('⚠️ Backend profile has wrong email, using current user data');\n      }\n    } catch (error) {\n      console.error('❌ Error refreshing profile:', error);\n    }\n    \n    setShowEditProfile(true);\n  };\n\n  const handleTestConnection = async (exchange: 'bybit' | 'okx') => {\n    try {\n      let formData: ApiKeyFormData;\n      \n      if (exchange === 'bybit') {\n        formData = {\n          exchange: 'bybit',\n          apiKey: apiSettings.bybitApiKey,\n          apiSecret: apiSettings.bybitApiSecret,\n          isTestnet: apiSettings.bybitTestnet,\n        };\n      } else {\n        formData = {\n          exchange: 'okx',\n          apiKey: apiSettings.okxApiKey,\n          apiSecret: apiSettings.okxApiSecret,\n          passphrase: apiSettings.okxPassphrase,\n          isTestnet: apiSettings.okxTestnet,\n        };\n      }\n\n      const result = await testConnection(formData);\n      \n      if (result.success) {\n        alert(`${exchange.toUpperCase()} API connection successful!`);\n      } else {\n        alert(`${exchange.toUpperCase()} API connection failed: ${result.message}`);\n      }\n    } catch (error: any) {\n      alert(`Failed to test ${exchange.toUpperCase()} API: ${error.message}`);\n    }\n  };\n\n  const handleSignOut = async () => {\n    try {\n      const { error } = await signOut();\n      if (error) {\n        console.error('Sign out error:', error);\n      } else {\n        navigate('/auth');\n      }\n    } catch (error) {\n      console.error('Sign out failed:', error);\n    }\n  };\n\n  const handleRiskChange = (key: string, value: any) => {\n    setRiskManagement(prev => ({ ...prev, [key]: value }));\n  };\n\n  const handleRiskSave = () => {\n    // Save risk management settings\n    setShowRiskConfig(false);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <Header title=\"Settings\" />\n      \n      <div className=\"pt-20 pb-20 px-4 space-y-6\">\n\n        {/* Profile Section */}\n        <Card className=\"p-6\">\n          <div className=\"flex items-center space-x-4 mb-4\">\n            <div className=\"relative\">\n              {profilePicturePreview || profileData.profile_picture_url ? (\n                <img \n                  src={profilePicturePreview || profileData.profile_picture_url} \n                  alt=\"Profile\" \n                  className=\"w-16 h-16 rounded-full object-cover border-2 border-gray-200\"\n                />\n              ) : (\n                <div className=\"w-16 h-16 rounded-full bg-gray-200 border-2 border-gray-200 flex items-center justify-center\">\n                  <i className=\"ri-user-line text-2xl text-gray-400\"></i>\n                </div>\n              )}\n            </div>\n            <div className=\"flex-1\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">\n                {profileData.name || user?.email?.split('@')[0] || 'User'}\n              </h3>\n              <p className=\"text-gray-500\">{user?.email || 'No email'}</p>\n              {profileData.bio && (\n                <p className=\"text-sm text-gray-600 mt-1\">{profileData.bio}</p>\n              )}\n              <span className={`inline-block px-2 py-1 text-xs rounded-full mt-1 ${\n                user?.role === 'admin' \n                  ? 'bg-red-100 text-red-800' \n                  : 'bg-green-100 text-green-800'\n              }`}>\n                {user?.role === 'admin' ? 'Admin' : 'Pro Member'}\n              </span>\n            </div>\n          </div>\n          <button \n            onClick={handleOpenEditProfile}\n            className=\"w-full bg-gray-100 hover:bg-gray-200 text-gray-700 py-2 px-4 rounded-lg transition-colors\"\n          >\n            <i className=\"ri-edit-line mr-2\"></i>\n            Edit Profile\n          </button>\n          <button \n            onClick={async () => {\n              console.log('🔄 Manual profile refresh for user:', user?.email);\n              try {\n                const profile = await getProfile();\n                console.log('📋 Manual refresh - Profile data:', profile);\n                setProfileData(profile);\n                alert('Profile refreshed! Check console for details.');\n              } catch (error) {\n                console.error('❌ Manual refresh failed:', error);\n                alert('Profile refresh failed! Check console for details.');\n              }\n            }}\n            className=\"w-full bg-blue-100 hover:bg-blue-200 text-blue-700 py-2 px-4 rounded-lg transition-colors mt-2\"\n          >\n            <i className=\"ri-refresh-line mr-2\"></i>\n            Refresh Profile Data\n          </button>\n        </Card>\n\n        {/* API Configuration */}\n        <Card className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Exchange Connections</h3>\n            <div className=\"flex items-center space-x-2\">\n              <div className={`w-2 h-2 rounded-full ${apiKeys.length > 0 ? 'bg-green-500' : 'bg-gray-400'}`}></div>\n              <span className={`text-sm ${apiKeys.length > 0 ? 'text-green-600' : 'text-gray-600'}`}>\n                {apiKeys.length > 0 ? `${apiKeys.length} Connected` : 'Not Connected'}\n              </span>\n            </div>\n          </div>\n          <p className=\"text-gray-500 text-sm mb-4\">Configure your exchange API keys to view balances and enable trading</p>\n          \n          {apiKeysLoading ? (\n            <div className=\"text-center py-8\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n              <p className=\"text-gray-600\">Loading connections...</p>\n                </div>\n          ) : apiKeys.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-500\">\n              <i className=\"ri-exchange-line text-4xl mb-2\"></i>\n              <p>No exchange connections found</p>\n              <p className=\"text-sm\">Connect your exchange API keys to get started</p>\n                <button\n                  onClick={() => setShowApiConfig(true)}\n                className=\"mt-4 bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg transition-colors\"\n                >\n                <i className=\"ri-add-line mr-2\"></i>\n                Connect Exchange\n                </button>\n              </div>\n          ) : (\n            <div className=\"space-y-3\">\n              {apiKeys.map((apiKey) => (\n                <div key={apiKey.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n              <div className=\"flex items-center space-x-3\">\n                    <div className={`w-8 h-8 rounded-full flex items-center justify-center ${\n                      apiKey.exchange === 'bybit' ? 'bg-orange-100' : 'bg-blue-100'\n                    }`}>\n                      <i className={`${apiKey.exchange === 'bybit' ? 'ri-currency-line text-orange-600' : 'ri-exchange-line text-blue-600'}`}></i>\n                </div>\n                <div>\n                      <p className=\"font-medium text-gray-900\">{apiKey.exchange.toUpperCase()} API</p>\n                  <p className=\"text-sm text-gray-500\">\n                        {apiKey.isActive ? 'Active' : 'Inactive'} • {apiKey.isTestnet ? 'Testnet' : 'Live'}\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <button\n                      onClick={() => toggleApiKey(apiKey.id, !apiKey.isActive)}\n                      className={`px-3 py-1 rounded-full text-xs font-medium ${\n                        apiKey.isActive \n                          ? 'bg-green-100 text-green-800 hover:bg-green-200' \n                          : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\n                      }`}\n                    >\n                      {apiKey.isActive ? 'Active' : 'Inactive'}\n                    </button>\n                    <button\n                      onClick={() => deleteApiKey(apiKey.id)}\n                      className=\"text-red-600 hover:text-red-700 text-sm font-medium\"\n                    >\n                      Remove\n                </button>\n              </div>\n            </div>\n              ))}\n              <button\n                onClick={() => setShowApiConfig(true)}\n                className=\"w-full bg-gray-100 hover:bg-gray-200 text-gray-700 py-2 px-4 rounded-lg transition-colors\"\n              >\n                <i className=\"ri-add-line mr-2\"></i>\n                Add Exchange Connection\n              </button>\n          </div>\n          )}\n        </Card>\n\n        {/* Risk Management */}\n        <Card className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Risk Management</h3>\n            <button\n              onClick={() => setShowRiskConfig(true)}\n              className=\"text-blue-600 hover:text-blue-700 text-sm font-medium\"\n            >\n              Configure\n            </button>\n          </div>\n          <p className=\"text-gray-500 text-sm mb-4\">Protect your capital with automated risk controls</p>\n          \n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"p-3 bg-red-50 rounded-lg\">\n              <div className=\"flex items-center space-x-2 mb-1\">\n                <i className=\"ri-shield-line text-red-600\"></i>\n                <span className=\"text-sm font-medium text-gray-900\">Max Daily Loss</span>\n              </div>\n              <p className=\"text-xs text-gray-500\">${riskManagement.maxDailyLoss}</p>\n            </div>\n            \n            <div className=\"p-3 bg-orange-50 rounded-lg\">\n              <div className=\"flex items-center space-x-2 mb-1\">\n                <i className=\"ri-pie-chart-line text-orange-600\"></i>\n                <span className=\"text-sm font-medium text-gray-900\">Position Size</span>\n              </div>\n              <p className=\"text-xs text-gray-500\">Max ${riskManagement.maxPositionSize}</p>\n            </div>\n            \n            <div className=\"p-3 bg-blue-50 rounded-lg\">\n              <div className=\"flex items-center space-x-2 mb-1\">\n                <i className=\"ri-stop-line text-blue-600\"></i>\n                <span className=\"text-sm font-medium text-gray-900\">Stop Loss</span>\n              </div>\n              <p className=\"text-xs text-gray-500\">{riskManagement.stopLossPercentage}%</p>\n            </div>\n            \n            <div className=\"p-3 bg-green-50 rounded-lg\">\n              <div className=\"flex items-center space-x-2 mb-1\">\n                <i className=\"ri-trophy-line text-green-600\"></i>\n                <span className=\"text-sm font-medium text-gray-900\">Take Profit</span>\n              </div>\n              <p className=\"text-xs text-gray-500\">{riskManagement.takeProfitPercentage}%</p>\n            </div>\n          </div>\n        </Card>\n\n        {/* Alerts Configuration */}\n        <Card className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Alert Preferences</h3>\n            <button\n              onClick={() => setShowAlertsConfig(true)}\n              className=\"text-blue-600 hover:text-blue-700 text-sm font-medium\"\n            >\n              Configure\n            </button>\n          </div>\n          <p className=\"text-gray-500 text-sm mb-4\">Choose which alerts you want to receive</p>\n          \n          <div className=\"space-y-3\">\n            {[\n              { key: 'newTradeAlert', label: 'New Trade Alerts', desc: 'Get notified when bots open new positions', icon: 'ri-add-circle-line', color: 'blue' },\n              { key: 'closePositionAlert', label: 'Position Closed', desc: 'Alerts when positions are closed', icon: 'ri-close-circle-line', color: 'green' },\n              { key: 'profitAlert', label: 'Profit Alerts', desc: 'Notifications for profitable trades', icon: 'ri-arrow-up-line', color: 'green' },\n              { key: 'lossAlert', label: 'Loss Alerts', desc: 'Notifications for losing trades', icon: 'ri-arrow-down-line', color: 'red' },\n              { key: 'lowBalanceAlert', label: 'Low Balance Alert', desc: 'Warning when account balance is low', icon: 'ri-wallet-line', color: 'orange' },\n              { key: 'liquidationAlert', label: 'Liquidation Risk', desc: 'Alert when positions are at risk', icon: 'ri-alarm-warning-line', color: 'red' }\n            ].map(({ key, label, desc, icon, color }) => (\n              <div key={key} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-8 h-8 bg-${color}-100 rounded-full flex items-center justify-center`}>\n                    <i className={`${icon} text-${color}-600`}></i>\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">{label}</p>\n                    <p className=\"text-sm text-gray-500\">{desc}</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => handleAlertsChange(key, !alerts[key as keyof typeof alerts])}\n                  className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                    alerts[key as keyof typeof alerts] ? 'bg-blue-600' : 'bg-gray-200'\n                  }`}\n                >\n                  <span\n                    className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                      alerts[key as keyof typeof alerts] ? 'translate-x-6' : 'translate-x-1'\n                    }`}\n                  />\n                </button>\n              </div>\n            ))}\n          </div>\n        </Card>\n\n        {/* Notifications */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Notifications</h3>\n          <div className=\"space-y-4\">\n            {[\n              { key: 'push', label: 'Push Notifications', desc: 'Receive push notifications on your device' },\n              { key: 'email', label: 'Email Alerts', desc: 'Get important updates via email' },\n              { key: 'trading', label: 'Trading Alerts', desc: 'Notifications for bot actions and trades' },\n              { key: 'price', label: 'Price Alerts', desc: 'Alerts for significant price movements' }\n            ].map(({ key, label, desc }) => (\n              <div key={key} className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"font-medium text-gray-900\">{label}</p>\n                  <p className=\"text-sm text-gray-500\">{desc}</p>\n                </div>\n                <button\n                  onClick={() => {/* handleNotificationChange(key, !notifications[key as keyof typeof notifications]) */}}\n                  className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                    notifications[key as keyof typeof notifications] ? 'bg-blue-600' : 'bg-gray-200'\n                  }`}\n                >\n                  <span\n                    className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                      notifications[key as keyof typeof notifications] ? 'translate-x-6' : 'translate-x-1'\n                    }`}\n                  />\n                </button>\n              </div>\n            ))}\n          </div>\n        </Card>\n\n        {/* Security */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Security</h3>\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"font-medium text-gray-900\">Two-Factor Authentication</p>\n                <p className=\"text-sm text-gray-500\">Add an extra layer of security</p>\n              </div>\n              <button\n                onClick={() => handleSecurityChange('twoFactor', !security.twoFactor)}\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                  security.twoFactor ? 'bg-blue-600' : 'bg-gray-200'\n                }`}\n              >\n                <span\n                  className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                    security.twoFactor ? 'translate-x-6' : 'translate-x-1'\n                  }`}\n                />\n              </button>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"font-medium text-gray-900\">Biometric Login</p>\n                <p className=\"text-sm text-gray-500\">Use fingerprint or face ID</p>\n              </div>\n              <button\n                onClick={() => handleSecurityChange('biometric', !security.biometric)}\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                  security.biometric ? 'bg-blue-600' : 'bg-gray-200'\n                }`}\n              >\n                <span\n                  className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                    security.biometric ? 'translate-x-6' : 'translate-x-1'\n                  }`}\n                />\n              </button>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Auto Logout (minutes)\n              </label>\n              <select\n                value={security.autoLogout}\n                onChange={(e) => handleSecurityChange('autoLogout', parseInt(e.target.value))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value={15}>15 minutes</option>\n                <option value={30}>30 minutes</option>\n                <option value={60}>1 hour</option>\n                <option value={120}>2 hours</option>\n              </select>\n            </div>\n          </div>\n        </Card>\n\n        {/* Trading Preferences */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Trading Preferences</h3>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Default Leverage\n              </label>\n              <select\n                value={trading.defaultLeverage}\n                onChange={(e) => handleTradingChange('defaultLeverage', parseInt(e.target.value))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value={1}>1x</option>\n                <option value={2}>2x</option>\n                <option value={3}>3x</option>\n                <option value={5}>5x</option>\n                <option value={10}>10x</option>\n                <option value={20}>20x</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Risk Level\n              </label>\n              <select\n                value={trading.riskLevel}\n                onChange={(e) => handleTradingChange('riskLevel', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value=\"low\">Low Risk</option>\n                <option value=\"medium\">Medium Risk</option>\n                <option value=\"high\">High Risk</option>\n              </select>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"font-medium text-gray-900\">Auto Rebalance</p>\n                <p className=\"text-sm text-gray-500\">Automatically rebalance portfolio</p>\n              </div>\n              <button\n                onClick={() => handleTradingChange('autoRebalance', !trading.autoRebalance)}\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                  trading.autoRebalance ? 'bg-blue-600' : 'bg-gray-200'\n                }`}\n              >\n                <span\n                  className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                    trading.autoRebalance ? 'translate-x-6' : 'translate-x-1'\n                  }`}\n                />\n              </button>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Default Stop Loss (%)\n              </label>\n              <input\n                type=\"number\"\n                value={trading.stopLoss}\n                onChange={(e) => handleTradingChange('stopLoss', parseFloat(e.target.value))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                min=\"1\"\n                max=\"20\"\n                step=\"0.5\"\n              />\n            </div>\n          </div>\n        </Card>\n\n        {/* Appearance */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Appearance</h3>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Theme\n              </label>\n              <div className=\"flex space-x-3\">\n                <button\n                  onClick={() => handleAppearanceChange('theme', 'light')}\n                  className={`flex-1 flex items-center justify-center px-4 py-3 rounded-lg border-2 transition-all ${\n                    appearance.theme === 'light'\n                      ? 'border-blue-600 bg-blue-50 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300'\n                      : 'border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:border-gray-300 dark:hover:border-gray-600'\n                  }`}\n                >\n                  <i className=\"ri-sun-line text-xl mr-2\"></i>\n                  <span className=\"font-medium\">Light</span>\n                </button>\n                <button\n                  onClick={() => handleAppearanceChange('theme', 'dark')}\n                  className={`flex-1 flex items-center justify-center px-4 py-3 rounded-lg border-2 transition-all ${\n                    appearance.theme === 'dark'\n                      ? 'border-blue-600 bg-blue-50 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300'\n                      : 'border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:border-gray-300 dark:hover:border-gray-600'\n                  }`}\n                >\n                  <i className=\"ri-moon-line text-xl mr-2\"></i>\n                  <span className=\"font-medium\">Dark</span>\n                </button>\n              </div>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n                Current theme: <strong className=\"capitalize\">{appearance.theme}</strong> mode\n              </p>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Currency\n              </label>\n              <select\n                value={appearance.currency}\n                onChange={(e) => handleAppearanceChange('currency', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              >\n                <option value=\"USD\">🇺🇸 USD ($)</option>\n                <option value=\"EUR\">🇪🇺 EUR (€)</option>\n                <option value=\"GBP\">🇬🇧 GBP (£)</option>\n                <option value=\"JPY\">🇯🇵 JPY (¥)</option>\n                <option value=\"CNY\">🇨🇳 CNY (¥)</option>\n                <option value=\"KRW\">🇰🇷 KRW (₩)</option>\n                <option value=\"AUD\">🇦🇺 AUD ($)</option>\n                <option value=\"CAD\">🇨🇦 CAD ($)</option>\n                <option value=\"CHF\">🇨🇭 CHF (Fr)</option>\n                <option value=\"BTC\">₿ Bitcoin (BTC)</option>\n                <option value=\"ETH\">Ξ Ethereum (ETH)</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Language\n              </label>\n              <select\n                value={appearance.language}\n                onChange={(e) => handleAppearanceChange('language', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              >\n                <option value=\"English\">🇺🇸 English</option>\n                <option value=\"Spanish\">🇪🇸 Español</option>\n                <option value=\"French\">🇫🇷 Français</option>\n                <option value=\"German\">🇩🇪 Deutsch</option>\n                <option value=\"Chinese\">🇨🇳 中文</option>\n                <option value=\"Japanese\">🇯🇵 日本語</option>\n                <option value=\"Korean\">🇰🇷 한국어</option>\n                <option value=\"Russian\">🇷🇺 Русский</option>\n                <option value=\"Portuguese\">🇵🇹 Português</option>\n                <option value=\"Italian\">🇮🇹 Italiano</option>\n              </select>\n            </div>\n\n            <div className=\"mt-4 p-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg\">\n              <p className=\"text-sm text-blue-800 dark:text-blue-300\">\n                <strong>💡 Note:</strong> Theme and currency changes apply immediately. \n                Language changes will refresh the page to apply translations.\n              </p>\n            </div>\n          </div>\n        </Card>\n\n        {/* Account */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Account</h3>\n          <div className=\"space-y-3\">\n            <Button variant=\"secondary\" className=\"w-full justify-start\">\n              <i className=\"ri-download-line mr-2\"></i>\n              Export Data\n            </Button>\n            <Button variant=\"secondary\" className=\"w-full justify-start\">\n              <i className=\"ri-refresh-line mr-2\"></i>\n              Reset Settings\n            </Button>\n            <button \n              onClick={handleSignOut}\n              className=\"inline-flex items-center justify-center font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed bg-red-600 hover:bg-red-700 text-white focus:ring-red-500 px-4 py-2 text-sm w-full justify-start\"\n            >\n              <i className=\"ri-logout-box-line mr-2\"></i>\n              Sign Out\n            </button>\n          </div>\n        </Card>\n\n        {/* Telegram Notifications */}\n        <TelegramSettings />\n\n        {/* App Info */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">App Information</h3>\n          <div className=\"space-y-3 text-sm\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-500\">Version</span>\n              <span className=\"text-gray-900\">1.2.3</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-500\">Build</span>\n              <span className=\"text-gray-900\">2024.01.15</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-500\">API Status</span>\n              <span className=\"text-green-600 flex items-center\">\n                <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></div>\n                Connected\n              </span>\n            </div>\n            <Button variant=\"secondary\" className=\"w-full justify-start mt-4\">\n              <i className=\"ri-question-line mr-2\"></i>\n              Help &amp; Support\n            </Button>\n          </div>\n        </Card>\n      </div>\n\n      {/* API Configuration Modal */}\n      {showApiConfig && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg w-full max-w-md max-h-[90vh] overflow-y-auto\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">API Configuration</h2>\n                <button\n                  onClick={() => setShowApiConfig(false)}\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n                >\n                  <i className=\"ri-close-line text-xl text-gray-500\"></i>\n                </button>\n              </div>\n\n              <div className=\"space-y-6\">\n                {/* Bybit API */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3 flex items-center\">\n                    <i className=\"ri-currency-line text-orange-600 mr-2\"></i>\n                    Bybit API\n                  </h3>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        API Key\n                      </label>\n                      <input\n                        type=\"password\"\n                        value={apiSettings.bybitApiKey}\n                        onChange={(e) => handleApiChange('bybitApiKey', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        placeholder=\"Enter Bybit API Key\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        API Secret\n                      </label>\n                      <input\n                        type=\"password\"\n                        value={apiSettings.bybitApiSecret}\n                        onChange={(e) => handleApiChange('bybitApiSecret', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        placeholder=\"Enter Bybit API Secret\"\n                      />\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-700\">Use Testnet</span>\n                      <button\n                        onClick={() => handleApiChange('bybitTestnet', !apiSettings.bybitTestnet)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          apiSettings.bybitTestnet ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            apiSettings.bybitTestnet ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    <button\n                      onClick={() => handleTestConnection('bybit')}\n                      className=\"w-full bg-orange-100 hover:bg-orange-200 text-orange-700 py-2 px-4 rounded-lg transition-colors text-sm\"\n                    >\n                      Test Connection\n                    </button>\n                  </div>\n                </div>\n\n                {/* OKX API */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3 flex items-center\">\n                    <i className=\"ri-exchange-line text-blue-600 mr-2\"></i>\n                    OKX API\n                  </h3>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        API Key\n                      </label>\n                      <input\n                        type=\"password\"\n                        value={apiSettings.okxApiKey}\n                        onChange={(e) => handleApiChange('okxApiKey', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        placeholder=\"Enter OKX API Key\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        API Secret\n                      </label>\n                      <input\n                        type=\"password\"\n                        value={apiSettings.okxApiSecret}\n                        onChange={(e) => handleApiChange('okxApiSecret', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        placeholder=\"Enter OKX API Secret\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Passphrase\n                      </label>\n                      <input\n                        type=\"password\"\n                        value={apiSettings.okxPassphrase}\n                        onChange={(e) => handleApiChange('okxPassphrase', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        placeholder=\"Enter OKX Passphrase\"\n                      />\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-700\">Use Testnet</span>\n                      <button\n                        onClick={() => handleApiChange('okxTestnet', !apiSettings.okxTestnet)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          apiSettings.okxTestnet ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            apiSettings.okxTestnet ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    <button\n                      onClick={() => handleTestConnection('okx')}\n                      className=\"w-full bg-blue-100 hover:bg-blue-200 text-blue-700 py-2 px-4 rounded-lg transition-colors text-sm\"\n                    >\n                      Test Connection\n                    </button>\n                  </div>\n                </div>\n\n                {/* Webhook Settings */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3 flex items-center\">\n                    <i className=\"ri-webhook-line text-purple-600 mr-2\"></i>\n                    Webhook Settings\n                  </h3>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Webhook URL\n                      </label>\n                      <input\n                        type=\"url\"\n                        value={apiSettings.webhookUrl}\n                        onChange={(e) => handleApiChange('webhookUrl', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        placeholder=\"https://your-webhook-url.com\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Webhook Secret\n                      </label>\n                      <input\n                        type=\"password\"\n                        value={apiSettings.webhookSecret}\n                        onChange={(e) => handleApiChange('webhookSecret', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        placeholder=\"Enter webhook secret\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex space-x-3 mt-6\">\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => setShowApiConfig(false)}\n                  className=\"flex-1\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  onClick={handleApiSave}\n                  className=\"flex-1\"\n                >\n                  Save Settings\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Risk Management Configuration Modal */}\n      {showRiskConfig && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg w-full max-w-md max-h-[90vh] overflow-y-auto\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">Risk Management</h2>\n                <button\n                  onClick={() => setShowRiskConfig(false)}\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n                >\n                  <i className=\"ri-close-line text-xl text-gray-500\"></i>\n                </button>\n              </div>\n\n              <div className=\"space-y-6\">\n                {/* Daily Limits */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Daily Limits</h3>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Maximum Daily Loss ($)\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={riskManagement.maxDailyLoss}\n                        onChange={(e) => handleRiskChange('maxDailyLoss', parseFloat(e.target.value))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        min=\"50\"\n                        max=\"10000\"\n                        step=\"50\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Maximum Position Size ($)\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={riskManagement.maxPositionSize}\n                        onChange={(e) => handleRiskChange('maxPositionSize', parseFloat(e.target.value))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        min=\"100\"\n                        max=\"50000\"\n                        step=\"100\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Maximum Open Positions\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={riskManagement.maxOpenPositions}\n                        onChange={(e) => handleRiskChange('maxOpenPositions', parseInt(e.target.value))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        min=\"1\"\n                        max=\"20\"\n                        step=\"1\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {/* Risk Percentages */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Risk Percentages</h3>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Stop Loss Percentage (%)\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={riskManagement.stopLossPercentage}\n                        onChange={(e) => handleRiskChange('stopLossPercentage', parseFloat(e.target.value))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        min=\"1\"\n                        max=\"20\"\n                        step=\"0.5\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Take Profit Percentage (%)\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={riskManagement.takeProfitPercentage}\n                        onChange={(e) => handleRiskChange('takeProfitPercentage', parseFloat(e.target.value))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        min=\"1\"\n                        max=\"50\"\n                        step=\"0.5\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Risk Per Trade (%)\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={riskManagement.riskPerTrade}\n                        onChange={(e) => handleRiskChange('riskPerTrade', parseFloat(e.target.value))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        min=\"0.5\"\n                        max=\"10\"\n                        step=\"0.1\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Emergency Stop Loss (%)\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={riskManagement.emergencyStopLoss}\n                        onChange={(e) => handleRiskChange('emergencyStopLoss', parseFloat(e.target.value))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        min=\"10\"\n                        max=\"50\"\n                        step=\"1\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {/* Auto Controls */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Automatic Controls</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Auto Stop Trading</span>\n                        <p className=\"text-xs text-gray-500\">Stop all bots when daily loss limit is reached</p>\n                      </div>\n                      <button\n                        onClick={() => handleRiskChange('autoStopTrading', !riskManagement.autoStopTrading)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          riskManagement.autoStopTrading ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            riskManagement.autoStopTrading ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex space-x-3 mt-6\">\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => setShowRiskConfig(false)}\n                  className=\"flex-1\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  onClick={handleRiskSave}\n                  className=\"flex-1\"\n                >\n                  Save Settings\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Alerts Configuration Modal */}\n      {showAlertsConfig && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg w-full max-w-md max-h-[90vh] overflow-y-auto\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">Alert Configuration</h2>\n                <button\n                  onClick={() => setShowAlertsConfig(false)}\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n                >\n                  <i className=\"ri-close-line text-xl text-gray-500\"></i>\n                </button>\n              </div>\n\n              <div className=\"space-y-6\">\n                {/* Trading Alerts */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Trading Alerts</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">New Trade Alerts</span>\n                        <p className=\"text-xs text-gray-500\">Notify when bots open new positions</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('newTradeAlert', !alerts.newTradeAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.newTradeAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.newTradeAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Close Position Alerts</span>\n                        <p className=\"text-xs text-gray-500\">Notify when positions are closed</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('closePositionAlert', !alerts.closePositionAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.closePositionAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.closePositionAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                {/* P&L Alerts */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">P&L Alerts</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Profit Alerts</span>\n                        <p className=\"text-xs text-gray-500\">Notify for profitable trades</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('profitAlert', !alerts.profitAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.profitAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.profitAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    {alerts.profitAlert && (\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Profit Threshold (%)\n                        </label>\n                        <input\n                          type=\"number\"\n                          value={alerts.profitThreshold}\n                          onChange={(e) => handleAlertsChange('profitThreshold', parseFloat(e.target.value))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                          min=\"1\"\n                          max=\"50\"\n                          step=\"0.5\"\n                        />\n                      </div>\n                    )}\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Loss Alerts</span>\n                        <p className=\"text-xs text-gray-500\">Notify for losing trades</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('lossAlert', !alerts.lossAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.lossAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.lossAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    {alerts.lossAlert && (\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Loss Threshold (%)\n                        </label>\n                        <input\n                          type=\"number\"\n                          value={alerts.lossThreshold}\n                          onChange={(e) => handleAlertsChange('lossThreshold', parseFloat(e.target.value))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                          min=\"1\"\n                          max=\"20\"\n                          step=\"0.5\"\n                        />\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Risk Alerts */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Risk Alerts</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Low Balance Alert</span>\n                        <p className=\"text-xs text-gray-500\">Warning when balance is low</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('lowBalanceAlert', !alerts.lowBalanceAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.lowBalanceAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.lowBalanceAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    {alerts.lowBalanceAlert && (\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Low Balance Threshold ($)\n                        </label>\n                        <input\n                          type=\"number\"\n                          value={alerts.lowBalanceThreshold}\n                          onChange={(e) => handleAlertsChange('lowBalanceThreshold', parseFloat(e.target.value))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                          min=\"10\"\n                          max=\"1000\"\n                          step=\"10\"\n                        />\n                      </div>\n                    )}\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Liquidation Risk Alert</span>\n                        <p className=\"text-xs text-gray-500\">Alert when positions are at risk</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('liquidationAlert', !alerts.liquidationAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.liquidationAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.liquidationAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    {alerts.liquidationAlert && (\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Liquidation Threshold (%)\n                        </label>\n                        <input\n                          type=\"number\"\n                          value={alerts.liquidationThreshold}\n                          onChange={(e) => handleAlertsChange('liquidationThreshold', parseFloat(e.target.value))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                          min=\"50\"\n                          max=\"95\"\n                          step=\"5\"\n                        />\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Reporting Alerts */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">P&L Reports</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Daily P&L Report</span>\n                        <p className=\"text-xs text-gray-500\">Daily profit/loss summary</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('dailyPnlAlert', !alerts.dailyPnlAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.dailyPnlAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.dailyPnlAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Weekly P&L Report</span>\n                        <p className=\"text-xs text-gray-500\">Weekly profit/loss summary</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('weeklyPnlAlert', !alerts.weeklyPnlAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.weeklyPnlAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.weeklyPnlAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Monthly P&L Report</span>\n                        <p className=\"text-xs text-gray-500\">Monthly profit/loss summary</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('monthlyPnlAlert', !alerts.monthlyPnlAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.monthlyPnlAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.monthlyPnlAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Notification Channels */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Notification Channels</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-700\">Email Alerts</span>\n                      <button\n                        onClick={() => handleAlertsChange('emailAlerts', !alerts.emailAlerts)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.emailAlerts ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.emailAlerts ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-700\">Push Notifications</span>\n                      <button\n                        onClick={() => handleAlertsChange('pushAlerts', !alerts.pushAlerts)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.pushAlerts ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.pushAlerts ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex space-x-3 mt-6\">\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => setShowAlertsConfig(false)}\n                  className=\"flex-1\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  onClick={handleAlertsSave}\n                  className=\"flex-1\"\n                >\n                  Save Settings\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Profile Modal */}\n      {showEditProfile && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg w-full max-w-md\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">Edit Profile</h2>\n                <button\n                  onClick={() => setShowEditProfile(false)}\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n                >\n                  <i className=\"ri-close-line text-xl text-gray-500\"></i>\n                </button>\n              </div>\n\n              <div className=\"space-y-4\">\n                {/* Profile Picture */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Profile Picture\n                  </label>\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-16 h-16 rounded-full overflow-hidden bg-gray-200\">\n                      {profilePicturePreview ? (\n                        <img \n                          src={profilePicturePreview} \n                          alt=\"Profile\" \n                          className=\"w-full h-full object-cover\"\n                        />\n                      ) : (\n                        <div className=\"w-full h-full flex items-center justify-center\">\n                          <i className=\"ri-user-line text-2xl text-gray-400\"></i>\n                        </div>\n                      )}\n                    </div>\n                    <div>\n                      <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={handleProfilePictureChange}\n                        className=\"hidden\"\n                        id=\"profile-picture\"\n                      />\n                      <label\n                        htmlFor=\"profile-picture\"\n                        className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 cursor-pointer transition-colors\"\n                      >\n                        <i className=\"ri-upload-line mr-2\"></i>\n                        Upload Photo\n                      </label>\n                      <p className=\"text-xs text-gray-500 mt-1\">JPG, PNG up to 5MB</p>\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Full Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={profileData.name}\n                    onChange={(e) => handleProfileChange('name', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"Enter your full name\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Email Address\n                  </label>\n                  <input\n                    type=\"email\"\n                    value={profileData.email}\n                    disabled\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-500\"\n                    placeholder=\"Email cannot be changed\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Bio\n                  </label>\n                  <textarea\n                    value={profileData.bio || ''}\n                    onChange={(e) => handleProfileChange('bio', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"Tell us about yourself\"\n                    rows={3}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Location\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={profileData.location || ''}\n                    onChange={(e) => handleProfileChange('location', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"City, Country\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Website\n                  </label>\n                  <input\n                    type=\"url\"\n                    value={profileData.website || ''}\n                    onChange={(e) => handleProfileChange('website', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"https://yourwebsite.com\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex space-x-3 mt-6\">\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => setShowEditProfile(false)}\n                  className=\"flex-1\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  onClick={handleSaveProfile}\n                  className=\"flex-1\"\n                  disabled={isSavingProfile}\n                >\n                  {isSavingProfile ? (\n                    <>\n                      <i className=\"ri-loader-4-line animate-spin mr-2\"></i>\n                      Saving...\n                    </>\n                  ) : (\n                    'Save Changes'\n                  )}\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <Navigation />\n    </div>\n  );\n}\n\n"],"names":["useTelegram","config","setConfig","useState","loading","setLoading","error","setError","fetchConfig","session","supabase","response","result","err","saveConfig","configData","sendTestMessage","errorData","sendNotification","type","data","useEffect","TelegramSettings","telegramConfig","showConfig","setShowConfig","isSaving","setIsSaving","isTesting","setIsTesting","settings","setSettings","handleSave","handleTest","jsx","Card","jsxs","e","prev","useApiKeys","apiKeys","setApiKeys","fetchApiKeys","apiCall","API_ENDPOINTS","saveApiKey","formData","testApiConnection","toggleApiKey","id","isActive","deleteApiKey","useProfile","callProfileFunction","action","params","profileData","Settings","navigate","useNavigate","signOut","user","useAuth","apiKeysLoading","testConnection","getProfile","updateProfile","notifications","security","setSecurity","trading","setTrading","appearance","setAppearance","saved","apiSettings","setApiSettings","alerts","setAlerts","riskManagement","setRiskManagement","showEditProfile","setShowEditProfile","showApiConfig","setShowApiConfig","showAlertsConfig","setShowAlertsConfig","showRiskConfig","setShowRiskConfig","setProfileData","profilePicture","setProfilePicture","profilePicturePreview","setProfilePicturePreview","isSavingProfile","setIsSavingProfile","currentUserProfile","_a","_b","profile","handleProfilePictureChange","file","reader","event","handleSaveProfile","profilePictureBase64","resolve","reject","handleSecurityChange","key","value","handleTradingChange","handleAppearanceChange","newAppearance","i18nCode","handleApiChange","handleAlertsChange","ensureUserExists","userCheckError","createUserError","handleApiSave","handleAlertsSave","handleProfileChange","field","handleOpenEditProfile","handleTestConnection","exchange","handleSignOut","handleRiskChange","handleRiskSave","Header","apiKey","label","desc","icon","color","Button","Fragment","Navigation"],"mappings":"4PAkBO,SAASA,IAAc,CAC5B,KAAM,CAACC,EAAQC,CAAS,EAAIC,WAAgC,IAAI,EAC1D,CAACC,EAASC,CAAU,EAAIF,WAAS,EAAI,EACrC,CAACG,EAAOC,CAAQ,EAAIJ,WAAwB,IAAI,EAEhDK,EAAc,SAAY,CAC1B,GAAA,CACI,KAAA,CAAE,KAAM,CAAE,QAAAC,IAAc,MAAMC,EAAS,KAAK,aAClD,GAAI,CAACD,EAAS,CACZJ,EAAW,EAAK,EAChB,MACF,CAEA,MAAMM,EAAW,MAAM,MACrB,4FACA,CACE,QAAS,CACP,cAAiB,UAAUF,EAAQ,YAAY,GAC/C,eAAgB,kBAClB,CACF,CAAA,EAGE,GAAA,CAACE,EAAS,GACN,MAAA,IAAI,MAAM,wCAAwC,EAGpD,MAAAC,EAAS,MAAMD,EAAS,OAC1BC,EAAO,SACTV,EAAUU,EAAO,MAAM,QAElBC,EAAU,CACT,QAAA,MAAM,kCAAmCA,CAAG,EACpDN,EAASM,EAAI,OAAO,CAAA,QACpB,CACAR,EAAW,EAAK,CAClB,CAAA,EAGIS,EAAa,MAAOC,GAAwC,CAC5D,GAAA,CACI,KAAA,CAAE,KAAM,CAAE,QAAAN,IAAc,MAAMC,EAAS,KAAK,aAClD,GAAI,CAACD,EACG,MAAA,IAAI,MAAM,mBAAmB,EAGrC,MAAME,EAAW,MAAM,MACrB,6FACA,CACE,OAAQ,OACR,QAAS,CACP,cAAiB,UAAUF,EAAQ,YAAY,GAC/C,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAUM,CAAU,CACjC,CAAA,EAGE,GAAA,CAACJ,EAAS,GACN,MAAA,IAAI,MAAM,uCAAuC,EAGnD,MAAAC,EAAS,MAAMD,EAAS,OAC9B,GAAIC,EAAO,QACT,OAAAV,EAAUU,EAAO,MAAM,EAChB,CAAE,QAAS,GAAM,QAASA,EAAO,OAAQ,EAE5C,MAAA,IAAI,MAAM,8BAA8B,QACvCC,EAAU,CACT,eAAA,MAAM,gCAAiCA,CAAG,EAC3C,CAAE,QAAS,GAAO,QAASA,EAAI,OAAQ,CAChD,CAAA,EAGIG,EAAkB,SAAY,CAC9B,GAAA,CACI,KAAA,CAAE,KAAM,CAAE,QAAAP,IAAc,MAAMC,EAAS,KAAK,aAClD,GAAI,CAACD,EACG,MAAA,IAAI,MAAM,mBAAmB,EAGrC,MAAME,EAAW,MAAM,MACrB,sFACA,CACE,OAAQ,OACR,QAAS,CACP,cAAiB,UAAUF,EAAQ,YAAY,GAC/C,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,EAAE,CACzB,CAAA,EAGE,GAAA,CAACE,EAAS,GAAI,CACV,MAAAM,EAAY,MAAMN,EAAS,OACjC,MAAM,IAAI,MAAMM,EAAU,OAAS,6BAA6B,CAClE,CAEM,MAAAL,EAAS,MAAMD,EAAS,OAC9B,GAAIC,EAAO,QACT,MAAO,CAAE,QAAS,GAAM,QAASA,EAAO,OAAQ,EAE5C,MAAA,IAAI,MAAM,6BAA6B,QACtCC,EAAU,CACT,eAAA,MAAM,8BAA+BA,CAAG,EACzC,CAAE,QAAS,GAAO,QAASA,EAAI,OAAQ,CAChD,CAAA,EAGIK,EAAmB,MAAOC,EAAcC,IAAc,CACtD,GAAA,CACI,KAAA,CAAE,KAAM,CAAE,QAAAX,IAAc,MAAMC,EAAS,KAAK,aAClD,GAAI,CAACD,EACG,MAAA,IAAI,MAAM,mBAAmB,EAGrC,MAAME,EAAW,MAAM,MACrB,sFACA,CACE,OAAQ,OACR,QAAS,CACP,cAAiB,UAAUF,EAAQ,YAAY,GAC/C,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,CACnB,kBAAmBU,EACnB,KAAAC,CAAA,CACD,CACH,CAAA,EAGE,GAAA,CAACT,EAAS,GACN,MAAA,IAAI,MAAM,6BAA6B,EAI/C,OADe,MAAMA,EAAS,QAChB,cACPE,EAAU,CACT,eAAA,MAAM,8BAA+BA,CAAG,EACzC,EACT,CAAA,EAGFQ,OAAAA,EAAAA,UAAU,IAAM,CACFb,GACd,EAAG,CAAE,CAAA,EAEE,CACL,OAAAP,EACA,QAAAG,EACA,MAAAE,EACA,WAAAQ,EACA,gBAAAE,EACA,iBAAAE,EACA,cAAeV,CAAA,CAEnB,CC1KA,SAAwBc,IAAmB,CACzC,KAAM,CAAE,OAAQC,EAAgB,QAAAnB,EAAS,WAAAU,EAAY,gBAAAE,CAAA,EAAoBhB,KACnE,CAACwB,EAAYC,CAAa,EAAItB,WAAS,EAAK,EAC5C,CAACuB,EAAUC,CAAW,EAAIxB,WAAS,EAAK,EACxC,CAACyB,EAAWC,CAAY,EAAI1B,WAAS,EAAK,EAE1C,CAAC2B,EAAUC,CAAW,EAAI5B,WAAS,CACvC,UAAW,GACX,QAAS,GACT,QAAS,GACT,cAAe,CACb,eAAgB,GAChB,YAAa,GACb,YAAa,GACb,eAAgB,GAChB,cAAe,GACf,aAAc,GACd,WAAY,EACd,CAAA,CACD,EAEDkB,EAAAA,UAAU,IAAM,CACVE,GACUQ,EAAA,CACV,UAAWR,EAAe,WAAa,GACvC,QAASA,EAAe,SAAW,GACnC,QAASA,EAAe,QACxB,cAAeA,EAAe,eAAiBO,EAAS,aAAA,CACzD,CACH,EACC,CAACP,CAAc,CAAC,EAEnB,MAAMS,EAAa,SAAY,CAC7BL,EAAY,EAAI,EACV,MAAAf,EAAS,MAAME,EAAWgB,CAAQ,EACxCH,EAAY,EAAK,EAEbf,EAAO,SACT,MAAM,8CAA8C,EACpDa,EAAc,EAAK,GAEb,MAAA,YAAYb,EAAO,OAAO,EAAE,CACpC,EAGIqB,EAAa,SAAY,CAC7BJ,EAAa,EAAI,EACX,MAAAjB,EAAS,MAAMI,IACrBa,EAAa,EAAK,EAEdjB,EAAO,QACT,MAAM,2CAA2C,EAE3C,MAAA,YAAYA,EAAO,OAAO,EAAE,CACpC,EAGF,OAAIR,EAEC8B,EAAA,IAAAC,EAAA,CAAK,UAAU,MACd,SAACD,EAAAA,IAAA,MAAA,CAAI,UAAU,mBACb,SAACA,EAAA,IAAA,MAAA,CAAI,UAAU,sEAAuE,CAAA,EACxF,CACF,CAAA,EAKFE,EAAA,KAACD,EAAK,CAAA,UAAU,MACd,SAAA,CAACC,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,wDACZ,SAAA,CAACF,EAAAA,IAAA,IAAA,CAAE,UAAU,6CAA8C,CAAA,EAAI,wBAAA,EAEjE,EACAE,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACF,EAAAA,IAAA,MAAA,CAAI,UAAW,wBAAwBJ,EAAS,SAAWP,EAAiB,eAAiB,aAAa,EAAI,CAAA,EAC9GW,EAAA,IAAA,OAAA,CAAK,UAAW,WAAWJ,EAAS,SAAWP,EAAiB,iBAAmB,eAAe,GAChG,SAAAO,EAAS,SAAWP,EAAiB,SAAW,WACnD,CAAA,EACF,CAAA,EACF,EAECW,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAE1C,+EAAA,EAEEV,EASAY,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,YAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,WACL,MAAOJ,EAAS,UAChB,SAAWO,GAAMN,EAAqBO,IAAA,CAAE,GAAGA,EAAM,UAAWD,EAAE,OAAO,KAAQ,EAAA,EAC7E,YAAY,wCACZ,UAAU,8GAAA,CACZ,EACCH,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAA+B,kCAAA,CAAA,EAC3E,SAEC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,UAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOJ,EAAS,QAChB,SAAWO,GAAMN,EAAqBO,IAAA,CAAE,GAAGA,EAAM,QAASD,EAAE,OAAO,KAAQ,EAAA,EAC3E,YAAY,YACZ,UAAU,8GAAA,CACZ,EACCH,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAA6C,gDAAA,CAAA,EACzF,EAEAE,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACF,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,qBAAA,EACAE,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,iDACf,SAAA,CAAAF,EAAA,IAAC,QAAA,CACC,KAAK,WACL,QAASJ,EAAS,cAAc,eAChC,SAAWO,GAAMN,EAAqBO,IAAA,CACpC,GAAGA,EACH,cAAe,CAAE,GAAGA,EAAK,cAAe,eAAgBD,EAAE,OAAO,OAAQ,CAAA,EACzE,EACF,UAAU,wEAAA,CACZ,EACCH,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAiB,oBAAA,CAAA,EAC3D,EAEAE,EAAAA,KAAC,QAAM,CAAA,UAAU,iDACf,SAAA,CAAAF,EAAA,IAAC,QAAA,CACC,KAAK,WACL,QAASJ,EAAS,cAAc,YAChC,SAAWO,GAAMN,EAAqBO,IAAA,CACpC,GAAGA,EACH,cAAe,CAAE,GAAGA,EAAK,cAAe,YAAaD,EAAE,OAAO,OAAQ,CAAA,EACtE,EACF,UAAU,wEAAA,CACZ,EACCH,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAc,iBAAA,CAAA,EACxD,EAEAE,EAAAA,KAAC,QAAM,CAAA,UAAU,iDACf,SAAA,CAAAF,EAAA,IAAC,QAAA,CACC,KAAK,WACL,QAASJ,EAAS,cAAc,YAChC,SAAWO,GAAMN,EAAqBO,IAAA,CACpC,GAAGA,EACH,cAAe,CAAE,GAAGA,EAAK,cAAe,YAAaD,EAAE,OAAO,OAAQ,CAAA,EACtE,EACF,UAAU,wEAAA,CACZ,EACCH,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAc,iBAAA,CAAA,EACxD,EAEAE,EAAAA,KAAC,QAAM,CAAA,UAAU,iDACf,SAAA,CAAAF,EAAA,IAAC,QAAA,CACC,KAAK,WACL,QAASJ,EAAS,cAAc,eAChC,SAAWO,GAAMN,EAAqBO,IAAA,CACpC,GAAGA,EACH,cAAe,CAAE,GAAGA,EAAK,cAAe,eAAgBD,EAAE,OAAO,OAAQ,CAAA,EACzE,EACF,UAAU,wEAAA,CACZ,EACCH,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAQ,WAAA,CAAA,EAClD,EAEAE,EAAAA,KAAC,QAAM,CAAA,UAAU,iDACf,SAAA,CAAAF,EAAA,IAAC,QAAA,CACC,KAAK,WACL,QAASJ,EAAS,cAAc,aAChC,SAAWO,GAAMN,EAAqBO,IAAA,CACpC,GAAGA,EACH,cAAe,CAAE,GAAGA,EAAK,cAAe,aAAcD,EAAE,OAAO,OAAQ,CAAA,EACvE,EACF,UAAU,wEAAA,CACZ,EACCH,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAe,kBAAA,CAAA,EACzD,EAEAE,EAAAA,KAAC,QAAM,CAAA,UAAU,iDACf,SAAA,CAAAF,EAAA,IAAC,QAAA,CACC,KAAK,WACL,QAASJ,EAAS,cAAc,WAChC,SAAWO,GAAMN,EAAqBO,IAAA,CACpC,GAAGA,EACH,cAAe,CAAE,GAAGA,EAAK,cAAe,WAAYD,EAAE,OAAO,OAAQ,CAAA,EACrE,EACF,UAAU,wEAAA,CACZ,EACCH,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAa,gBAAA,CAAA,EACvD,EAEAE,EAAAA,KAAC,QAAM,CAAA,UAAU,iDACf,SAAA,CAAAF,EAAA,IAAC,QAAA,CACC,KAAK,WACL,QAASJ,EAAS,cAAc,cAChC,SAAWO,GAAMN,EAAqBO,IAAA,CACpC,GAAGA,EACH,cAAe,CAAE,GAAGA,EAAK,cAAe,cAAeD,EAAE,OAAO,OAAQ,CAAA,EACxE,EACF,UAAU,wEAAA,CACZ,EACCH,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAgB,mBAAA,CAAA,EAC1D,CAAA,EACF,CAAA,EACF,EAEAE,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAF,EAAA,IAAC,SAAA,CACC,QAASF,EACT,SAAUN,GAAY,CAACI,EAAS,WAAa,CAACA,EAAS,QACvD,UAAU,uJAET,WAAW,YAAc,uBAAA,CAC5B,EAEAI,EAAA,IAAC,SAAA,CACC,QAASD,EACT,SAAUL,GAAa,CAACL,EACxB,UAAU,8IAET,WAAY,aAAe,SAAA,CAC9B,EAEAW,EAAA,IAAC,SAAA,CACC,QAAS,IAAMT,EAAc,EAAK,EAClC,UAAU,iGACX,SAAA,QAAA,CAED,CAAA,EACF,EAEAW,EAAAA,KAAC,MAAI,CAAA,UAAU,wFACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,6DACZ,SAAA,CAACF,EAAAA,IAAA,IAAA,CAAE,UAAU,0BAA2B,CAAA,EAAI,2BAAA,EAE9C,EACAE,EAAAA,KAAC,KAAG,CAAA,UAAU,kEACZ,SAAA,CAAAA,OAAC,KAAG,CAAA,SAAA,CAAA,gCAA8BF,EAAA,IAAA,SAAA,CAAO,UAAU,YAAY,SAAU,aAAA,CAAA,EAAS,SACjF,KAAG,CAAA,SAAA,CAAA,gBAAcA,EAAA,IAAA,OAAA,CAAK,UAAU,kCAAkC,SAAO,UAAA,EAAO,0BAAA,EAAwB,SACxG,KAAG,CAAA,SAAA,CAAA,YAAUA,EAAA,IAAA,SAAA,CAAO,UAAU,YAAY,SAAS,YAAA,EAAS,cAAA,EAAY,SACxE,KAAG,CAAA,SAAA,CAAA,cAAYA,EAAA,IAAA,SAAA,CAAO,UAAU,YAAY,SAAY,eAAA,EAAS,sBAAA,EAAoB,SACrF,KAAG,CAAA,SAAA,CAAA,qCAAmCA,EAAA,IAAA,SAAA,CAAO,UAAU,YAAY,SAAI,OAAA,CAAA,EAAS,SAChF,KAAG,CAAA,SAAA,CAAA,SAAOA,EAAA,IAAA,SAAA,CAAO,UAAU,YAAY,SAAI,OAAA,EAAS,gCAAA,EAA8B,CAAA,EACrF,CAAA,EACF,CAAA,EACF,EA9KAE,EAAA,KAAC,SAAA,CACC,QAAS,IAAMX,EAAc,EAAI,EACjC,UAAU,qGAEV,SAAA,CAACS,EAAAA,IAAA,IAAA,CAAE,UAAU,uBAAwB,CAAA,EACpCX,EAAiB,qBAAuB,8BAAA,CAAA,CAG3C,CAwKJ,CAAA,CAAA,CAEJ,CC1PO,SAASgB,IAAa,CAC3B,KAAM,CAACC,EAASC,CAAU,EAAItC,EAAA,SAAmB,CAAE,CAAA,EAC7C,CAACC,EAASC,CAAU,EAAIF,WAAS,EAAI,EACrC,CAACG,EAAOC,CAAQ,EAAIJ,WAAwB,IAAI,EAEhDuC,EAAe,SAAY,CAC3B,GAAA,CACFrC,EAAW,EAAI,EACf,MAAMM,EAAW,MAAMgC,EAAQ,GAAGC,EAAc,QAAQ,OAAO,EACpDH,EAAA9B,EAAS,SAAW,CAAA,CAAE,EACjCJ,EAAS,IAAI,QACNM,EAAK,CACZN,EAASM,aAAe,MAAQA,EAAI,QAAU,0BAA0B,CAAA,QACxE,CACAR,EAAW,EAAK,CAClB,CAAA,EAGIwC,EAAa,MAAOC,GAA6B,CACjD,GAAA,CACFzC,EAAW,EAAI,EACf,MAAMM,EAAW,MAAMgC,EAAQ,GAAGC,EAAc,QAAQ,QAAS,CAC/D,OAAQ,OACR,KAAM,KAAK,UAAUE,CAAQ,CAAA,CAC9B,EAGD,aAAMJ,EAAa,EACZ/B,EAAS,aACTE,EAAK,CACZ,MAAM,IAAI,MAAMA,aAAe,MAAQA,EAAI,QAAU,wBAAwB,CAAA,QAC7E,CACAR,EAAW,EAAK,CAClB,CAAA,EAGI0C,EAAoB,MAAOD,GAA6B,CACxD,GAAA,CAKK,OAJU,MAAMH,EAAQ,GAAGC,EAAc,QAAQ,QAAS,CAC/D,OAAQ,OACR,KAAM,KAAK,UAAUE,CAAQ,CAAA,CAC9B,QAEMjC,EAAK,CACZ,MAAM,IAAI,MAAMA,aAAe,MAAQA,EAAI,QAAU,+BAA+B,CACtF,CAAA,EAGImC,EAAe,MAAOC,EAAYC,IAAsB,CACxD,GAAA,CACF,MAAMvC,EAAW,MAAMgC,EAAQ,GAAGC,EAAc,QAAQ,UAAW,CACjE,OAAQ,MACR,KAAM,KAAK,UAAU,CAAE,GAAAK,EAAI,SAAAC,EAAU,CAAA,CACtC,EAGD,aAAMR,EAAa,EACZ/B,EAAS,aACTE,EAAK,CACZ,MAAM,IAAI,MAAMA,aAAe,MAAQA,EAAI,QAAU,0BAA0B,CACjF,CAAA,EAGIsC,EAAe,MAAOF,GAAe,CACrC,GAAA,CACF,MAAMN,EAAQ,GAAGC,EAAc,QAAQ,OAAOK,CAAE,GAAI,CAClD,OAAQ,QAAA,CACT,EAGD,MAAMP,EAAa,QACZ7B,EAAK,CACZ,MAAM,IAAI,MAAMA,aAAe,MAAQA,EAAI,QAAU,0BAA0B,CACjF,CAAA,EAGFQ,OAAAA,EAAAA,UAAU,IAAM,CACDqB,GACf,EAAG,CAAE,CAAA,EAEE,CACL,QAAAF,EACA,QAAApC,EACA,MAAAE,EACA,WAAAuC,EACA,kBAAAE,EACA,aAAAC,EACA,aAAAG,EACA,QAAST,CAAA,CAEb,CC9FO,SAASU,IAAa,CAC3B,KAAM,CAAChD,EAASC,CAAU,EAAIF,WAAS,EAAK,EACtC,CAACG,EAAOC,CAAQ,EAAIJ,WAAwB,IAAI,EAEhDkD,EAAsB,MAAOC,EAAgBC,EAAc,CAAA,IAAO,CAClE,GAAA,CACFlD,EAAW,EAAI,EACfE,EAAS,IAAI,EAEP,KAAA,CAAE,KAAAa,EAAM,MAAAd,CAAAA,EAAU,MAAMI,EAAS,UAAU,OAAO,qBAAsB,CAC5E,KAAM,CAAE,OAAA4C,EAAQ,GAAGC,CAAO,CAAA,CAC3B,EAEGjD,GAAAA,EAAaA,MAAAA,EACV,OAAAc,QACAP,EAAU,CACjB,MAAAN,EAASM,EAAI,OAAO,EACdA,CAAA,QACN,CACAR,EAAW,EAAK,CAClB,CAAA,EAYK,MAAA,CACL,QAAAD,EACA,MAAAE,EACA,WAZiB,UACJ,MAAM+C,EAAoB,YAAY,GACvC,QAWZ,cARoB,MAAOG,GACpB,MAAMH,EAAoB,gBAAiBG,CAAW,CAO7D,CAEJ,CCrCA,SAAwBC,IAAW,OACjC,MAAMC,EAAWC,KACX,CAAE,QAAAC,EAAS,KAAAC,CAAK,EAAIC,GAAQ,EAC5B,CAAE,QAAAtB,EAAS,QAASuB,EAAgB,WAAAlB,EAAY,kBAAmBmB,EAAgB,aAAAhB,EAAc,aAAAG,CAAa,EAAIZ,GAAW,EAC7H,CAAE,WAAA0B,EAAY,cAAAC,CAAc,EAAId,GAAW,EAE3C,CAACe,CAAa,EAAIhE,WAAS,CAC/B,KAAM,GACN,MAAO,GACP,QAAS,GACT,MAAO,EAAA,CACR,EAEK,CAACiE,EAAUC,CAAW,EAAIlE,WAAS,CACvC,UAAW,GACX,UAAW,GACX,WAAY,EAAA,CACb,EAEK,CAACmE,EAASC,CAAU,EAAIpE,WAAS,CACrC,gBAAiB,EACjB,UAAW,SACX,cAAe,GACf,SAAU,CAAA,CACX,EAEK,CAACqE,EAAYC,EAAa,EAAItE,WAAS,IAAM,CAE3C,MAAAuE,EAAQ,aAAa,QAAQ,qBAAqB,EACxD,OAAIA,EACK,KAAK,MAAMA,CAAK,EAElB,CACL,MAAO,QACP,SAAU,MACV,SAAU,SAAA,CACZ,CACD,EAEK,CAACC,EAAaC,EAAc,EAAIzE,WAAS,CAC7C,YAAa,GACb,eAAgB,GAChB,aAAc,GACd,UAAW,GACX,aAAc,GACd,cAAe,GACf,WAAY,GACZ,WAAY,GACZ,cAAe,GACf,cAAe,EAAA,CAChB,EAEK,CAAC0E,EAAQC,EAAS,EAAI3E,WAAS,CACnC,eAAgB,EAChB,aAAc,GACd,gBAAiB,GACjB,cAAe,GACf,YAAa,GACb,YAAa,GACb,WAAY,GACZ,cAAe,GACf,YAAa,GACb,eAAgB,GAEhB,gBAAiB,GACjB,oBAAqB,IACrB,iBAAkB,GAClB,qBAAsB,GACtB,cAAe,GACf,mBAAoB,GACpB,YAAa,GACb,gBAAiB,EACjB,UAAW,GACX,cAAe,EACf,cAAe,GACf,eAAgB,GAChB,gBAAiB,EAAA,CAClB,EAEK,CAAC4E,EAAgBC,EAAiB,EAAI7E,WAAS,CACnD,aAAc,IACd,gBAAiB,IACjB,mBAAoB,EACpB,qBAAsB,GACtB,iBAAkB,EAClB,aAAc,EACd,gBAAiB,GACjB,kBAAmB,EAAA,CACpB,EAEK,CAAC8E,GAAiBC,CAAkB,EAAI/E,WAAS,EAAK,EACtD,CAACgF,GAAeC,CAAgB,EAAIjF,WAAS,EAAK,EAClD,CAACkF,GAAkBC,CAAmB,EAAInF,WAAS,EAAK,EACxD,CAACoF,GAAgBC,CAAiB,EAAIrF,WAAS,EAAK,EACpD,CAACqD,EAAaiC,CAAc,EAAItF,WAAsB,CAC1D,GAAI,GACJ,MAAO,GACP,KAAM,GACN,IAAK,GACL,SAAU,GACV,QAAS,GACT,oBAAqB,EAAA,CACtB,EAEK,CAACuF,EAAgBC,EAAiB,EAAIxF,WAAsB,IAAI,EAChE,CAACyF,EAAuBC,CAAwB,EAAI1F,WAAiB,EAAE,EACvE,CAAC2F,EAAiBC,CAAkB,EAAI5F,WAAS,EAAK,EAI5DkB,EAAAA,UAAU,IAAM,CACVmD,EAAW,QAAU,QACd,SAAA,gBAAgB,UAAU,IAAI,MAAM,EACpC,SAAA,KAAK,UAAU,IAAI,MAAM,IAEzB,SAAA,gBAAgB,UAAU,OAAO,MAAM,EACvC,SAAA,KAAK,UAAU,OAAO,MAAM,GAEvC,QAAQ,IAAI,qBAAqBA,EAAW,KAAK,EAAE,CAAA,EAClD,CAACA,EAAW,KAAK,CAAC,EAErBnD,EAAAA,UAAU,IAAM,CAyCVwC,IAxCgB,SAAY,SAC1B,GAAA,CAIF,GAHQ,QAAA,IAAI,+BAAgCA,GAAA,YAAAA,EAAM,KAAK,EAGnDA,EAAM,CACR,MAAMmC,EAAqB,CACzB,GAAInC,EAAK,GACT,MAAOA,EAAK,OAAS,GACrB,OAAMoC,EAAApC,EAAK,gBAAL,YAAAoC,EAAoB,SAAQC,EAAArC,EAAK,QAAL,YAAAqC,EAAY,MAAM,KAAK,KAAM,OAC/D,IAAK,GACL,SAAU,GACV,QAAS,GACT,oBAAqB,EAAA,EAEf,QAAA,IAAI,8CAA+CF,CAAkB,EAC7EP,EAAeO,CAAkB,CACnC,CAGM,MAAAG,EAAU,MAAMlC,IACd,QAAA,IAAI,kCAAmCkC,CAAO,EAGlDA,EAAQ,SAAUtC,GAAA,YAAAA,EAAM,QAC1B,QAAQ,IAAI,8BAA8B,EAC1C4B,EAAeU,CAAO,EAClBA,EAAQ,qBACVN,EAAyBM,EAAQ,mBAAmB,GAGtD,QAAQ,IAAI,+DAA+D,QAEtE7F,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EAE/C,QAAQ,IAAI,2CAA2C,CACzD,CAAA,IAKF,EACC,CAACuD,CAAI,CAAC,EAEH,MAAAuC,GAA8B/D,GAA2C,OAC7E,MAAMgE,GAAOJ,EAAA5D,EAAE,OAAO,QAAT,YAAA4D,EAAiB,GAC9B,GAAII,EAAM,CACRV,GAAkBU,CAAI,EAEhB,MAAAC,EAAS,IAAI,WACZA,EAAA,OAAUC,GAAU,QACrBN,EAAAM,EAAM,SAAN,MAAAN,EAAc,QACSJ,EAAAU,EAAM,OAAO,MAAgB,CACxD,EAEFD,EAAO,cAAcD,CAAI,CAC3B,CAAA,EAGIG,GAAoB,SAAY,CACpC,GAAIV,EAAiB,CACnB,QAAQ,IAAI,+DAA+D,EAC3E,MACF,CAEI,GAAA,CACFC,EAAmB,EAAI,EACvB,QAAQ,IAAI,6BAA6B,EACzC,IAAIU,EAAuB,GAGvBf,IACF,QAAQ,IAAI,4CAA4C,EACxDe,EAAuB,MAAM,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtD,MAAAL,EAAS,IAAI,WACZA,EAAA,OAAUC,GAAU,QACrBN,EAAAM,EAAM,SAAN,MAAAN,EAAc,OACRS,EAAAH,EAAM,OAAO,MAAgB,EAE9BI,EAAA,IAAI,MAAM,qBAAqB,CAAC,CACzC,EAEFL,EAAO,QAAU,IAAMK,EAAO,IAAI,MAAM,iBAAiB,CAAC,EAC1DL,EAAO,cAAcZ,CAAc,CAAA,CACpC,GAGH,QAAQ,IAAI,qCAAqC,EAE3C,MAAA9E,EAAS,MAAMsD,EAAc,CACjC,KAAMV,EAAY,KAClB,IAAKA,EAAY,IACjB,SAAUA,EAAY,SACtB,QAASA,EAAY,QACrB,eAAgBiD,CAAA,CACjB,EAEO,QAAA,IAAI,2BAA4B7F,CAAM,EAC1CA,EAAO,SAELA,EAAO,oBACTiF,EAAyBjF,EAAO,iBAAiB,EACjD6E,MAAwB,CAAE,GAAGnD,EAAM,oBAAqB1B,EAAO,iBAAoB,EAAA,GAGrF,MAAM,6BAA6B,EACnCsE,EAAmB,EAAK,GAExB,MAAM,2BAA2BtE,EAAO,SAAW,eAAe,EAAE,QAE/DN,EAAY,CACX,QAAA,MAAM,0BAA2BA,CAAK,EACxC,MAAA,2BAA2BA,EAAM,OAAO,EAAE,CAAA,QAChD,CACAyF,EAAmB,EAAK,CAC1B,CAAA,EAGIa,EAAuB,CAACC,EAAaC,IAAe,CAC5CzC,EAAA/B,IAAS,CAAE,GAAGA,EAAM,CAACuE,CAAG,EAAGC,CAAQ,EAAA,CAAA,EAG3CC,EAAsB,CAACF,EAAaC,IAAe,CAC5CvC,EAAAjC,IAAS,CAAE,GAAGA,EAAM,CAACuE,CAAG,EAAGC,CAAQ,EAAA,CAAA,EAG1CE,EAAyB,CAACH,EAAaC,IAAe,CAC1D,QAAQ,IAAI,yBAAyBD,CAAG,MAAMC,CAAK,EAAE,EAErD,MAAMG,EAAgB,CAAE,GAAGzC,EAAY,CAACqC,CAAG,EAAGC,CAAM,EAuBpD,GAtBArC,GAAcwC,CAAa,EAG3B,aAAa,QAAQ,sBAAuB,KAAK,UAAUA,CAAa,CAAC,EACjE,QAAA,IAAI,4BAA6BA,CAAa,EAGlDJ,IAAQ,UACF,QAAA,IAAI,4BAA4BC,CAAK,EAAE,EAE3CA,IAAU,QACH,SAAA,gBAAgB,UAAU,IAAI,MAAM,EACpC,SAAA,KAAK,UAAU,IAAI,MAAM,EAClC,MAAM,sBAAsB,IAEnB,SAAA,gBAAgB,UAAU,OAAO,MAAM,EACvC,SAAA,KAAK,UAAU,OAAO,MAAM,EACrC,MAAM,uBAAuB,IAK7BD,IAAQ,WAAY,CAchB,MAAAK,EAZyC,CAC7C,QAAW,KACX,QAAW,KACX,OAAU,KACV,OAAU,KACV,QAAW,KACX,SAAY,KACZ,OAAU,KACV,QAAW,KACX,WAAc,KACd,QAAW,IAAA,EAEgBJ,CAAK,GAAK,KAC1B,aAAA,QAAQ,aAAcI,CAAQ,EAC3C,QAAQ,IAAI,2BAA2BJ,CAAK,KAAKI,CAAQ,GAAG,EAExD,QAAQ,sBAAsBJ,CAAK;AAAA;AAAA,gDAAsD,GAC3F,OAAO,SAAS,QAEpB,CAGID,IAAQ,aACF,QAAA,IAAI,2BAA2BC,CAAK,EAAE,EACxC,MAAA,yBAAyBA,CAAK,GAAG,EACzC,EAGIK,EAAkB,CAACN,EAAaC,IAAe,CACpClC,GAAAtC,IAAS,CAAE,GAAGA,EAAM,CAACuE,CAAG,EAAGC,CAAQ,EAAA,CAAA,EAG9CM,EAAqB,CAACP,EAAaC,IAAe,CAC5ChC,GAAAxC,IAAS,CAAE,GAAGA,EAAM,CAACuE,CAAG,EAAGC,CAAQ,EAAA,CAAA,EAIzCO,GAAmB,SAAY,SAC/B,GAAA,CACI,KAAA,CAAE,KAAM,CAAE,KAAAxD,CAAAA,CAAW,EAAA,MAAMnD,EAAS,KAAK,UAC/C,GAAI,CAACmD,EAAa,MAAA,GAGlB,KAAM,CAAE,MAAOyD,CAAA,EAAmB,MAAM5G,EACrC,KAAK,OAAO,EACZ,OAAO,IAAI,EACX,GAAG,KAAMmD,EAAK,EAAE,EAChB,SAEC,GAAAyD,GAAkBA,EAAe,OAAS,WAAY,CAElD,KAAA,CAAE,MAAOC,GAAoB,MAAM7G,EACtC,KAAK,OAAO,EACZ,OAAO,CACN,GAAImD,EAAK,GACT,MAAOA,EAAK,MACZ,KAAM,OACN,OAAMA,EAAAA,EAAK,gBAALA,YAAAA,EAAoB,SAAQA,EAAAA,EAAK,QAALA,YAAAA,EAAY,MAAM,KAAK,KAAM,OAC/D,WAAY,IAAI,KAAK,EAAE,YAAY,EACnC,WAAY,IAAI,KAAK,EAAE,YAAY,CAAA,CACpC,EAEH,OAAI0D,GACM,QAAA,MAAM,uBAAwBA,CAAe,EAC9C,KAED,QAAA,IAAI,gBAAiB1D,EAAK,EAAE,EAC7B,YACEyD,EACD,eAAA,MAAM,uBAAwBA,CAAc,EAC7C,GAEF,MAAA,SACAhH,EAAO,CACN,eAAA,MAAM,8BAA+BA,CAAK,EAC3C,EACT,CAAA,EAGIkH,GAAgB,SAAY,CAC5B,GAAA,CAGF,GAAI,CADe,MAAMH,KACR,CACf,MAAM,kDAAkD,EACxD,MACF,CAGI1C,EAAY,aAAeA,EAAY,gBACzC,MAAM9B,EAAW,CACf,SAAU,QACV,OAAQ8B,EAAY,YACpB,UAAWA,EAAY,eACvB,UAAWA,EAAY,YAAA,CACxB,EAICA,EAAY,WAAaA,EAAY,cACvC,MAAM9B,EAAW,CACf,SAAU,MACV,OAAQ8B,EAAY,UACpB,UAAWA,EAAY,aACvB,WAAYA,EAAY,cACxB,UAAWA,EAAY,UAAA,CACxB,EAGLS,EAAiB,EAAK,EACpB,MAAM,8BAA8B,QAC7B9E,EAAY,CACb,MAAA,4BAA4BA,EAAM,OAAO,EAAE,CACnD,CAAA,EAGImH,GAAmB,IAAM,CAE7BnC,EAAoB,EAAK,CAAA,EAGrBoC,EAAsB,CAACC,EAA0Bb,IAAkB,CACxDrB,EAAAnD,IAAS,CAAE,GAAGA,EAAM,CAACqF,CAAK,EAAGb,CAAQ,EAAA,CAAA,EAGhDc,GAAwB,SAAY,SAIxC,GAHQ,QAAA,IAAI,0CAA2C/D,GAAA,YAAAA,EAAM,KAAK,EAG9DA,EAAM,CACR,QAAQ,IAAI,0CAA0C,EACtD,MAAMmC,EAAqB,CACzB,GAAInC,EAAK,GACT,MAAOA,EAAK,OAAS,GACrB,OAAMoC,EAAApC,EAAK,gBAAL,YAAAoC,EAAoB,SAAQC,EAAArC,EAAK,QAAL,YAAAqC,EAAY,MAAM,KAAK,KAAM,OAC/D,IAAK,GACL,SAAU,GACV,QAAS,GACT,oBAAqB,EAAA,EAEf,QAAA,IAAI,gCAAiCF,CAAkB,EAC/DP,EAAeO,CAAkB,CACnC,CAGI,GAAA,CACI,MAAAG,EAAU,MAAMlC,IACd,QAAA,IAAI,2BAA4BkC,CAAO,EAE3CA,EAAQ,SAAUtC,GAAA,YAAAA,EAAM,QAC1B,QAAQ,IAAI,8BAA8B,EAC1C4B,EAAeU,CAAO,EAClBA,EAAQ,qBACVN,EAAyBM,EAAQ,mBAAmB,GAGtD,QAAQ,IAAI,6DAA6D,QAEpE7F,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,CACpD,CAEA4E,EAAmB,EAAI,CAAA,EAGnB2C,EAAuB,MAAOC,GAA8B,CAC5D,GAAA,CACE,IAAAhF,EAEAgF,IAAa,QACJhF,EAAA,CACT,SAAU,QACV,OAAQ6B,EAAY,YACpB,UAAWA,EAAY,eACvB,UAAWA,EAAY,YAAA,EAGd7B,EAAA,CACT,SAAU,MACV,OAAQ6B,EAAY,UACpB,UAAWA,EAAY,aACvB,WAAYA,EAAY,cACxB,UAAWA,EAAY,UAAA,EAIrB,MAAA/D,EAAS,MAAMoD,EAAelB,CAAQ,EAExClC,EAAO,QACT,MAAM,GAAGkH,EAAS,YAAY,CAAC,6BAA6B,EAE5D,MAAM,GAAGA,EAAS,YAAA,CAAa,2BAA2BlH,EAAO,OAAO,EAAE,QAErEN,EAAY,CACnB,MAAM,kBAAkBwH,EAAS,YAAA,CAAa,SAASxH,EAAM,OAAO,EAAE,CACxE,CAAA,EAGIyH,GAAgB,SAAY,CAC5B,GAAA,CACF,KAAM,CAAE,MAAAzH,CAAA,EAAU,MAAMsD,IACpBtD,EACM,QAAA,MAAM,kBAAmBA,CAAK,EAEtCoD,EAAS,OAAO,QAEXpD,EAAO,CACN,QAAA,MAAM,mBAAoBA,CAAK,CACzC,CAAA,EAGI0H,EAAmB,CAACnB,EAAaC,IAAe,CAClC9B,GAAA1C,IAAS,CAAE,GAAGA,EAAM,CAACuE,CAAG,EAAGC,CAAQ,EAAA,CAAA,EAGjDmB,GAAiB,IAAM,CAE3BzC,EAAkB,EAAK,CAAA,EAIvB,OAAApD,EAAA,KAAC,MAAI,CAAA,UAAU,2CACb,SAAA,CAACF,EAAAA,IAAAgG,GAAA,CAAO,MAAM,UAAW,CAAA,EAEzB9F,EAAAA,KAAC,MAAI,CAAA,UAAU,6BAGb,SAAA,CAACA,EAAAA,KAAAD,EAAA,CAAK,UAAU,MACd,SAAA,CAACC,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAF,MAAC,MAAI,CAAA,UAAU,WACZ,SAAA0D,GAAyBpC,EAAY,oBACpCtB,EAAA,IAAC,MAAA,CACC,IAAK0D,GAAyBpC,EAAY,oBAC1C,IAAI,UACJ,UAAU,8DAAA,CACZ,EAECtB,EAAA,IAAA,MAAA,CAAI,UAAU,+FACb,eAAC,IAAE,CAAA,UAAU,qCAAsC,CAAA,CAAA,CACrD,CAEJ,CAAA,EACAE,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAF,EAAA,IAAC,KAAG,CAAA,UAAU,sCACX,SAAAsB,EAAY,QAAQyC,EAAApC,GAAA,YAAAA,EAAM,QAAN,YAAAoC,EAAa,MAAM,KAAK,KAAM,OACrD,QACC,IAAE,CAAA,UAAU,gBAAiB,UAAApC,GAAA,YAAAA,EAAM,QAAS,WAAW,EACvDL,EAAY,KACXtB,EAAA,IAAC,KAAE,UAAU,6BAA8B,WAAY,IAAI,EAE5DA,EAAA,IAAA,OAAA,CAAK,UAAW,qDACf2B,GAAA,YAAAA,EAAM,QAAS,QACX,0BACA,6BACN,GACG,UAAAA,GAAA,YAAAA,EAAM,QAAS,QAAU,QAAU,aACtC,CAAA,EACF,CAAA,EACF,EACAzB,EAAA,KAAC,SAAA,CACC,QAASwF,GACT,UAAU,4FAEV,SAAA,CAAC1F,EAAAA,IAAA,IAAA,CAAE,UAAU,mBAAoB,CAAA,EAAI,cAAA,CAAA,CAEvC,EACAE,EAAA,KAAC,SAAA,CACC,QAAS,SAAY,CACX,QAAA,IAAI,sCAAuCyB,GAAA,YAAAA,EAAM,KAAK,EAC1D,GAAA,CACI,MAAAsC,EAAU,MAAMlC,IACd,QAAA,IAAI,oCAAqCkC,CAAO,EACxDV,EAAeU,CAAO,EACtB,MAAM,+CAA+C,QAC9C7F,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EAC/C,MAAM,oDAAoD,CAC5D,CACF,EACA,UAAU,iGAEV,SAAA,CAAC4B,EAAAA,IAAA,IAAA,CAAE,UAAU,sBAAuB,CAAA,EAAI,sBAAA,CAAA,CAE1C,CAAA,EACF,EAGAE,EAAAA,KAACD,EAAK,CAAA,UAAU,MACd,SAAA,CAACC,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACF,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAAoB,uBAAA,EACxEE,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACF,EAAAA,IAAA,MAAA,CAAI,UAAW,wBAAwBM,EAAQ,OAAS,EAAI,eAAiB,aAAa,EAAI,CAAA,QAC9F,OAAK,CAAA,UAAW,WAAWA,EAAQ,OAAS,EAAI,iBAAmB,eAAe,GAChF,WAAQ,OAAS,EAAI,GAAGA,EAAQ,MAAM,aAAe,gBACxD,CAAA,EACF,CAAA,EACF,EACCN,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAAoE,uEAAA,EAE7G6B,EACC3B,EAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACF,EAAAA,IAAA,MAAA,CAAI,UAAU,2EAA4E,CAAA,EAC1FA,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAsB,yBAAA,CAAA,EACjD,EACFM,EAAQ,SAAW,EACpBJ,OAAA,MAAA,CAAI,UAAU,iCACb,SAAA,CAACF,EAAAA,IAAA,IAAA,CAAE,UAAU,gCAAiC,CAAA,EAC9CA,EAAAA,IAAC,KAAE,SAA6B,+BAAA,CAAA,EAC/BA,EAAA,IAAA,IAAA,CAAE,UAAU,UAAU,SAA6C,gDAAA,EAClEE,EAAA,KAAC,SAAA,CACC,QAAS,IAAMgD,EAAiB,EAAI,EACtC,UAAU,uFAEV,SAAA,CAAClD,EAAAA,IAAA,IAAA,CAAE,UAAU,kBAAmB,CAAA,EAAI,kBAAA,CAAA,CAEpC,CAAA,CACF,CAAA,EAEFE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CAAAI,EAAQ,IAAK2F,GACX/F,EAAAA,KAAA,MAAA,CAAoB,UAAU,8DACjC,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACT,SAAA,CAAAF,EAAAA,IAAC,OAAI,UAAW,yDACdiG,EAAO,WAAa,QAAU,gBAAkB,aAClD,GACE,eAAC,IAAE,CAAA,UAAW,GAAGA,EAAO,WAAa,QAAU,mCAAqC,gCAAgC,GAAI,CAC9H,CAAA,SACC,MACK,CAAA,SAAA,CAAC/F,EAAAA,KAAA,IAAA,CAAE,UAAU,4BAA6B,SAAA,CAAA+F,EAAO,SAAS,YAAY,EAAE,MAAA,EAAI,EAChF/F,EAAAA,KAAC,IAAE,CAAA,UAAU,wBACN,SAAA,CAAA+F,EAAO,SAAW,SAAW,WAAW,MAAIA,EAAO,UAAY,UAAY,MAAA,EAClF,CAAA,EACF,CAAA,EACF,EACA/F,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAF,EAAA,IAAC,SAAA,CACK,QAAS,IAAMc,EAAamF,EAAO,GAAI,CAACA,EAAO,QAAQ,EACvD,UAAW,8CACTA,EAAO,SACH,iDACA,6CACN,GAEC,SAAAA,EAAO,SAAW,SAAW,UAAA,CAChC,EACAjG,EAAA,IAAC,SAAA,CACC,QAAS,IAAMiB,EAAagF,EAAO,EAAE,EACrC,UAAU,sDACX,SAAA,QAAA,CAEL,CAAA,EACF,CAAA,GA/BYA,EAAO,EAgCrB,CACG,EACD/F,EAAA,KAAC,SAAA,CACC,QAAS,IAAMgD,EAAiB,EAAI,EACpC,UAAU,4FAEV,SAAA,CAAClD,EAAAA,IAAA,IAAA,CAAE,UAAU,kBAAmB,CAAA,EAAI,yBAAA,CAAA,CAEtC,CAAA,EACJ,CAAA,EAEF,EAGAE,EAAAA,KAACD,EAAK,CAAA,UAAU,MACd,SAAA,CAACC,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACF,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAAe,kBAAA,EACnEA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMsD,EAAkB,EAAI,EACrC,UAAU,wDACX,SAAA,WAAA,CAED,CAAA,EACF,EACCtD,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAAiD,oDAAA,EAE3FE,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,2BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAACF,EAAAA,IAAA,IAAA,CAAE,UAAU,6BAA8B,CAAA,EAC1CA,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAc,iBAAA,CAAA,EACpE,EACAE,EAAAA,KAAC,IAAE,CAAA,UAAU,wBAAwB,SAAA,CAAA,IAAE2C,EAAe,YAAA,EAAa,CAAA,EACrE,EAEA3C,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAACF,EAAAA,IAAA,IAAA,CAAE,UAAU,mCAAoC,CAAA,EAChDA,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAa,gBAAA,CAAA,EACnE,EACAE,EAAAA,KAAC,IAAE,CAAA,UAAU,wBAAwB,SAAA,CAAA,QAAM2C,EAAe,eAAA,EAAgB,CAAA,EAC5E,EAEA3C,EAAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAACF,EAAAA,IAAA,IAAA,CAAE,UAAU,4BAA6B,CAAA,EACzCA,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAS,YAAA,CAAA,EAC/D,EACAE,EAAAA,KAAC,IAAE,CAAA,UAAU,wBAAyB,SAAA,CAAe2C,EAAA,mBAAmB,GAAA,EAAC,CAAA,EAC3E,EAEA3C,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAACF,EAAAA,IAAA,IAAA,CAAE,UAAU,+BAAgC,CAAA,EAC5CA,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAW,cAAA,CAAA,EACjE,EACAE,EAAAA,KAAC,IAAE,CAAA,UAAU,wBAAyB,SAAA,CAAe2C,EAAA,qBAAqB,GAAA,EAAC,CAAA,EAC7E,CAAA,EACF,CAAA,EACF,EAGA3C,EAAAA,KAACD,EAAK,CAAA,UAAU,MACd,SAAA,CAACC,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACF,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAAiB,oBAAA,EACrEA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMoD,EAAoB,EAAI,EACvC,UAAU,wDACX,SAAA,WAAA,CAED,CAAA,EACF,EACCpD,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAAuC,0CAAA,EAEjFA,EAAAA,IAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CACC,CAAE,IAAK,gBAAiB,MAAO,mBAAoB,KAAM,4CAA6C,KAAM,qBAAsB,MAAO,MAAO,EAChJ,CAAE,IAAK,qBAAsB,MAAO,kBAAmB,KAAM,mCAAoC,KAAM,uBAAwB,MAAO,OAAQ,EAC9I,CAAE,IAAK,cAAe,MAAO,gBAAiB,KAAM,sCAAuC,KAAM,mBAAoB,MAAO,OAAQ,EACpI,CAAE,IAAK,YAAa,MAAO,cAAe,KAAM,kCAAmC,KAAM,qBAAsB,MAAO,KAAM,EAC5H,CAAE,IAAK,kBAAmB,MAAO,oBAAqB,KAAM,sCAAuC,KAAM,iBAAkB,MAAO,QAAS,EAC3I,CAAE,IAAK,mBAAoB,MAAO,mBAAoB,KAAM,mCAAoC,KAAM,wBAAyB,MAAO,KAAM,CAC5I,EAAA,IAAI,CAAC,CAAE,IAAA2E,EAAK,MAAAuB,EAAO,KAAAC,EAAM,KAAAC,EAAM,MAAAC,CAAM,IACpCnG,EAAA,KAAA,MAAA,CAAc,UAAU,8DACvB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAF,MAAC,MAAI,CAAA,UAAW,cAAcqG,CAAK,qDACjC,SAAArG,EAAAA,IAAC,IAAE,CAAA,UAAW,GAAGoG,CAAI,SAASC,CAAK,MAAQ,CAAA,EAC7C,SACC,MACC,CAAA,SAAA,CAACrG,EAAA,IAAA,IAAA,CAAE,UAAU,4BAA6B,SAAMkG,EAAA,EAC/ClG,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAyB,SAAKmG,EAAA,CAAA,EAC7C,CAAA,EACF,EACAnG,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkF,EAAmBP,EAAK,CAAChC,EAAOgC,CAA0B,CAAC,EAC1E,UAAW,6EACThC,EAAOgC,CAA0B,EAAI,cAAgB,aACvD,GAEA,SAAA3E,EAAA,IAAC,OAAA,CACC,UAAW,6EACT2C,EAAOgC,CAA0B,EAAI,gBAAkB,eACzD,EAAA,CACF,CAAA,CACF,CAAA,GArBQA,CAsBV,CACD,EACH,CAAA,EACF,EAGAzE,EAAAA,KAACD,EAAK,CAAA,UAAU,MACd,SAAA,CAACD,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAAa,gBAAA,EACtEA,EAAAA,IAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CACC,CAAE,IAAK,OAAQ,MAAO,qBAAsB,KAAM,2CAA4C,EAC9F,CAAE,IAAK,QAAS,MAAO,eAAgB,KAAM,iCAAkC,EAC/E,CAAE,IAAK,UAAW,MAAO,iBAAkB,KAAM,0CAA2C,EAC5F,CAAE,IAAK,QAAS,MAAO,eAAgB,KAAM,wCAAyC,CACxF,EAAE,IAAI,CAAC,CAAE,IAAA2E,EAAK,MAAAuB,EAAO,KAAAC,CAAA,IACnBjG,EAAA,KAAC,MAAc,CAAA,UAAU,oCACvB,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,IAAA,CAAE,UAAU,4BAA6B,SAAMkG,EAAA,EAC/ClG,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAyB,SAAKmG,EAAA,CAAA,EAC7C,EACAnG,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CAAuF,EACtG,UAAW,6EACTiC,EAAc0C,CAAiC,EAAI,cAAgB,aACrE,GAEA,SAAA3E,EAAA,IAAC,OAAA,CACC,UAAW,6EACTiC,EAAc0C,CAAiC,EAAI,gBAAkB,eACvE,EAAA,CACF,CAAA,CACF,CAAA,GAhBQA,CAiBV,CACD,EACH,CAAA,EACF,EAGAzE,EAAAA,KAACD,EAAK,CAAA,UAAU,MACd,SAAA,CAACD,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAAQ,WAAA,EACjEE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,IAAA,CAAE,UAAU,4BAA4B,SAAyB,4BAAA,EACjEA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAA8B,iCAAA,CAAA,EACrE,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM0E,EAAqB,YAAa,CAACxC,EAAS,SAAS,EACpE,UAAW,6EACTA,EAAS,UAAY,cAAgB,aACvC,GAEA,SAAAlC,EAAA,IAAC,OAAA,CACC,UAAW,6EACTkC,EAAS,UAAY,gBAAkB,eACzC,EAAA,CACF,CAAA,CACF,CAAA,EACF,EAEAhC,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,IAAA,CAAE,UAAU,4BAA4B,SAAe,kBAAA,EACvDA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAA0B,6BAAA,CAAA,EACjE,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM0E,EAAqB,YAAa,CAACxC,EAAS,SAAS,EACpE,UAAW,6EACTA,EAAS,UAAY,cAAgB,aACvC,GAEA,SAAAlC,EAAA,IAAC,OAAA,CACC,UAAW,6EACTkC,EAAS,UAAY,gBAAkB,eACzC,EAAA,CACF,CAAA,CACF,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAAClC,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,wBAAA,EACAE,EAAA,KAAC,SAAA,CACC,MAAOgC,EAAS,WAChB,SAAW/B,GAAMuE,EAAqB,aAAc,SAASvE,EAAE,OAAO,KAAK,CAAC,EAC5E,UAAU,+GAEV,SAAA,CAACH,EAAA,IAAA,SAAA,CAAO,MAAO,GAAI,SAAU,aAAA,EAC5BA,EAAA,IAAA,SAAA,CAAO,MAAO,GAAI,SAAU,aAAA,EAC5BA,EAAA,IAAA,SAAA,CAAO,MAAO,GAAI,SAAM,SAAA,EACxBA,EAAA,IAAA,SAAA,CAAO,MAAO,IAAK,SAAO,UAAA,CAAA,CAAA,CAC7B,CAAA,EACF,CAAA,EACF,CAAA,EACF,EAGAE,EAAAA,KAACD,EAAK,CAAA,UAAU,MACd,SAAA,CAACD,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAAmB,sBAAA,EAC5EE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,mBAAA,EACAE,EAAA,KAAC,SAAA,CACC,MAAOkC,EAAQ,gBACf,SAAWjC,GAAM0E,EAAoB,kBAAmB,SAAS1E,EAAE,OAAO,KAAK,CAAC,EAChF,UAAU,+GAEV,SAAA,CAACH,EAAA,IAAA,SAAA,CAAO,MAAO,EAAG,SAAE,KAAA,EACnBA,EAAA,IAAA,SAAA,CAAO,MAAO,EAAG,SAAE,KAAA,EACnBA,EAAA,IAAA,SAAA,CAAO,MAAO,EAAG,SAAE,KAAA,EACnBA,EAAA,IAAA,SAAA,CAAO,MAAO,EAAG,SAAE,KAAA,EACnBA,EAAA,IAAA,SAAA,CAAO,MAAO,GAAI,SAAG,MAAA,EACrBA,EAAA,IAAA,SAAA,CAAO,MAAO,GAAI,SAAG,MAAA,CAAA,CAAA,CACxB,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,aAAA,EACAE,EAAA,KAAC,SAAA,CACC,MAAOkC,EAAQ,UACf,SAAWjC,GAAM0E,EAAoB,YAAa1E,EAAE,OAAO,KAAK,EAChE,UAAU,+GAEV,SAAA,CAACH,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAQ,WAAA,EAC3BA,EAAA,IAAA,SAAA,CAAO,MAAM,SAAS,SAAW,cAAA,EACjCA,EAAA,IAAA,SAAA,CAAO,MAAM,OAAO,SAAS,YAAA,CAAA,CAAA,CAChC,CAAA,EACF,EAEAE,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,IAAA,CAAE,UAAU,4BAA4B,SAAc,iBAAA,EACtDA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAAiC,oCAAA,CAAA,EACxE,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM6E,EAAoB,gBAAiB,CAACzC,EAAQ,aAAa,EAC1E,UAAW,6EACTA,EAAQ,cAAgB,cAAgB,aAC1C,GAEA,SAAApC,EAAA,IAAC,OAAA,CACC,UAAW,6EACToC,EAAQ,cAAgB,gBAAkB,eAC5C,EAAA,CACF,CAAA,CACF,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACpC,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,wBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAOoC,EAAQ,SACf,SAAWjC,GAAM0E,EAAoB,WAAY,WAAW1E,EAAE,OAAO,KAAK,CAAC,EAC3E,UAAU,+GACV,IAAI,IACJ,IAAI,KACJ,KAAK,KAAA,CACP,CAAA,EACF,CAAA,EACF,CAAA,EACF,EAGAD,EAAAA,KAACD,EAAK,CAAA,UAAU,MACd,SAAA,CAACD,EAAA,IAAA,KAAA,CAAG,UAAU,2DAA2D,SAAU,aAAA,EACnFE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,QAAA,CAAM,UAAU,kEAAkE,SAEnF,QAAA,EACAE,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,QAAS,IAAM4E,EAAuB,QAAS,OAAO,EACtD,UAAW,wFACTxC,EAAW,QAAU,QACjB,kFACA,kJACN,GAEA,SAAA,CAACtC,EAAAA,IAAA,IAAA,CAAE,UAAU,0BAA2B,CAAA,EACvCA,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAK,QAAA,CAAA,CAAA,CACrC,EACAE,EAAA,KAAC,SAAA,CACC,QAAS,IAAM4E,EAAuB,QAAS,MAAM,EACrD,UAAW,wFACTxC,EAAW,QAAU,OACjB,kFACA,kJACN,GAEA,SAAA,CAACtC,EAAAA,IAAA,IAAA,CAAE,UAAU,2BAA4B,CAAA,EACxCA,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAI,OAAA,CAAA,CAAA,CACpC,CAAA,EACF,EACAE,EAAAA,KAAC,IAAE,CAAA,UAAU,gDAAgD,SAAA,CAAA,kBAC3CF,EAAA,IAAA,SAAA,CAAO,UAAU,aAAc,WAAW,MAAM,EAAS,OAAA,EAC3E,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,QAAA,CAAM,UAAU,kEAAkE,SAEnF,WAAA,EACAE,EAAA,KAAC,SAAA,CACC,MAAOoC,EAAW,SAClB,SAAWnC,GAAM2E,EAAuB,WAAY3E,EAAE,OAAO,KAAK,EAClE,UAAU,4LAEV,SAAA,CAACH,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAY,eAAA,EAC/BA,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAY,eAAA,EAC/BA,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAY,eAAA,EAC/BA,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAY,eAAA,EAC/BA,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAY,eAAA,EAC/BA,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAY,eAAA,EAC/BA,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAY,eAAA,EAC/BA,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAY,eAAA,EAC/BA,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAa,gBAAA,EAChCA,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAe,kBAAA,EAClCA,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAgB,mBAAA,CAAA,CAAA,CACtC,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,QAAA,CAAM,UAAU,kEAAkE,SAEnF,WAAA,EACAE,EAAA,KAAC,SAAA,CACC,MAAOoC,EAAW,SAClB,SAAWnC,GAAM2E,EAAuB,WAAY3E,EAAE,OAAO,KAAK,EAClE,UAAU,4LAEV,SAAA,CAACH,EAAA,IAAA,SAAA,CAAO,MAAM,UAAU,SAAY,eAAA,EACnCA,EAAA,IAAA,SAAA,CAAO,MAAM,UAAU,SAAY,eAAA,EACnCA,EAAA,IAAA,SAAA,CAAO,MAAM,SAAS,SAAa,gBAAA,EACnCA,EAAA,IAAA,SAAA,CAAO,MAAM,SAAS,SAAY,eAAA,EAClCA,EAAA,IAAA,SAAA,CAAO,MAAM,UAAU,SAAO,UAAA,EAC9BA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAQ,WAAA,EAChCA,EAAA,IAAA,SAAA,CAAO,MAAM,SAAS,SAAQ,WAAA,EAC9BA,EAAA,IAAA,SAAA,CAAO,MAAM,UAAU,SAAY,eAAA,EACnCA,EAAA,IAAA,SAAA,CAAO,MAAM,aAAa,SAAc,iBAAA,EACxCA,EAAA,IAAA,SAAA,CAAO,MAAM,UAAU,SAAa,gBAAA,CAAA,CAAA,CACvC,CAAA,EACF,QAEC,MAAI,CAAA,UAAU,iGACb,SAACE,EAAA,KAAA,IAAA,CAAE,UAAU,2CACX,SAAA,CAAAF,EAAAA,IAAC,UAAO,SAAQ,UAAA,CAAA,EAAS,8GAAA,CAAA,CAE3B,CACF,CAAA,CAAA,EACF,CAAA,EACF,EAGAE,EAAAA,KAACD,EAAK,CAAA,UAAU,MACd,SAAA,CAACD,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAAO,UAAA,EAChEE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,EAAA,KAACoG,EAAO,CAAA,QAAQ,YAAY,UAAU,uBACpC,SAAA,CAACtG,EAAAA,IAAA,IAAA,CAAE,UAAU,uBAAwB,CAAA,EAAI,aAAA,EAE3C,EACCE,EAAA,KAAAoG,EAAA,CAAO,QAAQ,YAAY,UAAU,uBACpC,SAAA,CAACtG,EAAAA,IAAA,IAAA,CAAE,UAAU,sBAAuB,CAAA,EAAI,gBAAA,EAE1C,EACAE,EAAA,KAAC,SAAA,CACC,QAAS2F,GACT,UAAU,wRAEV,SAAA,CAAC7F,EAAAA,IAAA,IAAA,CAAE,UAAU,yBAA0B,CAAA,EAAI,UAAA,CAAA,CAE7C,CAAA,EACF,CAAA,EACF,QAGCZ,GAAiB,EAAA,EAGlBc,EAAAA,KAACD,EAAK,CAAA,UAAU,MACd,SAAA,CAACD,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAAe,kBAAA,EACxEE,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAO,UAAA,EACtCA,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAK,QAAA,CAAA,EACvC,EACAE,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAK,QAAA,EACpCA,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAU,aAAA,CAAA,EAC5C,EACAE,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAU,aAAA,EAC1CE,EAAAA,KAAC,OAAK,CAAA,UAAU,mCACd,SAAA,CAACF,EAAAA,IAAA,MAAA,CAAI,UAAU,wCAAyC,CAAA,EAAM,WAAA,EAEhE,CAAA,EACF,EACCE,EAAA,KAAAoG,EAAA,CAAO,QAAQ,YAAY,UAAU,4BACpC,SAAA,CAACtG,EAAAA,IAAA,IAAA,CAAE,UAAU,uBAAwB,CAAA,EAAI,gBAAA,EAE3C,CAAA,EACF,CAAA,EACF,CAAA,EACF,EAGCiD,IACCjD,EAAA,IAAC,MAAI,CAAA,UAAU,iFACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,mEACb,SAAAE,EAAA,KAAC,MAAI,CAAA,UAAU,MACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACF,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAAiB,oBAAA,EACrEA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkD,EAAiB,EAAK,EACrC,UAAU,qDAEV,SAAAlD,EAAAA,IAAC,IAAE,CAAA,UAAU,qCAAsC,CAAA,CAAA,CACrD,CAAA,EACF,EAEAE,EAAAA,KAAC,MAAI,CAAA,UAAU,YAEb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,2DACZ,SAAA,CAACF,EAAAA,IAAA,IAAA,CAAE,UAAU,uCAAwC,CAAA,EAAI,WAAA,EAE3D,EACAE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,UAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,WACL,MAAOyC,EAAY,YACnB,SAAWtC,GAAM8E,EAAgB,cAAe9E,EAAE,OAAO,KAAK,EAC9D,UAAU,uHACV,YAAY,qBAAA,CACd,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,aAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,WACL,MAAOyC,EAAY,eACnB,SAAWtC,GAAM8E,EAAgB,iBAAkB9E,EAAE,OAAO,KAAK,EACjE,UAAU,uHACV,YAAY,wBAAA,CACd,CAAA,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAW,cAAA,EAC/DA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMiF,EAAgB,eAAgB,CAACxC,EAAY,YAAY,EACxE,UAAW,6EACTA,EAAY,aAAe,cAAgB,aAC7C,GAEA,SAAAzC,EAAA,IAAC,OAAA,CACC,UAAW,6EACTyC,EAAY,aAAe,gBAAkB,eAC/C,EAAA,CACF,CAAA,CACF,CAAA,EACF,EACAzC,EAAA,IAAC,SAAA,CACC,QAAS,IAAM2F,EAAqB,OAAO,EAC3C,UAAU,0GACX,SAAA,iBAAA,CAED,CAAA,EACF,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAACzF,EAAAA,KAAA,KAAA,CAAG,UAAU,2DACZ,SAAA,CAACF,EAAAA,IAAA,IAAA,CAAE,UAAU,qCAAsC,CAAA,EAAI,SAAA,EAEzD,EACAE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,UAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,WACL,MAAOyC,EAAY,UACnB,SAAWtC,GAAM8E,EAAgB,YAAa9E,EAAE,OAAO,KAAK,EAC5D,UAAU,uHACV,YAAY,mBAAA,CACd,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,aAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,WACL,MAAOyC,EAAY,aACnB,SAAWtC,GAAM8E,EAAgB,eAAgB9E,EAAE,OAAO,KAAK,EAC/D,UAAU,uHACV,YAAY,sBAAA,CACd,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,aAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,WACL,MAAOyC,EAAY,cACnB,SAAWtC,GAAM8E,EAAgB,gBAAiB9E,EAAE,OAAO,KAAK,EAChE,UAAU,uHACV,YAAY,sBAAA,CACd,CAAA,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAW,cAAA,EAC/DA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMiF,EAAgB,aAAc,CAACxC,EAAY,UAAU,EACpE,UAAW,6EACTA,EAAY,WAAa,cAAgB,aAC3C,GAEA,SAAAzC,EAAA,IAAC,OAAA,CACC,UAAW,6EACTyC,EAAY,WAAa,gBAAkB,eAC7C,EAAA,CACF,CAAA,CACF,CAAA,EACF,EACAzC,EAAA,IAAC,SAAA,CACC,QAAS,IAAM2F,EAAqB,KAAK,EACzC,UAAU,oGACX,SAAA,iBAAA,CAED,CAAA,EACF,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAACzF,EAAAA,KAAA,KAAA,CAAG,UAAU,2DACZ,SAAA,CAACF,EAAAA,IAAA,IAAA,CAAE,UAAU,sCAAuC,CAAA,EAAI,kBAAA,EAE1D,EACAE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,cAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,MACL,MAAOyC,EAAY,WACnB,SAAWtC,GAAM8E,EAAgB,aAAc9E,EAAE,OAAO,KAAK,EAC7D,UAAU,uHACV,YAAY,8BAAA,CACd,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,iBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,WACL,MAAOyC,EAAY,cACnB,SAAWtC,GAAM8E,EAAgB,gBAAiB9E,EAAE,OAAO,KAAK,EAChE,UAAU,uHACV,YAAY,sBAAA,CACd,CAAA,EACF,CAAA,EACF,CAAA,EACF,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAF,EAAA,IAACsG,EAAA,CACC,QAAQ,YACR,QAAS,IAAMpD,EAAiB,EAAK,EACrC,UAAU,SACX,SAAA,QAAA,CAED,EACAlD,EAAA,IAACsG,EAAA,CACC,QAAQ,UACR,QAAShB,GACT,UAAU,SACX,SAAA,eAAA,CAED,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAIDjC,IACCrD,EAAA,IAAC,MAAI,CAAA,UAAU,iFACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,mEACb,SAAAE,EAAA,KAAC,MAAI,CAAA,UAAU,MACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACF,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAAe,kBAAA,EACnEA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMsD,EAAkB,EAAK,EACtC,UAAU,qDAEV,SAAAtD,EAAAA,IAAC,IAAE,CAAA,UAAU,qCAAsC,CAAA,CAAA,CACrD,CAAA,EACF,EAEAE,EAAAA,KAAC,MAAI,CAAA,UAAU,YAEb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAAY,eAAA,EACnEE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,yBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO6C,EAAe,aACtB,SAAW1C,GAAM2F,EAAiB,eAAgB,WAAW3F,EAAE,OAAO,KAAK,CAAC,EAC5E,UAAU,uHACV,IAAI,KACJ,IAAI,QACJ,KAAK,IAAA,CACP,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,4BAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO6C,EAAe,gBACtB,SAAW1C,GAAM2F,EAAiB,kBAAmB,WAAW3F,EAAE,OAAO,KAAK,CAAC,EAC/E,UAAU,uHACV,IAAI,MACJ,IAAI,QACJ,KAAK,KAAA,CACP,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,yBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO6C,EAAe,iBACtB,SAAW1C,GAAM2F,EAAiB,mBAAoB,SAAS3F,EAAE,OAAO,KAAK,CAAC,EAC9E,UAAU,uHACV,IAAI,IACJ,IAAI,KACJ,KAAK,GAAA,CACP,CAAA,EACF,CAAA,EACF,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAAgB,mBAAA,EACvEE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,2BAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO6C,EAAe,mBACtB,SAAW1C,GAAM2F,EAAiB,qBAAsB,WAAW3F,EAAE,OAAO,KAAK,CAAC,EAClF,UAAU,uHACV,IAAI,IACJ,IAAI,KACJ,KAAK,KAAA,CACP,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,6BAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO6C,EAAe,qBACtB,SAAW1C,GAAM2F,EAAiB,uBAAwB,WAAW3F,EAAE,OAAO,KAAK,CAAC,EACpF,UAAU,uHACV,IAAI,IACJ,IAAI,KACJ,KAAK,KAAA,CACP,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,qBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO6C,EAAe,aACtB,SAAW1C,GAAM2F,EAAiB,eAAgB,WAAW3F,EAAE,OAAO,KAAK,CAAC,EAC5E,UAAU,uHACV,IAAI,MACJ,IAAI,KACJ,KAAK,KAAA,CACP,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,0BAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO6C,EAAe,kBACtB,SAAW1C,GAAM2F,EAAiB,oBAAqB,WAAW3F,EAAE,OAAO,KAAK,CAAC,EACjF,UAAU,uHACV,IAAI,KACJ,IAAI,KACJ,KAAK,GAAA,CACP,CAAA,EACF,CAAA,EACF,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAAkB,qBAAA,QACxE,MAAI,CAAA,UAAU,YACb,SAACE,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAiB,oBAAA,EACpEA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAA8C,iDAAA,CAAA,EACrF,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM8F,EAAiB,kBAAmB,CAACjD,EAAe,eAAe,EAClF,UAAW,6EACTA,EAAe,gBAAkB,cAAgB,aACnD,GAEA,SAAA7C,EAAA,IAAC,OAAA,CACC,UAAW,6EACT6C,EAAe,gBAAkB,gBAAkB,eACrD,EAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAAA,EACF,EAEA3C,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAF,EAAA,IAACsG,EAAA,CACC,QAAQ,YACR,QAAS,IAAMhD,EAAkB,EAAK,EACtC,UAAU,SACX,SAAA,QAAA,CAED,EACAtD,EAAA,IAACsG,EAAA,CACC,QAAQ,UACR,QAASP,GACT,UAAU,SACX,SAAA,eAAA,CAED,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAID5C,IACCnD,EAAA,IAAC,MAAI,CAAA,UAAU,iFACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,mEACb,SAAAE,EAAA,KAAC,MAAI,CAAA,UAAU,MACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACF,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAAmB,sBAAA,EACvEA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMoD,EAAoB,EAAK,EACxC,UAAU,qDAEV,SAAApD,EAAAA,IAAC,IAAE,CAAA,UAAU,qCAAsC,CAAA,CAAA,CACrD,CAAA,EACF,EAEAE,EAAAA,KAAC,MAAI,CAAA,UAAU,YAEb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAAc,iBAAA,EACrEE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAgB,mBAAA,EACnEA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAAmC,sCAAA,CAAA,EAC1E,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkF,EAAmB,gBAAiB,CAACvC,EAAO,aAAa,EACxE,UAAW,6EACTA,EAAO,cAAgB,cAAgB,aACzC,GAEA,SAAA3C,EAAA,IAAC,OAAA,CACC,UAAW,6EACT2C,EAAO,cAAgB,gBAAkB,eAC3C,EAAA,CACF,CAAA,CACF,CAAA,EACF,EACAzC,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAqB,wBAAA,EACxEA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAAgC,mCAAA,CAAA,EACvE,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkF,EAAmB,qBAAsB,CAACvC,EAAO,kBAAkB,EAClF,UAAW,6EACTA,EAAO,mBAAqB,cAAgB,aAC9C,GAEA,SAAA3C,EAAA,IAAC,OAAA,CACC,UAAW,6EACT2C,EAAO,mBAAqB,gBAAkB,eAChD,EAAA,CACF,CAAA,CACF,CAAA,EACF,CAAA,EACF,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAAC3C,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAAU,aAAA,EACjEE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAa,gBAAA,EAChEA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAA4B,+BAAA,CAAA,EACnE,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkF,EAAmB,cAAe,CAACvC,EAAO,WAAW,EACpE,UAAW,6EACTA,EAAO,YAAc,cAAgB,aACvC,GAEA,SAAA3C,EAAA,IAAC,OAAA,CACC,UAAW,6EACT2C,EAAO,YAAc,gBAAkB,eACzC,EAAA,CACF,CAAA,CACF,CAAA,EACF,EACCA,EAAO,aACNzC,EAAAA,KAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,uBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO2C,EAAO,gBACd,SAAWxC,GAAM+E,EAAmB,kBAAmB,WAAW/E,EAAE,OAAO,KAAK,CAAC,EACjF,UAAU,uHACV,IAAI,IACJ,IAAI,KACJ,KAAK,KAAA,CACP,CAAA,EACF,EAEFD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAW,cAAA,EAC9DA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAAwB,2BAAA,CAAA,EAC/D,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkF,EAAmB,YAAa,CAACvC,EAAO,SAAS,EAChE,UAAW,6EACTA,EAAO,UAAY,cAAgB,aACrC,GAEA,SAAA3C,EAAA,IAAC,OAAA,CACC,UAAW,6EACT2C,EAAO,UAAY,gBAAkB,eACvC,EAAA,CACF,CAAA,CACF,CAAA,EACF,EACCA,EAAO,WACNzC,EAAAA,KAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,qBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO2C,EAAO,cACd,SAAWxC,GAAM+E,EAAmB,gBAAiB,WAAW/E,EAAE,OAAO,KAAK,CAAC,EAC/E,UAAU,uHACV,IAAI,IACJ,IAAI,KACJ,KAAK,KAAA,CACP,CAAA,EACF,CAAA,EAEJ,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAAW,cAAA,EAClEE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAiB,oBAAA,EACpEA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAA2B,8BAAA,CAAA,EAClE,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkF,EAAmB,kBAAmB,CAACvC,EAAO,eAAe,EAC5E,UAAW,6EACTA,EAAO,gBAAkB,cAAgB,aAC3C,GAEA,SAAA3C,EAAA,IAAC,OAAA,CACC,UAAW,6EACT2C,EAAO,gBAAkB,gBAAkB,eAC7C,EAAA,CACF,CAAA,CACF,CAAA,EACF,EACCA,EAAO,iBACNzC,EAAAA,KAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,4BAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO2C,EAAO,oBACd,SAAWxC,GAAM+E,EAAmB,sBAAuB,WAAW/E,EAAE,OAAO,KAAK,CAAC,EACrF,UAAU,uHACV,IAAI,KACJ,IAAI,OACJ,KAAK,IAAA,CACP,CAAA,EACF,EAEFD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAsB,yBAAA,EACzEA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAAgC,mCAAA,CAAA,EACvE,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkF,EAAmB,mBAAoB,CAACvC,EAAO,gBAAgB,EAC9E,UAAW,6EACTA,EAAO,iBAAmB,cAAgB,aAC5C,GAEA,SAAA3C,EAAA,IAAC,OAAA,CACC,UAAW,6EACT2C,EAAO,iBAAmB,gBAAkB,eAC9C,EAAA,CACF,CAAA,CACF,CAAA,EACF,EACCA,EAAO,kBACNzC,EAAAA,KAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,4BAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO2C,EAAO,qBACd,SAAWxC,GAAM+E,EAAmB,uBAAwB,WAAW/E,EAAE,OAAO,KAAK,CAAC,EACtF,UAAU,uHACV,IAAI,KACJ,IAAI,KACJ,KAAK,GAAA,CACP,CAAA,EACF,CAAA,EAEJ,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAAW,cAAA,EAClEE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAgB,mBAAA,EACnEA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAAyB,4BAAA,CAAA,EAChE,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkF,EAAmB,gBAAiB,CAACvC,EAAO,aAAa,EACxE,UAAW,6EACTA,EAAO,cAAgB,cAAgB,aACzC,GAEA,SAAA3C,EAAA,IAAC,OAAA,CACC,UAAW,6EACT2C,EAAO,cAAgB,gBAAkB,eAC3C,EAAA,CACF,CAAA,CACF,CAAA,EACF,EACAzC,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAiB,oBAAA,EACpEA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAA0B,6BAAA,CAAA,EACjE,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkF,EAAmB,iBAAkB,CAACvC,EAAO,cAAc,EAC1E,UAAW,6EACTA,EAAO,eAAiB,cAAgB,aAC1C,GAEA,SAAA3C,EAAA,IAAC,OAAA,CACC,UAAW,6EACT2C,EAAO,eAAiB,gBAAkB,eAC5C,EAAA,CACF,CAAA,CACF,CAAA,EACF,EACAzC,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAkB,qBAAA,EACrEA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAA2B,8BAAA,CAAA,EAClE,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkF,EAAmB,kBAAmB,CAACvC,EAAO,eAAe,EAC5E,UAAW,6EACTA,EAAO,gBAAkB,cAAgB,aAC3C,GAEA,SAAA3C,EAAA,IAAC,OAAA,CACC,UAAW,6EACT2C,EAAO,gBAAkB,gBAAkB,eAC7C,EAAA,CACF,CAAA,CACF,CAAA,EACF,CAAA,EACF,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAAC3C,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAAqB,wBAAA,EAC5EE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAY,eAAA,EAChEA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkF,EAAmB,cAAe,CAACvC,EAAO,WAAW,EACpE,UAAW,6EACTA,EAAO,YAAc,cAAgB,aACvC,GAEA,SAAA3C,EAAA,IAAC,OAAA,CACC,UAAW,6EACT2C,EAAO,YAAc,gBAAkB,eACzC,EAAA,CACF,CAAA,CACF,CAAA,EACF,EACAzC,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACF,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAkB,qBAAA,EACtEA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkF,EAAmB,aAAc,CAACvC,EAAO,UAAU,EAClE,UAAW,6EACTA,EAAO,WAAa,cAAgB,aACtC,GAEA,SAAA3C,EAAA,IAAC,OAAA,CACC,UAAW,6EACT2C,EAAO,WAAa,gBAAkB,eACxC,EAAA,CACF,CAAA,CACF,CAAA,EACF,CAAA,EACF,CAAA,EACF,CAAA,EACF,EAEAzC,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAF,EAAA,IAACsG,EAAA,CACC,QAAQ,YACR,QAAS,IAAMlD,EAAoB,EAAK,EACxC,UAAU,SACX,SAAA,QAAA,CAED,EACApD,EAAA,IAACsG,EAAA,CACC,QAAQ,UACR,QAASf,GACT,UAAU,SACX,SAAA,eAAA,CAED,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAIDxC,IACC/C,EAAA,IAAC,MAAI,CAAA,UAAU,iFACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,sCACb,SAAAE,EAAA,KAAC,MAAI,CAAA,UAAU,MACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACF,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAAY,eAAA,EAChEA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMgD,EAAmB,EAAK,EACvC,UAAU,qDAEV,SAAAhD,EAAAA,IAAC,IAAE,CAAA,UAAU,qCAAsC,CAAA,CAAA,CACrD,CAAA,EACF,EAEAE,EAAAA,KAAC,MAAI,CAAA,UAAU,YAEb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACF,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,kBAAA,EACAE,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACF,EAAA,IAAA,MAAA,CAAI,UAAU,qDACZ,SACC0D,EAAA1D,EAAA,IAAC,MAAA,CACC,IAAK0D,EACL,IAAI,UACJ,UAAU,4BAAA,CACZ,EAEC1D,EAAA,IAAA,MAAA,CAAI,UAAU,iDACb,eAAC,IAAE,CAAA,UAAU,qCAAsC,CAAA,CAAA,CACrD,CAEJ,CAAA,SACC,MACC,CAAA,SAAA,CAAAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,OAAO,UACP,SAAUkE,GACV,UAAU,SACV,GAAG,iBAAA,CACL,EACAhE,EAAA,KAAC,QAAA,CACC,QAAQ,kBACR,UAAU,iGAEV,SAAA,CAACF,EAAAA,IAAA,IAAA,CAAE,UAAU,qBAAsB,CAAA,EAAI,cAAA,CAAA,CAEzC,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAAkB,qBAAA,CAAA,EAC9D,CAAA,EACF,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,YAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOsB,EAAY,KACnB,SAAWnB,GAAMqF,EAAoB,OAAQrF,EAAE,OAAO,KAAK,EAC3D,UAAU,+GACV,YAAY,sBAAA,CACd,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,gBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,QACL,MAAOsB,EAAY,MACnB,SAAQ,GACR,UAAU,8EACV,YAAY,yBAAA,CACd,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACtB,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,MAAA,EACAA,EAAA,IAAC,WAAA,CACC,MAAOsB,EAAY,KAAO,GAC1B,SAAWnB,GAAMqF,EAAoB,MAAOrF,EAAE,OAAO,KAAK,EAC1D,UAAU,+GACV,YAAY,yBACZ,KAAM,CAAA,CACR,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,WAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOsB,EAAY,UAAY,GAC/B,SAAWnB,GAAMqF,EAAoB,WAAYrF,EAAE,OAAO,KAAK,EAC/D,UAAU,+GACV,YAAY,eAAA,CACd,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,UAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,MACL,MAAOsB,EAAY,SAAW,GAC9B,SAAWnB,GAAMqF,EAAoB,UAAWrF,EAAE,OAAO,KAAK,EAC9D,UAAU,+GACV,YAAY,yBAAA,CACd,CAAA,EACF,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAF,EAAA,IAACsG,EAAA,CACC,QAAQ,YACR,QAAS,IAAMtD,EAAmB,EAAK,EACvC,UAAU,SACX,SAAA,QAAA,CAED,EACAhD,EAAA,IAACsG,EAAA,CACC,QAAQ,UACR,QAAShC,GACT,UAAU,SACV,SAAUV,EAET,WAEG1D,EAAAA,KAAAqG,EAAA,SAAA,CAAA,SAAA,CAACvG,EAAAA,IAAA,IAAA,CAAE,UAAU,oCAAqC,CAAA,EAAI,WAAA,CAAA,CAExD,EAEA,cAAA,CAEJ,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,EACF,QAGDwG,GAAW,EAAA,CACd,CAAA,CAAA,CAEJ"}