{"version":3,"file":"page-9c2268e0.js","sources":["../../src/pages/home/components/StatsGrid.tsx","../../src/pages/home/components/ActiveBots.tsx","../../src/pages/home/components/MarketOverview.tsx","../../src/hooks/useMarketData.ts","../../src/hooks/useExchangeBalance.ts","../../src/pages/home/components/ExchangeBalance.tsx","../../src/pages/home/page.tsx"],"sourcesContent":["\ninterface StatCardProps {\n  title: string;\n  value: string;\n  change: string;\n  changeType: 'positive' | 'negative' | 'neutral';\n  icon: string;\n}\n\nfunction StatCard({ title, value, change, changeType, icon }: StatCardProps) {\n  const changeColors = {\n    positive: 'text-green-600',\n    negative: 'text-red-600',\n    neutral: 'text-gray-600'\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg p-4 shadow-sm border border-gray-200\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <p className=\"text-sm font-medium text-gray-600\">{title}</p>\n          <p className=\"text-2xl font-bold text-gray-900 mt-1\">{value}</p>\n          <p className={`text-sm mt-1 ${changeColors[changeType]}`}>\n            {change}\n          </p>\n        </div>\n        <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n          <i className={`${icon} text-blue-600 text-xl`}></i>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function StatsGrid() {\n  const stats = [\n    {\n      title: 'Total PnL',\n      value: '$12,847',\n      change: '+8.2% today',\n      changeType: 'positive' as const,\n      icon: 'ri-money-dollar-circle-line'\n    },\n    {\n      title: 'Active Bots',\n      value: '24',\n      change: '3 new today',\n      changeType: 'positive' as const,\n      icon: 'ri-robot-line'\n    },\n    {\n      title: 'Win Rate',\n      value: '73.5%',\n      change: '+2.1% this week',\n      changeType: 'positive' as const,\n      icon: 'ri-trophy-line'\n    },\n    {\n      title: 'Total Trades',\n      value: '1,247',\n      change: '89 today',\n      changeType: 'neutral' as const,\n      icon: 'ri-exchange-line'\n    }\n  ];\n\n  return (\n    <div className=\"grid grid-cols-2 gap-4\">\n      {stats.map((stat, index) => (\n        <StatCard key={index} {...stat} />\n      ))}\n    </div>\n  );\n}\n","\nimport { TradingBot } from '../../../types/trading';\nimport Card from '../../../components/base/Card';\nimport Button from '../../../components/base/Button';\nimport { useNavigate } from 'react-router-dom';\n\ninterface ActiveBotsProps {\n  bots: TradingBot[];\n}\n\nexport default function ActiveBots({ bots = [] }: ActiveBotsProps) {\n  const navigate = useNavigate();\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active':\n        return 'bg-green-100 text-green-800';\n      case 'paused':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'stopped':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getExchangeIcon = (exchange: string) => {\n    return exchange === 'bybit' ? 'ri-currency-line' : 'ri-exchange-line';\n  };\n\n  const getPnlColor = (pnl: number) => {\n    return pnl >= 0 ? 'text-green-600' : 'text-red-600';\n  };\n\n  // Ensure bots is an array before using slice\n  const safeBots = Array.isArray(bots) ? bots : [];\n\n  return (\n    <Card className=\"p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900\">Active Bots</h2>\n        <Button\n          variant=\"secondary\"\n          size=\"sm\"\n          onClick={() => navigate('/create-bot')}\n        >\n          <i className=\"ri-add-line mr-1\"></i>\n          New Bot\n        </Button>\n      </div>\n\n      <div className=\"space-y-3\">\n        {safeBots.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <i className=\"ri-robot-line text-2xl text-gray-400\"></i>\n            </div>\n            <p className=\"text-gray-500 mb-4\">No active bots yet</p>\n            <Button\n              variant=\"primary\"\n              onClick={() => navigate('/create-bot')}\n              className=\"text-sm\"\n            >\n              Create Your First Bot\n            </Button>\n          </div>\n        ) : (\n          safeBots.slice(0, 5).map((bot) => (\n            <div\n              key={bot.id}\n              className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\"\n            >\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n                  <i\n                    className={`${getExchangeIcon(bot.exchange)} text-blue-600`}\n                  ></i>\n                </div>\n                <div>\n                  <p className=\"font-medium text-gray-900\">{bot.name}</p>\n                  <p className=\"text-sm text-gray-500\">\n                    {bot.symbol} â€¢ {bot.exchange.toUpperCase()}\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"text-right\">\n                <div className=\"flex items-center space-x-2\">\n                  <span\n                    className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(\n                      bot.status\n                    )}`}\n                  >\n                    {bot.status}\n                  </span>\n                </div>\n                <p\n                  className={`text-sm font-medium mt-1 ${getPnlColor(bot.pnl || 0)}`}\n                >\n                  {(bot.pnl || 0) >= 0 ? '+' : ''}\n                  {(bot.pnl || 0).toFixed(2)}\n                </p>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </Card>\n  );\n}\n","\nimport { MarketData } from '../../../types/trading';\nimport Card from '../../../components/base/Card';\n\ninterface MarketOverviewProps {\n  marketData: MarketData[];\n}\n\nexport default function MarketOverview({ marketData }: MarketOverviewProps) {\n  const getChangeColor = (change: number) => {\n    return change >= 0 ? 'text-green-600' : 'text-red-600';\n  };\n\n  const formatPrice = (price: number) => {\n    return price.toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 4\n    });\n  };\n\n  // Add safety check for marketData\n  const safeMarketData = marketData || [];\n\n  return (\n    <Card>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Market Overview</h3>\n        <button className=\"text-blue-600 text-sm font-medium\">Refresh</button>\n      </div>\n      \n      <div className=\"space-y-3\">\n        {safeMarketData.length > 0 ? (\n          safeMarketData.slice(0, 6).map((market, index) => (\n            <div key={index} className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-8 h-8 bg-orange-100 rounded-full flex items-center justify-center\">\n                  <i className=\"ri-currency-line text-orange-600 text-sm\"></i>\n                </div>\n                <div>\n                  <p className=\"font-medium text-gray-900\">{market.symbol}</p>\n                  <p className=\"text-xs text-gray-500\">RSI: {market.rsi?.toFixed(1) || 'N/A'}</p>\n                </div>\n              </div>\n              \n              <div className=\"text-right\">\n                <p className=\"font-medium text-gray-900\">{formatPrice(market.price)}</p>\n                <p className={`text-sm ${getChangeColor(market.change24h)}`}>\n                  {market.change24h >= 0 ? '+' : ''}{market.change24h.toFixed(2)}%\n                </p>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center py-8\">\n            <div className=\"w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-3\">\n              <i className=\"ri-line-chart-line text-gray-400 text-lg\"></i>\n            </div>\n            <p className=\"text-gray-500 text-sm\">No market data available</p>\n            <p className=\"text-gray-400 text-xs mt-1\">Check your connection and try again</p>\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n}\n","\nimport { useState, useEffect } from 'react'\nimport { API_ENDPOINTS, apiCall } from '../lib/supabase'\n\nexport interface MarketData {\n  symbol: string\n  price: number\n  change24h: number\n  volume24h: number\n  high24h: number\n  low24h: number\n  timestamp: string\n  klines: Array<{\n    timestamp: string\n    open: number\n    high: number\n    low: number\n    close: number\n    volume: number\n  }>\n}\n\nexport function useMarketData(symbol: string = 'BTCUSDT', exchange: string = 'bybit') {\n  const [data, setData] = useState<MarketData | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  const fetchMarketData = async () => {\n    try {\n      setLoading(true)\n      const response = await apiCall(\n        `${API_ENDPOINTS.MARKET_DATA}?symbol=${symbol}&exchange=${exchange}`\n      )\n      setData(response)\n      setError(null)\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch market data')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchMarketData()\n    \n    // Set up polling for real-time updates\n    const interval = setInterval(fetchMarketData, 30000) // Update every 30 seconds\n    \n    return () => clearInterval(interval)\n  }, [symbol, exchange])\n\n  return {\n    data,\n    loading,\n    error,\n    refetch: fetchMarketData,\n  }\n}\n","import { useState, useEffect } from 'react'\r\nimport { API_ENDPOINTS, apiCall } from '../lib/supabase'\r\n\r\nexport interface ExchangeBalance {\r\n  exchange: string\r\n  totalBalance: number\r\n  availableBalance: number\r\n  lockedBalance: number\r\n  assets: Array<{\r\n    asset: string\r\n    free: number\r\n    locked: number\r\n    total: number\r\n  }>\r\n  lastUpdated: string\r\n  status: 'connected' | 'disconnected' | 'error'\r\n  error?: string\r\n}\r\n\r\nexport function useExchangeBalance() {\r\n  const [balances, setBalances] = useState<ExchangeBalance[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  const fetchBalances = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await apiCall(`${API_ENDPOINTS.API_KEYS}/balances`)\r\n      setBalances(response.balances || [])\r\n      setError(null)\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch balances')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchBalances()\r\n    \r\n    // Set up polling for real-time updates\r\n    const interval = setInterval(fetchBalances, 60000) // Update every minute\r\n    \r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return {\r\n    balances,\r\n    loading,\r\n    error,\r\n    refetch: fetchBalances,\r\n  }\r\n}\r\n","import { ExchangeBalance } from '../../../hooks/useExchangeBalance';\r\nimport Card from '../../../components/base/Card';\r\n\r\ninterface ExchangeBalanceProps {\r\n  balances: ExchangeBalance[];\r\n}\r\n\r\nexport default function ExchangeBalanceDisplay({ balances }: ExchangeBalanceProps) {\r\n  const formatBalance = (amount: number) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2\r\n    }).format(amount);\r\n  };\r\n\r\n  const getExchangeIcon = (exchange: string) => {\r\n    switch (exchange.toLowerCase()) {\r\n      case 'bybit':\r\n        return 'ri-currency-line';\r\n      case 'okx':\r\n        return 'ri-exchange-line';\r\n      default:\r\n        return 'ri-exchange-line';\r\n    }\r\n  };\r\n\r\n  const getExchangeColor = (exchange: string) => {\r\n    switch (exchange.toLowerCase()) {\r\n      case 'bybit':\r\n        return 'text-yellow-600 bg-yellow-100';\r\n      case 'okx':\r\n        return 'text-blue-600 bg-blue-100';\r\n      default:\r\n        return 'text-gray-600 bg-gray-100';\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'connected':\r\n        return 'text-green-600 bg-green-100';\r\n      case 'disconnected':\r\n        return 'text-gray-600 bg-gray-100';\r\n      case 'error':\r\n        return 'text-red-600 bg-red-100';\r\n      default:\r\n        return 'text-gray-600 bg-gray-100';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'connected':\r\n        return 'ri-check-line';\r\n      case 'disconnected':\r\n        return 'ri-close-line';\r\n      case 'error':\r\n        return 'ri-error-warning-line';\r\n      default:\r\n        return 'ri-question-line';\r\n    }\r\n  };\r\n\r\n  if (!balances || balances.length === 0) {\r\n    return (\r\n      <Card className=\"p-6\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900\">Exchange Balances</h3>\r\n          <div className=\"w-2 h-2 bg-gray-400 rounded-full\"></div>\r\n        </div>\r\n        <div className=\"text-center py-8 text-gray-500\">\r\n          <i className=\"ri-wallet-line text-4xl mb-2\"></i>\r\n          <p>No exchange connections found</p>\r\n          <p className=\"text-sm\">Connect your exchange API keys to view balances</p>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card className=\"p-6\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900\">Exchange Balances</h3>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\r\n          <span className=\"text-sm text-green-600\">Connected</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"space-y-4\">\r\n        {balances.map((balance, index) => (\r\n          <div key={index} className=\"border border-gray-200 rounded-lg p-4\">\r\n            <div className=\"flex items-center justify-between mb-3\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${getExchangeColor(balance.exchange)}`}>\r\n                  <i className={`${getExchangeIcon(balance.exchange)} text-lg`}></i>\r\n                </div>\r\n                <div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <h4 className=\"font-medium text-gray-900\">{balance.exchange.toUpperCase()}</h4>\r\n                    <div className={`px-2 py-1 rounded-full text-xs font-medium flex items-center space-x-1 ${getStatusColor(balance.status)}`}>\r\n                      <i className={`${getStatusIcon(balance.status)} text-xs`}></i>\r\n                      <span>{balance.status}</span>\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"text-sm text-gray-500\">\r\n                    Updated {new Date(balance.lastUpdated).toLocaleTimeString()}\r\n                  </p>\r\n                  {balance.error && (\r\n                    <p className=\"text-sm text-red-500 mt-1\">\r\n                      Error: {balance.error}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <p className=\"text-lg font-bold text-gray-900\">\r\n                  {formatBalance(balance.totalBalance)}\r\n                </p>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Available: {formatBalance(balance.availableBalance)}\r\n                </p>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Locked: {formatBalance(balance.lockedBalance)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Top Assets */}\r\n            {balance.assets && balance.assets.length > 0 && (\r\n              <div className=\"grid grid-cols-2 gap-2\">\r\n                {balance.assets.slice(0, 4).map((asset, assetIndex) => (\r\n                  <div key={assetIndex} className=\"flex justify-between text-sm\">\r\n                    <span className=\"text-gray-600\">{asset.asset}</span>\r\n                    <span className=\"font-medium\">{asset.total.toFixed(4)}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../../components/feature/Header';\nimport Navigation from '../../components/feature/Navigation';\nimport Card from '../../components/base/Card';\nimport Button from '../../components/base/Button';\nimport StatsGrid from './components/StatsGrid';\nimport ActiveBots from './components/ActiveBots';\nimport MarketOverview from './components/MarketOverview';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useBots } from '../../hooks/useBots';\nimport { useMarketData } from '../../hooks/useMarketData';\nimport { useExchangeBalance } from '../../hooks/useExchangeBalance';\nimport ExchangeBalanceDisplay from './components/ExchangeBalance';\n\nexport default function Home() {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const { bots, loading: botsLoading } = useBots();\n  const { marketData, loading: marketLoading } = useMarketData();\n  const { balances, loading: balancesLoading } = useExchangeBalance();\n  const [showWelcome, setShowWelcome] = useState(false);\n\n  useEffect(() => {\n    const isFirstVisit = !localStorage.getItem('welcome_shown');\n    if (isFirstVisit && user) {\n      setShowWelcome(true);\n      localStorage.setItem('welcome_shown', 'true');\n    }\n  }, [user]);\n\n  const activeBots = bots.filter(bot => bot.status === 'active');\n  const totalPnL = bots.reduce((sum, bot) => sum + (bot.totalPnL || 0), 0);\n\n  const handleCreateFirstBot = () => {\n    setShowWelcome(false);\n    navigate('/create-bot');\n  };\n\n  const handleGetStarted = () => {\n    navigate('/onboarding');\n  };\n\n  const handleReset = () => {\n    if (confirm('Are you sure you want to reset all data? This will clear all bots, trades, and settings.')) {\n      // Clear localStorage\n      localStorage.clear();\n      // Reload the page\n      window.location.reload();\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header \n        title=\"Pablo\" \n        subtitle=\"AI Trading Platform\"\n        rightAction={\n          <div className=\"flex space-x-2\">\n            <Button\n              variant=\"danger\"\n              size=\"sm\"\n              onClick={handleReset}\n            >\n              <i className=\"ri-refresh-line mr-1\"></i>\n              Reset\n            </Button>\n            <button\n              onClick={() => navigate('/help')}\n              className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n            >\n              <i className=\"ri-notification-line text-xl text-gray-600\"></i>\n            </button>\n          </div>\n        }\n      />\n      \n      <div className=\"pt-20 pb-20 px-4 space-y-6\">\n        {/* Welcome Message for New Users */}\n        {showWelcome && (\n          <Card className=\"p-6 bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-200\">\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center\">\n                <i className=\"ri-robot-line text-2xl text-blue-600\"></i>\n              </div>\n              <div className=\"flex-1\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                  Welcome to Pablo! ðŸŽ‰\n                </h3>\n                <p className=\"text-gray-600 text-sm mb-4\">\n                  Ready to start automated trading? Create your first AI trading bot and let it work 24/7 for you.\n                </p>\n                <div className=\"flex space-x-3\">\n                  <Button\n                    variant=\"primary\"\n                    onClick={handleCreateFirstBot}\n                    className=\"text-sm\"\n                  >\n                    Create First Bot\n                  </Button>\n                  <Button\n                    variant=\"secondary\"\n                    onClick={() => setShowWelcome(false)}\n                    className=\"text-sm\"\n                  >\n                    Maybe Later\n                  </Button>\n                </div>\n              </div>\n              <button\n                onClick={() => setShowWelcome(false)}\n                className=\"p-1 hover:bg-blue-100 rounded-lg transition-colors\"\n              >\n                <i className=\"ri-close-line text-gray-500\"></i>\n              </button>\n            </div>\n          </Card>\n        )}\n\n        {/* Quick Stats */}\n        <StatsGrid />\n\n        {/* Quick Actions */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Quick Actions</h3>\n          <div className=\"grid grid-cols-2 gap-3\">\n            <Button\n              variant=\"primary\"\n              onClick={() => navigate('/create-bot')}\n              className=\"h-12 flex items-center justify-center\"\n            >\n              <i className=\"ri-add-line mr-2\"></i>\n              Create Bot\n            </Button>\n            <Button\n              variant=\"secondary\"\n              onClick={() => navigate('/bots')}\n              className=\"h-12 flex items-center justify-center\"\n            >\n              <i className=\"ri-robot-line mr-2\"></i>\n              Manage Bots\n            </Button>\n          </div>\n        </Card>\n\n        {/* Active Bots */}\n        <ActiveBots />\n\n        {/* Exchange Balances */}\n        <ExchangeBalanceDisplay balances={balances} />\n\n        {/* Market Overview */}\n        <MarketOverview />\n\n        {/* Recent Activity */}\n        <Card className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Recent Activity</h3>\n            <Button\n              variant=\"secondary\"\n              onClick={() => navigate('/trades')}\n              className=\"text-sm\"\n            >\n              View All\n            </Button>\n          </div>\n          \n          <div className=\"space-y-3\">\n            {[\n              {\n                type: 'trade',\n                message: 'BTC Scalper opened LONG position',\n                time: '2 minutes ago',\n                icon: 'ri-arrow-up-line',\n                color: 'green'\n              },\n              {\n                type: 'profit',\n                message: 'ETH Momentum closed with +$45.20 profit',\n                time: '15 minutes ago',\n                icon: 'ri-money-dollar-circle-line',\n                color: 'green'\n              },\n              {\n                type: 'alert',\n                message: 'SOL Trader hit stop loss at -2.5%',\n                time: '1 hour ago',\n                icon: 'ri-alert-line',\n                color: 'red'\n              },\n              {\n                type: 'bot',\n                message: 'New bot \"DOGE Swing\" created',\n                time: '2 hours ago',\n                icon: 'ri-robot-line',\n                color: 'blue'\n              }\n            ].map((activity, index) => (\n              <div key={index} className=\"flex items-center space-x-3 p-3 bg-gray-50 rounded-lg\">\n                <div className={`w-8 h-8 bg-${activity.color}-100 rounded-full flex items-center justify-center`}>\n                  <i className={`${activity.icon} text-${activity.color}-600`}></i>\n                </div>\n                <div className=\"flex-1\">\n                  <p className=\"text-sm font-medium text-gray-900\">{activity.message}</p>\n                  <p className=\"text-xs text-gray-500\">{activity.time}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Card>\n\n        {/* Performance Summary */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Today's Performance</h3>\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600\">+$156.30</div>\n              <div className=\"text-sm text-gray-600\">Total P&L</div>\n            </div>\n            <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600\">12</div>\n              <div className=\"text-sm text-gray-600\">Trades Executed</div>\n            </div>\n            <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-purple-600\">75%</div>\n              <div className=\"text-sm text-gray-600\">Win Rate</div>\n            </div>\n            <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-orange-600\">{activeBots.length}</div>\n              <div className=\"text-sm text-gray-600\">Active Bots</div>\n            </div>\n          </div>\n        </Card>\n\n        {/* Educational Content */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Trading Tips</h3>\n          <div className=\"space-y-3\">\n            <div className=\"p-3 bg-blue-50 rounded-lg\">\n              <div className=\"flex items-start space-x-3\">\n                <i className=\"ri-lightbulb-line text-blue-600 mt-1\"></i>\n                <div>\n                  <h4 className=\"font-medium text-blue-900 mb-1\">Risk Management</h4>\n                  <p className=\"text-sm text-blue-700\">\n                    Never risk more than 2-3% of your capital on a single trade. Use stop losses to protect your investments.\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className=\"p-3 bg-green-50 rounded-lg\">\n              <div className=\"flex items-start space-x-3\">\n                <i className=\"ri-bar-chart-line text-green-600 mt-1\"></i>\n                <div>\n                  <h4 className=\"font-medium text-green-900 mb-1\">Diversification</h4>\n                  <p className=\"text-sm text-green-700\">\n                    Spread your trades across different cryptocurrencies and strategies to reduce overall risk.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Card>\n      </div>\n\n      <Navigation />\n    </div>\n  );\n}\n"],"names":["StatCard","title","value","change","changeType","icon","changeColors","jsxs","jsx","StatsGrid","stats","stat","index","ActiveBots","bots","navigate","useNavigate","getStatusColor","status","getExchangeIcon","exchange","getPnlColor","pnl","safeBots","Card","Button","bot","MarketOverview","marketData","getChangeColor","formatPrice","price","safeMarketData","market","_a","useMarketData","symbol","data","setData","useState","loading","setLoading","error","setError","fetchMarketData","response","apiCall","API_ENDPOINTS","err","useEffect","interval","useExchangeBalance","balances","setBalances","fetchBalances","ExchangeBalanceDisplay","formatBalance","amount","getExchangeColor","getStatusIcon","balance","asset","assetIndex","Home","user","useAuth","botsLoading","useBots","balancesLoading","showWelcome","setShowWelcome","activeBots","sum","handleCreateFirstBot","handleReset","Header","activity","Navigation"],"mappings":"2RASA,SAASA,EAAS,CAAE,MAAAC,EAAO,MAAAC,EAAO,OAAAC,EAAQ,WAAAC,EAAY,KAAAC,GAAuB,CAC3E,MAAMC,EAAe,CACnB,SAAU,iBACV,SAAU,eACV,QAAS,eAAA,EAGX,aACG,MAAI,CAAA,UAAU,2DACb,SAACC,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACC,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAqC,SAAMP,EAAA,EACvDO,EAAA,IAAA,IAAA,CAAE,UAAU,wCAAyC,SAAMN,EAAA,EAC5DM,EAAAA,IAAC,KAAE,UAAW,gBAAgBF,EAAaF,CAAU,CAAC,GACnD,SACHD,CAAA,CAAA,CAAA,EACF,EACAK,EAAAA,IAAC,MAAI,CAAA,UAAU,oEACb,SAAAA,EAAA,IAAC,KAAE,UAAW,GAAGH,CAAI,wBAAA,CAA0B,CACjD,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CAEA,SAAwBI,GAAY,CAClC,MAAMC,EAAQ,CACZ,CACE,MAAO,YACP,MAAO,UACP,OAAQ,cACR,WAAY,WACZ,KAAM,6BACR,EACA,CACE,MAAO,cACP,MAAO,KACP,OAAQ,cACR,WAAY,WACZ,KAAM,eACR,EACA,CACE,MAAO,WACP,MAAO,QACP,OAAQ,kBACR,WAAY,WACZ,KAAM,gBACR,EACA,CACE,MAAO,eACP,MAAO,QACP,OAAQ,WACR,WAAY,UACZ,KAAM,kBACR,CAAA,EAGF,OACGF,EAAAA,IAAA,MAAA,CAAI,UAAU,yBACZ,WAAM,IAAI,CAACG,EAAMC,UACfZ,EAAsB,CAAA,GAAGW,CAAX,EAAAC,CAAiB,CACjC,CACH,CAAA,CAEJ,CC/DA,SAAwBC,EAAW,CAAE,KAAAC,EAAO,CAAA,GAAuB,CACjE,MAAMC,EAAWC,IAEXC,EAAkBC,GAAmB,CACzC,OAAQA,EAAQ,CACd,IAAK,SACI,MAAA,8BACT,IAAK,SACI,MAAA,gCACT,IAAK,UACI,MAAA,0BACT,QACS,MAAA,2BACX,CAAA,EAGIC,EAAmBC,GAChBA,IAAa,QAAU,mBAAqB,mBAG/CC,EAAeC,GACZA,GAAO,EAAI,iBAAmB,eAIjCC,EAAW,MAAM,QAAQT,CAAI,EAAIA,EAAO,GAG5C,OAAAP,EAAA,KAACiB,EAAK,CAAA,UAAU,MACd,SAAA,CAACjB,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAAW,cAAA,EAC/DD,EAAA,KAACkB,EAAA,CACC,QAAQ,YACR,KAAK,KACL,QAAS,IAAMV,EAAS,aAAa,EAErC,SAAA,CAACP,EAAAA,IAAA,IAAA,CAAE,UAAU,kBAAmB,CAAA,EAAI,SAAA,CAAA,CAEtC,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAI,CAAA,UAAU,YACZ,SAAAe,EAAS,SAAW,EACnBhB,EAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,mFACb,eAAC,IAAE,CAAA,UAAU,uCAAuC,CACtD,CAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAAkB,qBAAA,EACpDA,EAAA,IAACiB,EAAA,CACC,QAAQ,UACR,QAAS,IAAMV,EAAS,aAAa,EACrC,UAAU,UACX,SAAA,uBAAA,CAED,CAAA,EACF,EAEAQ,EAAS,MAAM,EAAG,CAAC,EAAE,IAAKG,GACxBnB,EAAA,KAAC,MAAA,CAEC,UAAU,8DAEV,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,oEACb,SAAAA,EAAA,IAAC,IAAA,CACC,UAAW,GAAGW,EAAgBO,EAAI,QAAQ,CAAC,gBAAA,CAAA,EAE/C,SACC,MACC,CAAA,SAAA,CAAAlB,EAAA,IAAC,IAAE,CAAA,UAAU,4BAA6B,SAAAkB,EAAI,KAAK,EACnDnB,EAAAA,KAAC,IAAE,CAAA,UAAU,wBACV,SAAA,CAAImB,EAAA,OAAO,MAAIA,EAAI,SAAS,YAAY,CAAA,EAC3C,CAAA,EACF,CAAA,EACF,EAEAnB,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,8BACb,SAAAA,EAAA,IAAC,OAAA,CACC,UAAW,8CAA8CS,EACvDS,EAAI,MAAA,CACL,GAEA,SAAIA,EAAA,MAAA,CAAA,EAET,EACAnB,EAAA,KAAC,IAAA,CACC,UAAW,4BAA4Bc,EAAYK,EAAI,KAAO,CAAC,CAAC,GAE9D,SAAA,EAAIA,EAAA,KAAO,IAAM,EAAI,IAAM,IAC3BA,EAAI,KAAO,GAAG,QAAQ,CAAC,CAAA,CAAA,CAC3B,CAAA,EACF,CAAA,CAAA,EAjCKA,EAAI,EAmCZ,CAAA,EAEL,CACF,CAAA,CAAA,CAEJ,CCrGwB,SAAAC,EAAe,CAAE,WAAAC,GAAmC,CACpE,MAAAC,EAAkB1B,GACfA,GAAU,EAAI,iBAAmB,eAGpC2B,EAAeC,GACZA,EAAM,eAAe,QAAS,CACnC,MAAO,WACP,SAAU,MACV,sBAAuB,EACvB,sBAAuB,CAAA,CACxB,EAIGC,EAAiBJ,GAAc,GAErC,cACGJ,EACC,CAAA,SAAA,CAACjB,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAAe,kBAAA,EAClEA,EAAA,IAAA,SAAA,CAAO,UAAU,oCAAoC,SAAO,UAAA,CAAA,EAC/D,QAEC,MAAI,CAAA,UAAU,YACZ,SAAewB,EAAA,OAAS,EACvBA,EAAe,MAAM,EAAG,CAAC,EAAE,IAAI,CAACC,EAAQrB,WACrCL,OAAAA,OAAA,MAAA,CAAgB,UAAU,oCACzB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,sEACb,eAAC,IAAE,CAAA,UAAU,2CAA2C,CAC1D,CAAA,SACC,MACC,CAAA,SAAA,CAAAA,EAAA,IAAC,IAAE,CAAA,UAAU,4BAA6B,SAAAyB,EAAO,OAAO,EACxD1B,EAAAA,KAAC,IAAE,CAAA,UAAU,wBAAwB,SAAA,CAAA,UAAM2B,EAAAD,EAAO,MAAP,YAAAC,EAAY,QAAQ,KAAM,KAAA,EAAM,CAAA,EAC7E,CAAA,EACF,EAEA3B,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAC,MAAC,KAAE,UAAU,4BAA6B,SAAYsB,EAAAG,EAAO,KAAK,EAAE,EACpE1B,EAAAA,KAAC,KAAE,UAAW,WAAWsB,EAAeI,EAAO,SAAS,CAAC,GACtD,SAAA,CAAOA,EAAA,WAAa,EAAI,IAAM,GAAIA,EAAO,UAAU,QAAQ,CAAC,EAAE,GAAA,EACjE,CAAA,EACF,CAAA,GAhBQrB,CAiBV,EACD,EAEAL,EAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,mFACb,eAAC,IAAE,CAAA,UAAU,2CAA2C,CAC1D,CAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAAwB,2BAAA,EAC5DA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAAmC,sCAAA,CAAA,CAAA,CAC/E,CAEJ,CAAA,CACF,CAAA,CAAA,CAEJ,CC5CO,SAAS2B,EAAcC,EAAiB,UAAWhB,EAAmB,QAAS,CACpF,KAAM,CAACiB,EAAMC,CAAO,EAAIC,WAA4B,IAAI,EAClD,CAACC,EAASC,CAAU,EAAIF,WAAS,EAAI,EACrC,CAACG,EAAOC,CAAQ,EAAIJ,WAAwB,IAAI,EAEhDK,EAAkB,SAAY,CAC9B,GAAA,CACFH,EAAW,EAAI,EACf,MAAMI,EAAW,MAAMC,EACrB,GAAGC,EAAc,WAAW,WAAWX,CAAM,aAAahB,CAAQ,EAAA,EAEpEkB,EAAQO,CAAQ,EAChBF,EAAS,IAAI,QACNK,EAAK,CACZL,EAASK,aAAe,MAAQA,EAAI,QAAU,6BAA6B,CAAA,QAC3E,CACAP,EAAW,EAAK,CAClB,CAAA,EAGFQ,OAAAA,EAAAA,UAAU,IAAM,CACEL,IAGV,MAAAM,EAAW,YAAYN,EAAiB,GAAK,EAE5C,MAAA,IAAM,cAAcM,CAAQ,CAAA,EAClC,CAACd,EAAQhB,CAAQ,CAAC,EAEd,CACL,KAAAiB,EACA,QAAAG,EACA,MAAAE,EACA,QAASE,CAAA,CAEb,CCtCO,SAASO,GAAqB,CACnC,KAAM,CAACC,EAAUC,CAAW,EAAId,EAAA,SAA4B,CAAE,CAAA,EACxD,CAACC,EAASC,CAAU,EAAIF,WAAS,EAAI,EACrC,CAACG,EAAOC,CAAQ,EAAIJ,WAAwB,IAAI,EAEhDe,EAAgB,SAAY,CAC5B,GAAA,CACFb,EAAW,EAAI,EACf,MAAMI,EAAW,MAAMC,EAAQ,GAAGC,EAAc,QAAQ,WAAW,EACvDM,EAAAR,EAAS,UAAY,CAAA,CAAE,EACnCF,EAAS,IAAI,QACNK,EAAK,CACZL,EAASK,aAAe,MAAQA,EAAI,QAAU,0BAA0B,CAAA,QACxE,CACAP,EAAW,EAAK,CAClB,CAAA,EAGFQ,OAAAA,EAAAA,UAAU,IAAM,CACAK,IAGR,MAAAJ,EAAW,YAAYI,EAAe,GAAK,EAE1C,MAAA,IAAM,cAAcJ,CAAQ,CACrC,EAAG,CAAE,CAAA,EAEE,CACL,SAAAE,EACA,QAAAZ,EACA,MAAAE,EACA,QAASY,CAAA,CAEb,CC7CwB,SAAAC,EAAuB,CAAE,SAAAH,GAAkC,CAC3E,MAAAI,EAAiBC,GACd,IAAI,KAAK,aAAa,QAAS,CACpC,MAAO,WACP,SAAU,MACV,sBAAuB,EACvB,sBAAuB,CAAA,CACxB,EAAE,OAAOA,CAAM,EAGZtC,EAAmBC,GAAqB,CACpC,OAAAA,EAAS,YAAe,EAAA,CAC9B,IAAK,QACI,MAAA,mBACT,IAAK,MACI,MAAA,mBACT,QACS,MAAA,kBACX,CAAA,EAGIsC,EAAoBtC,GAAqB,CACrC,OAAAA,EAAS,YAAe,EAAA,CAC9B,IAAK,QACI,MAAA,gCACT,IAAK,MACI,MAAA,4BACT,QACS,MAAA,2BACX,CAAA,EAGIH,EAAkBC,GAAmB,CACzC,OAAQA,EAAQ,CACd,IAAK,YACI,MAAA,8BACT,IAAK,eACI,MAAA,4BACT,IAAK,QACI,MAAA,0BACT,QACS,MAAA,2BACX,CAAA,EAGIyC,EAAiBzC,GAAmB,CACxC,OAAQA,EAAQ,CACd,IAAK,YACI,MAAA,gBACT,IAAK,eACI,MAAA,gBACT,IAAK,QACI,MAAA,wBACT,QACS,MAAA,kBACX,CAAA,EAGF,MAAI,CAACkC,GAAYA,EAAS,SAAW,EAEjC7C,EAAA,KAACiB,EAAK,CAAA,UAAU,MACd,SAAA,CAACjB,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAAiB,oBAAA,EACrEA,EAAAA,IAAC,MAAI,CAAA,UAAU,kCAAmC,CAAA,CAAA,EACpD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAACC,EAAAA,IAAA,IAAA,CAAE,UAAU,8BAA+B,CAAA,EAC5CA,EAAAA,IAAC,KAAE,SAA6B,+BAAA,CAAA,EAC/BA,EAAA,IAAA,IAAA,CAAE,UAAU,UAAU,SAA+C,kDAAA,CAAA,EACxE,CACF,CAAA,CAAA,EAKFD,EAAA,KAACiB,EAAK,CAAA,UAAU,MACd,SAAA,CAACjB,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAAiB,oBAAA,EACrED,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,mCAAoC,CAAA,EAClDA,EAAA,IAAA,OAAA,CAAK,UAAU,yBAAyB,SAAS,YAAA,CAAA,EACpD,CAAA,EACF,EAECA,EAAA,IAAA,MAAA,CAAI,UAAU,YACZ,SAAS4C,EAAA,IAAI,CAACQ,EAAShD,IACtBL,EAAAA,KAAC,MAAgB,CAAA,UAAU,wCACzB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAC,MAAC,OAAI,UAAW,yDAAyDkD,EAAiBE,EAAQ,QAAQ,CAAC,GACzG,SAACpD,EAAA,IAAA,IAAA,CAAE,UAAW,GAAGW,EAAgByC,EAAQ,QAAQ,CAAC,UAAY,CAAA,EAChE,SACC,MACC,CAAA,SAAA,CAACrD,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAC,MAAC,MAAG,UAAU,4BAA6B,SAAQoD,EAAA,SAAS,cAAc,EAC1ErD,EAAAA,KAAC,OAAI,UAAW,0EAA0EU,EAAe2C,EAAQ,MAAM,CAAC,GACtH,SAAA,CAAApD,MAAC,KAAE,UAAW,GAAGmD,EAAcC,EAAQ,MAAM,CAAC,WAAY,EAC1DpD,EAAAA,IAAC,OAAM,CAAA,SAAAoD,EAAQ,MAAO,CAAA,CAAA,EACxB,CAAA,EACF,EACArD,EAAAA,KAAC,IAAE,CAAA,UAAU,wBAAwB,SAAA,CAAA,WAC1B,IAAI,KAAKqD,EAAQ,WAAW,EAAE,mBAAmB,CAAA,EAC5D,EACCA,EAAQ,OACNrD,OAAA,IAAA,CAAE,UAAU,4BAA4B,SAAA,CAAA,UAC/BqD,EAAQ,KAAA,EAClB,CAAA,EAEJ,CAAA,EACF,EACArD,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAC,MAAC,KAAE,UAAU,kCACV,SAAcgD,EAAAI,EAAQ,YAAY,EACrC,EACArD,EAAAA,KAAC,IAAE,CAAA,UAAU,wBAAwB,SAAA,CAAA,cACvBiD,EAAcI,EAAQ,gBAAgB,CAAA,EACpD,EACArD,EAAAA,KAAC,IAAE,CAAA,UAAU,wBAAwB,SAAA,CAAA,WAC1BiD,EAAcI,EAAQ,aAAa,CAAA,EAC9C,CAAA,EACF,CAAA,EACF,EAGCA,EAAQ,QAAUA,EAAQ,OAAO,OAAS,GACzCpD,EAAA,IAAC,MAAI,CAAA,UAAU,yBACZ,SAAAoD,EAAQ,OAAO,MAAM,EAAG,CAAC,EAAE,IAAI,CAACC,EAAOC,IACtCvD,EAAAA,KAAC,MAAqB,CAAA,UAAU,+BAC9B,SAAA,CAAAC,EAAA,IAAC,OAAK,CAAA,UAAU,gBAAiB,SAAAqD,EAAM,MAAM,EAC7CrD,EAAAA,IAAC,QAAK,UAAU,cAAe,WAAM,MAAM,QAAQ,CAAC,EAAE,CAAA,GAF9CsD,CAGV,CACD,EACH,CAAA,GA9CMlD,CAgDV,CACD,EACH,CACF,CAAA,CAAA,CAEJ,CClIA,SAAwBmD,GAAO,CAC7B,MAAMhD,EAAWC,IACX,CAAE,KAAAgD,GAASC,IACX,CAAE,KAAAnD,EAAM,QAASoD,GAAgBC,EAAQ,EACAhC,EAAc,EAC7D,KAAM,CAAE,SAAAiB,EAAU,QAASgB,GAAoBjB,EAAmB,EAC5D,CAACkB,EAAaC,CAAc,EAAI/B,WAAS,EAAK,EAEpDU,EAAAA,UAAU,IAAM,CACO,CAAC,aAAa,QAAQ,eAAe,GACtCe,IAClBM,EAAe,EAAI,EACN,aAAA,QAAQ,gBAAiB,MAAM,EAC9C,EACC,CAACN,CAAI,CAAC,EAET,MAAMO,EAAazD,EAAK,OAAcY,GAAAA,EAAI,SAAW,QAAQ,EAC5CZ,EAAK,OAAO,CAAC0D,EAAK9C,IAAQ8C,GAAO9C,EAAI,UAAY,GAAI,CAAC,EAEvE,MAAM+C,EAAuB,IAAM,CACjCH,EAAe,EAAK,EACpBvD,EAAS,aAAa,CAAA,EAOlB2D,EAAc,IAAM,CACpB,QAAQ,0FAA0F,IAEpG,aAAa,MAAM,EAEnB,OAAO,SAAS,SAClB,EAIA,OAAAnE,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAC,EAAA,IAACmE,EAAA,CACC,MAAM,QACN,SAAS,sBACT,YACEpE,EAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAA,EAAA,KAACkB,EAAA,CACC,QAAQ,SACR,KAAK,KACL,QAASiD,EAET,SAAA,CAAClE,EAAAA,IAAA,IAAA,CAAE,UAAU,sBAAuB,CAAA,EAAI,OAAA,CAAA,CAE1C,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMO,EAAS,OAAO,EAC/B,UAAU,qDAEV,SAAAP,EAAAA,IAAC,IAAE,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC5D,CAAA,EACF,CAAA,CAEJ,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,6BAEZ,SAAA,CAAA8D,SACE7C,EAAK,CAAA,UAAU,iEACd,SAACjB,EAAAA,KAAA,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,sEACb,eAAC,IAAE,CAAA,UAAU,uCAAuC,CACtD,CAAA,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAEzD,uBAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAE1C,mGAAA,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAC,EAAA,IAACiB,EAAA,CACC,QAAQ,UACR,QAASgD,EACT,UAAU,UACX,SAAA,kBAAA,CAED,EACAjE,EAAA,IAACiB,EAAA,CACC,QAAQ,YACR,QAAS,IAAM6C,EAAe,EAAK,EACnC,UAAU,UACX,SAAA,aAAA,CAED,CAAA,EACF,CAAA,EACF,EACA9D,EAAA,IAAC,SAAA,CACC,QAAS,IAAM8D,EAAe,EAAK,EACnC,UAAU,qDAEV,SAAA9D,EAAAA,IAAC,IAAE,CAAA,UAAU,6BAA8B,CAAA,CAAA,CAC7C,CAAA,CAAA,CACF,CACF,CAAA,QAIDC,EAAU,EAAA,EAGXF,EAAAA,KAACiB,EAAK,CAAA,UAAU,MACd,SAAA,CAAChB,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAAa,gBAAA,EACtED,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,EAAA,KAACkB,EAAA,CACC,QAAQ,UACR,QAAS,IAAMV,EAAS,aAAa,EACrC,UAAU,wCAEV,SAAA,CAACP,EAAAA,IAAA,IAAA,CAAE,UAAU,kBAAmB,CAAA,EAAI,YAAA,CAAA,CAEtC,EACAD,EAAA,KAACkB,EAAA,CACC,QAAQ,YACR,QAAS,IAAMV,EAAS,OAAO,EAC/B,UAAU,wCAEV,SAAA,CAACP,EAAAA,IAAA,IAAA,CAAE,UAAU,oBAAqB,CAAA,EAAI,aAAA,CAAA,CAExC,CAAA,EACF,CAAA,EACF,QAGCK,EAAW,EAAA,EAGZL,MAAC+C,GAAuB,SAAAH,EAAoB,QAG3CzB,EAAe,EAAA,EAGhBpB,EAAAA,KAACiB,EAAK,CAAA,UAAU,MACd,SAAA,CAACjB,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAAe,kBAAA,EACnEA,EAAA,IAACiB,EAAA,CACC,QAAQ,YACR,QAAS,IAAMV,EAAS,SAAS,EACjC,UAAU,UACX,SAAA,UAAA,CAED,CAAA,EACF,EAEAP,EAAAA,IAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CACC,CACE,KAAM,QACN,QAAS,mCACT,KAAM,gBACN,KAAM,mBACN,MAAO,OACT,EACA,CACE,KAAM,SACN,QAAS,0CACT,KAAM,iBACN,KAAM,8BACN,MAAO,OACT,EACA,CACE,KAAM,QACN,QAAS,oCACT,KAAM,aACN,KAAM,gBACN,MAAO,KACT,EACA,CACE,KAAM,MACN,QAAS,+BACT,KAAM,cACN,KAAM,gBACN,MAAO,MACT,CAAA,EACA,IAAI,CAACoE,EAAUhE,IACdL,EAAAA,KAAA,MAAA,CAAgB,UAAU,wDACzB,SAAA,CAAAC,MAAC,OAAI,UAAW,cAAcoE,EAAS,KAAK,qDAC1C,SAACpE,EAAA,IAAA,IAAA,CAAE,UAAW,GAAGoE,EAAS,IAAI,SAASA,EAAS,KAAK,MAAQ,CAAA,EAC/D,EACArE,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAC,EAAA,IAAC,IAAE,CAAA,UAAU,oCAAqC,SAAAoE,EAAS,QAAQ,EAClEpE,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAyB,WAAS,KAAK,CAAA,EACtD,CAAA,GAPQI,CAQV,CACD,EACH,CAAA,EACF,EAGAL,EAAAA,KAACiB,EAAK,CAAA,UAAU,MACd,SAAA,CAAChB,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAAmB,sBAAA,EAC5ED,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,oCAAoC,SAAQ,WAAA,EAC1DA,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAS,YAAA,CAAA,EAClD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,mCAAmC,SAAE,KAAA,EACnDA,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAe,kBAAA,CAAA,EACxD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,0CACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,qCAAqC,SAAG,MAAA,EACtDA,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAQ,WAAA,CAAA,EACjD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,0CACb,SAAA,CAAAC,EAAA,IAAC,MAAI,CAAA,UAAU,qCAAsC,SAAA+D,EAAW,OAAO,EACtE/D,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAW,cAAA,CAAA,EACpD,CAAA,EACF,CAAA,EACF,EAGAD,EAAAA,KAACiB,EAAK,CAAA,UAAU,MACd,SAAA,CAAChB,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAAY,eAAA,EACrED,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,4BACb,SAACD,EAAA,KAAA,MAAA,CAAI,UAAU,6BACb,SAAA,CAACC,EAAAA,IAAA,IAAA,CAAE,UAAU,sCAAuC,CAAA,SACnD,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,KAAA,CAAG,UAAU,iCAAiC,SAAe,kBAAA,EAC7DA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAErC,4GAAA,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,QACC,MAAI,CAAA,UAAU,6BACb,SAACD,EAAA,KAAA,MAAA,CAAI,UAAU,6BACb,SAAA,CAACC,EAAAA,IAAA,IAAA,CAAE,UAAU,uCAAwC,CAAA,SACpD,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,KAAA,CAAG,UAAU,kCAAkC,SAAe,kBAAA,EAC9DA,EAAA,IAAA,IAAA,CAAE,UAAU,yBAAyB,SAEtC,8FAAA,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAAA,EACF,CAAA,EACF,QAECqE,EAAW,EAAA,CACd,CAAA,CAAA,CAEJ"}