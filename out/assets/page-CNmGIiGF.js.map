{"version":3,"file":"page-CNmGIiGF.js","sources":["../../src/hooks/useApiKeys.ts","../../src/pages/settings/page.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { API_ENDPOINTS, apiCall } from '../lib/supabase'\r\n\r\nexport interface ApiKey {\r\n  id: string\r\n  exchange: string\r\n  isTestnet: boolean\r\n  isActive: boolean\r\n  createdAt: string\r\n}\r\n\r\nexport interface ApiKeyFormData {\r\n  exchange: 'bybit' | 'okx'\r\n  apiKey: string\r\n  apiSecret: string\r\n  passphrase?: string\r\n  isTestnet: boolean\r\n}\r\n\r\nexport function useApiKeys() {\r\n  const [apiKeys, setApiKeys] = useState<ApiKey[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  const fetchApiKeys = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await apiCall(`${API_ENDPOINTS.API_KEYS}/list`)\r\n      setApiKeys(response.apiKeys || [])\r\n      setError(null)\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch API keys')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const saveApiKey = async (formData: ApiKeyFormData) => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await apiCall(`${API_ENDPOINTS.API_KEYS}/save`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(formData),\r\n      })\r\n      \r\n      // Refresh the list\r\n      await fetchApiKeys()\r\n      return response.apiKey\r\n    } catch (err) {\r\n      throw new Error(err instanceof Error ? err.message : 'Failed to save API key')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const testApiConnection = async (formData: ApiKeyFormData) => {\r\n    try {\r\n      const response = await apiCall(`${API_ENDPOINTS.API_KEYS}/test`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(formData),\r\n      })\r\n      return response\r\n    } catch (err) {\r\n      throw new Error(err instanceof Error ? err.message : 'Failed to test API connection')\r\n    }\r\n  }\r\n\r\n  const toggleApiKey = async (id: string, isActive: boolean) => {\r\n    try {\r\n      const response = await apiCall(`${API_ENDPOINTS.API_KEYS}/toggle`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify({ id, isActive }),\r\n      })\r\n      \r\n      // Refresh the list\r\n      await fetchApiKeys()\r\n      return response.apiKey\r\n    } catch (err) {\r\n      throw new Error(err instanceof Error ? err.message : 'Failed to toggle API key')\r\n    }\r\n  }\r\n\r\n  const deleteApiKey = async (id: string) => {\r\n    try {\r\n      await apiCall(`${API_ENDPOINTS.API_KEYS}?id=${id}`, {\r\n        method: 'DELETE',\r\n      })\r\n      \r\n      // Refresh the list\r\n      await fetchApiKeys()\r\n    } catch (err) {\r\n      throw new Error(err instanceof Error ? err.message : 'Failed to delete API key')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchApiKeys()\r\n  }, [])\r\n\r\n  return {\r\n    apiKeys,\r\n    loading,\r\n    error,\r\n    saveApiKey,\r\n    testApiConnection,\r\n    toggleApiKey,\r\n    deleteApiKey,\r\n    refetch: fetchApiKeys,\r\n  }\r\n}\r\n","\n\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../../components/feature/Header';\nimport Navigation from '../../components/feature/Navigation';\nimport Button from '../../components/base/Button';\nimport Card from '../../components/base/Card';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useApiKeys, ApiKeyFormData } from '../../hooks/useApiKeys';\n\nexport default function Settings() {\n  const navigate = useNavigate();\n  const { signOut } = useAuth();\n  const { apiKeys, loading: apiKeysLoading, saveApiKey, testApiConnection: testConnection, toggleApiKey, deleteApiKey } = useApiKeys();\n\n  const [notifications, setNotifications] = useState({\n    push: true,\n    email: false,\n    trading: true,\n    price: true\n  });\n\n  const [security, setSecurity] = useState({\n    twoFactor: false,\n    biometric: true,\n    autoLogout: 30\n  });\n\n  const [trading, setTrading] = useState({\n    defaultLeverage: 5,\n    riskLevel: 'medium',\n    autoRebalance: true,\n    stopLoss: 5\n  });\n\n  const [appearance, setAppearance] = useState({\n    theme: 'light',\n    currency: 'USD',\n    language: 'English'\n  });\n\n  const [apiSettings, setApiSettings] = useState({\n    bybitApiKey: '',\n    bybitApiSecret: '',\n    bybitTestnet: true,\n    okxApiKey: '',\n    okxApiSecret: '',\n    okxPassphrase: '',\n    okxTestnet: true,\n    webhookUrl: '',\n    webhookSecret: '',\n    alertsEnabled: true\n  });\n\n  const [alerts, setAlerts] = useState({\n    priceThreshold: 5,\n    pnlThreshold: 10,\n    volumeThreshold: 50,\n    rsiOverbought: 70,\n    rsiOversold: 30,\n    emailAlerts: true,\n    pushAlerts: true,\n    webhookAlerts: false,\n    telegramBot: '',\n    discordWebhook: '',\n    // New risk management alerts\n    lowBalanceAlert: true,\n    lowBalanceThreshold: 100,\n    liquidationAlert: true,\n    liquidationThreshold: 80,\n    newTradeAlert: true,\n    closePositionAlert: true,\n    profitAlert: true,\n    profitThreshold: 5,\n    lossAlert: true,\n    lossThreshold: 5,\n    dailyPnlAlert: true,\n    weeklyPnlAlert: false,\n    monthlyPnlAlert: true\n  });\n\n  const [riskManagement, setRiskManagement] = useState({\n    maxDailyLoss: 500,\n    maxPositionSize: 1000,\n    stopLossPercentage: 5,\n    takeProfitPercentage: 10,\n    maxOpenPositions: 5,\n    riskPerTrade: 2,\n    autoStopTrading: true,\n    emergencyStopLoss: 20\n  });\n\n  const [showEditProfile, setShowEditProfile] = useState(false);\n  const [showApiConfig, setShowApiConfig] = useState(false);\n  const [showAlertsConfig, setShowAlertsConfig] = useState(false);\n  const [showRiskConfig, setShowRiskConfig] = useState(false);\n  const [profileData, setProfileData] = useState({\n    name: 'Alex Johnson',\n    email: 'alex.johnson@email.com',\n    phone: '+1 (555) 123-4567',\n    timezone: 'UTC-5 (EST)'\n  });\n\n  const handleNotificationChange = (key: string, value: boolean) => {\n    setNotifications(prev => ({ ...prev, [key]: value }));\n  };\n\n  const handleSecurityChange = (key: string, value: any) => {\n    setSecurity(prev => ({ ...prev, [key]: value }));\n  };\n\n  const handleTradingChange = (key: string, value: any) => {\n    setTrading(prev => ({ ...prev, [key]: value }));\n  };\n\n  const handleAppearanceChange = (key: string, value: any) => {\n    setAppearance(prev => ({ ...prev, [key]: value }));\n  };\n\n  const handleApiChange = (key: string, value: any) => {\n    setApiSettings(prev => ({ ...prev, [key]: value }));\n  };\n\n  const handleAlertsChange = (key: string, value: any) => {\n    setAlerts(prev => ({ ...prev, [key]: value }));\n  };\n\n  const handleProfileSave = () => {\n    // Save profile changes\n    setShowEditProfile(false);\n  };\n\n  const handleApiSave = async () => {\n    try {\n      // Save Bybit API key if provided\n      if (apiSettings.bybitApiKey && apiSettings.bybitApiSecret) {\n        await saveApiKey({\n          exchange: 'bybit',\n          apiKey: apiSettings.bybitApiKey,\n          apiSecret: apiSettings.bybitApiSecret,\n          isTestnet: apiSettings.bybitTestnet,\n        });\n      }\n\n      // Save OKX API key if provided\n      if (apiSettings.okxApiKey && apiSettings.okxApiSecret) {\n        await saveApiKey({\n          exchange: 'okx',\n          apiKey: apiSettings.okxApiKey,\n          apiSecret: apiSettings.okxApiSecret,\n          passphrase: apiSettings.okxPassphrase,\n          isTestnet: apiSettings.okxTestnet,\n        });\n      }\n\n      setShowApiConfig(false);\n      alert('API keys saved successfully!');\n    } catch (error: any) {\n      alert(`Failed to save API keys: ${error.message}`);\n    }\n  };\n\n  const handleAlertsSave = () => {\n    // Save alerts settings\n    setShowAlertsConfig(false);\n  };\n\n  const handleProfileChange = (field: string, value: string) => {\n    setProfileData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const testApiConnection = async (exchange: 'bybit' | 'okx') => {\n    try {\n      let formData: ApiKeyFormData;\n      \n      if (exchange === 'bybit') {\n        formData = {\n          exchange: 'bybit',\n          apiKey: apiSettings.bybitApiKey,\n          apiSecret: apiSettings.bybitApiSecret,\n          isTestnet: apiSettings.bybitTestnet,\n        };\n      } else {\n        formData = {\n          exchange: 'okx',\n          apiKey: apiSettings.okxApiKey,\n          apiSecret: apiSettings.okxApiSecret,\n          passphrase: apiSettings.okxPassphrase,\n          isTestnet: apiSettings.okxTestnet,\n        };\n      }\n\n      const result = await testConnection(formData);\n      \n      if (result.success) {\n        alert(`${exchange.toUpperCase()} API connection successful!`);\n      } else {\n        alert(`${exchange.toUpperCase()} API connection failed: ${result.message}`);\n      }\n    } catch (error: any) {\n      alert(`Failed to test ${exchange.toUpperCase()} API: ${error.message}`);\n    }\n  };\n\n  const handleSignOut = async () => {\n    try {\n      const { error } = await signOut();\n      if (error) {\n        console.error('Sign out error:', error);\n      } else {\n        navigate('/auth');\n      }\n    } catch (error) {\n      console.error('Sign out failed:', error);\n    }\n  };\n\n  const handleRiskChange = (key: string, value: any) => {\n    setRiskManagement(prev => ({ ...prev, [key]: value }));\n  };\n\n  const handleRiskSave = () => {\n    // Save risk management settings\n    setShowRiskConfig(false);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header title=\"Settings\" />\n      \n      <div className=\"pt-20 pb-20 px-4 space-y-6\">\n        {/* Profile Section */}\n        <Card className=\"p-6\">\n          <div className=\"flex items-center space-x-4 mb-4\">\n            <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center\">\n              <i className=\"ri-user-line text-2xl text-blue-600\"></i>\n            </div>\n            <div className=\"flex-1\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">{profileData.name}</h3>\n              <p className=\"text-gray-500\">{profileData.email}</p>\n              <span className=\"inline-block px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full mt-1\">\n                Pro Member\n              </span>\n            </div>\n          </div>\n          <button \n            onClick={() => setShowEditProfile(true)}\n            className=\"w-full bg-gray-100 hover:bg-gray-200 text-gray-700 py-2 px-4 rounded-lg transition-colors\"\n          >\n            <i className=\"ri-edit-line mr-2\"></i>\n            Edit Profile\n          </button>\n        </Card>\n\n        {/* API Configuration */}\n        <Card className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Exchange Connections</h3>\n            <div className=\"flex items-center space-x-2\">\n              <div className={`w-2 h-2 rounded-full ${apiKeys.length > 0 ? 'bg-green-500' : 'bg-gray-400'}`}></div>\n              <span className={`text-sm ${apiKeys.length > 0 ? 'text-green-600' : 'text-gray-600'}`}>\n                {apiKeys.length > 0 ? `${apiKeys.length} Connected` : 'Not Connected'}\n              </span>\n            </div>\n          </div>\n          <p className=\"text-gray-500 text-sm mb-4\">Configure your exchange API keys to view balances and enable trading</p>\n          \n          {apiKeysLoading ? (\n            <div className=\"text-center py-8\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n              <p className=\"text-gray-600\">Loading connections...</p>\n            </div>\n          ) : apiKeys.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-500\">\n              <i className=\"ri-exchange-line text-4xl mb-2\"></i>\n              <p>No exchange connections found</p>\n              <p className=\"text-sm\">Connect your exchange API keys to get started</p>\n              <button\n                onClick={() => setShowApiConfig(true)}\n                className=\"mt-4 bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg transition-colors\"\n              >\n                <i className=\"ri-add-line mr-2\"></i>\n                Connect Exchange\n              </button>\n            </div>\n          ) : (\n            <div className=\"space-y-3\">\n              {apiKeys.map((apiKey) => (\n                <div key={apiKey.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className={`w-8 h-8 rounded-full flex items-center justify-center ${\n                      apiKey.exchange === 'bybit' ? 'bg-orange-100' : 'bg-blue-100'\n                    }`}>\n                      <i className={`${apiKey.exchange === 'bybit' ? 'ri-currency-line text-orange-600' : 'ri-exchange-line text-blue-600'}`}></i>\n                    </div>\n                    <div>\n                      <p className=\"font-medium text-gray-900\">{apiKey.exchange.toUpperCase()} API</p>\n                      <p className=\"text-sm text-gray-500\">\n                        {apiKey.isActive ? 'Active' : 'Inactive'} • {apiKey.isTestnet ? 'Testnet' : 'Live'}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={() => toggleApiKey(apiKey.id, !apiKey.isActive)}\n                      className={`px-3 py-1 rounded-full text-xs font-medium ${\n                        apiKey.isActive \n                          ? 'bg-green-100 text-green-800 hover:bg-green-200' \n                          : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\n                      }`}\n                    >\n                      {apiKey.isActive ? 'Active' : 'Inactive'}\n                    </button>\n                    <button\n                      onClick={() => deleteApiKey(apiKey.id)}\n                      className=\"text-red-600 hover:text-red-700 text-sm font-medium\"\n                    >\n                      Remove\n                    </button>\n                  </div>\n                </div>\n              ))}\n              <button\n                onClick={() => setShowApiConfig(true)}\n                className=\"w-full bg-gray-100 hover:bg-gray-200 text-gray-700 py-2 px-4 rounded-lg transition-colors\"\n              >\n                <i className=\"ri-add-line mr-2\"></i>\n                Add Exchange Connection\n              </button>\n            </div>\n          )}\n        </Card>\n\n        {/* Risk Management */}\n        <Card className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Risk Management</h3>\n            <button\n              onClick={() => setShowRiskConfig(true)}\n              className=\"text-blue-600 hover:text-blue-700 text-sm font-medium\"\n            >\n              Configure\n            </button>\n          </div>\n          <p className=\"text-gray-500 text-sm mb-4\">Protect your capital with automated risk controls</p>\n          \n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"p-3 bg-red-50 rounded-lg\">\n              <div className=\"flex items-center space-x-2 mb-1\">\n                <i className=\"ri-shield-line text-red-600\"></i>\n                <span className=\"text-sm font-medium text-gray-900\">Max Daily Loss</span>\n              </div>\n              <p className=\"text-xs text-gray-500\">${riskManagement.maxDailyLoss}</p>\n            </div>\n            \n            <div className=\"p-3 bg-orange-50 rounded-lg\">\n              <div className=\"flex items-center space-x-2 mb-1\">\n                <i className=\"ri-pie-chart-line text-orange-600\"></i>\n                <span className=\"text-sm font-medium text-gray-900\">Position Size</span>\n              </div>\n              <p className=\"text-xs text-gray-500\">Max ${riskManagement.maxPositionSize}</p>\n            </div>\n            \n            <div className=\"p-3 bg-blue-50 rounded-lg\">\n              <div className=\"flex items-center space-x-2 mb-1\">\n                <i className=\"ri-stop-line text-blue-600\"></i>\n                <span className=\"text-sm font-medium text-gray-900\">Stop Loss</span>\n              </div>\n              <p className=\"text-xs text-gray-500\">{riskManagement.stopLossPercentage}%</p>\n            </div>\n            \n            <div className=\"p-3 bg-green-50 rounded-lg\">\n              <div className=\"flex items-center space-x-2 mb-1\">\n                <i className=\"ri-trophy-line text-green-600\"></i>\n                <span className=\"text-sm font-medium text-gray-900\">Take Profit</span>\n              </div>\n              <p className=\"text-xs text-gray-500\">{riskManagement.takeProfitPercentage}%</p>\n            </div>\n          </div>\n        </Card>\n\n        {/* Alerts Configuration */}\n        <Card className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Alert Preferences</h3>\n            <button\n              onClick={() => setShowAlertsConfig(true)}\n              className=\"text-blue-600 hover:text-blue-700 text-sm font-medium\"\n            >\n              Configure\n            </button>\n          </div>\n          <p className=\"text-gray-500 text-sm mb-4\">Choose which alerts you want to receive</p>\n          \n          <div className=\"space-y-3\">\n            {[\n              { key: 'newTradeAlert', label: 'New Trade Alerts', desc: 'Get notified when bots open new positions', icon: 'ri-add-circle-line', color: 'blue' },\n              { key: 'closePositionAlert', label: 'Position Closed', desc: 'Alerts when positions are closed', icon: 'ri-close-circle-line', color: 'green' },\n              { key: 'profitAlert', label: 'Profit Alerts', desc: 'Notifications for profitable trades', icon: 'ri-arrow-up-line', color: 'green' },\n              { key: 'lossAlert', label: 'Loss Alerts', desc: 'Notifications for losing trades', icon: 'ri-arrow-down-line', color: 'red' },\n              { key: 'lowBalanceAlert', label: 'Low Balance Alert', desc: 'Warning when account balance is low', icon: 'ri-wallet-line', color: 'orange' },\n              { key: 'liquidationAlert', label: 'Liquidation Risk', desc: 'Alert when positions are at risk', icon: 'ri-alarm-warning-line', color: 'red' }\n            ].map(({ key, label, desc, icon, color }) => (\n              <div key={key} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-8 h-8 bg-${color}-100 rounded-full flex items-center justify-center`}>\n                    <i className={`${icon} text-${color}-600`}></i>\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">{label}</p>\n                    <p className=\"text-sm text-gray-500\">{desc}</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => handleAlertsChange(key, !alerts[key as keyof typeof alerts])}\n                  className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                    alerts[key as keyof typeof alerts] ? 'bg-blue-600' : 'bg-gray-200'\n                  }`}\n                >\n                  <span\n                    className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                      alerts[key as keyof typeof alerts] ? 'translate-x-6' : 'translate-x-1'\n                    }`}\n                  />\n                </button>\n              </div>\n            ))}\n          </div>\n        </Card>\n\n        {/* Notifications */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Notifications</h3>\n          <div className=\"space-y-4\">\n            {[\n              { key: 'push', label: 'Push Notifications', desc: 'Receive push notifications on your device' },\n              { key: 'email', label: 'Email Alerts', desc: 'Get important updates via email' },\n              { key: 'trading', label: 'Trading Alerts', desc: 'Notifications for bot actions and trades' },\n              { key: 'price', label: 'Price Alerts', desc: 'Alerts for significant price movements' }\n            ].map(({ key, label, desc }) => (\n              <div key={key} className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"font-medium text-gray-900\">{label}</p>\n                  <p className=\"text-sm text-gray-500\">{desc}</p>\n                </div>\n                <button\n                  onClick={() => handleNotificationChange(key, !notifications[key as keyof typeof notifications])}\n                  className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                    notifications[key as keyof typeof notifications] ? 'bg-blue-600' : 'bg-gray-200'\n                  }`}\n                >\n                  <span\n                    className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                      notifications[key as keyof typeof notifications] ? 'translate-x-6' : 'translate-x-1'\n                    }`}\n                  />\n                </button>\n              </div>\n            ))}\n          </div>\n        </Card>\n\n        {/* Security */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Security</h3>\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"font-medium text-gray-900\">Two-Factor Authentication</p>\n                <p className=\"text-sm text-gray-500\">Add an extra layer of security</p>\n              </div>\n              <button\n                onClick={() => handleSecurityChange('twoFactor', !security.twoFactor)}\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                  security.twoFactor ? 'bg-blue-600' : 'bg-gray-200'\n                }`}\n              >\n                <span\n                  className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                    security.twoFactor ? 'translate-x-6' : 'translate-x-1'\n                  }`}\n                />\n              </button>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"font-medium text-gray-900\">Biometric Login</p>\n                <p className=\"text-sm text-gray-500\">Use fingerprint or face ID</p>\n              </div>\n              <button\n                onClick={() => handleSecurityChange('biometric', !security.biometric)}\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                  security.biometric ? 'bg-blue-600' : 'bg-gray-200'\n                }`}\n              >\n                <span\n                  className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                    security.biometric ? 'translate-x-6' : 'translate-x-1'\n                  }`}\n                />\n              </button>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Auto Logout (minutes)\n              </label>\n              <select\n                value={security.autoLogout}\n                onChange={(e) => handleSecurityChange('autoLogout', parseInt(e.target.value))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value={15}>15 minutes</option>\n                <option value={30}>30 minutes</option>\n                <option value={60}>1 hour</option>\n                <option value={120}>2 hours</option>\n              </select>\n            </div>\n          </div>\n        </Card>\n\n        {/* Trading Preferences */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Trading Preferences</h3>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Default Leverage\n              </label>\n              <select\n                value={trading.defaultLeverage}\n                onChange={(e) => handleTradingChange('defaultLeverage', parseInt(e.target.value))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value={1}>1x</option>\n                <option value={2}>2x</option>\n                <option value={3}>3x</option>\n                <option value={5}>5x</option>\n                <option value={10}>10x</option>\n                <option value={20}>20x</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Risk Level\n              </label>\n              <select\n                value={trading.riskLevel}\n                onChange={(e) => handleTradingChange('riskLevel', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value=\"low\">Low Risk</option>\n                <option value=\"medium\">Medium Risk</option>\n                <option value=\"high\">High Risk</option>\n              </select>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"font-medium text-gray-900\">Auto Rebalance</p>\n                <p className=\"text-sm text-gray-500\">Automatically rebalance portfolio</p>\n              </div>\n              <button\n                onClick={() => handleTradingChange('autoRebalance', !trading.autoRebalance)}\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                  trading.autoRebalance ? 'bg-blue-600' : 'bg-gray-200'\n                }`}\n              >\n                <span\n                  className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                    trading.autoRebalance ? 'translate-x-6' : 'translate-x-1'\n                  }`}\n                />\n              </button>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Default Stop Loss (%)\n              </label>\n              <input\n                type=\"number\"\n                value={trading.stopLoss}\n                onChange={(e) => handleTradingChange('stopLoss', parseFloat(e.target.value))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                min=\"1\"\n                max=\"20\"\n                step=\"0.5\"\n              />\n            </div>\n          </div>\n        </Card>\n\n        {/* Appearance */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Appearance</h3>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Theme\n              </label>\n              <div className=\"flex space-x-2\">\n                {['light', 'dark'].map((theme) => (\n                  <button\n                    key={theme}\n                    onClick={() => handleAppearanceChange('theme', theme)}\n                    className={`px-4 py-2 rounded-lg text-sm font-medium ${\n                      appearance.theme === theme\n                        ? 'bg-blue-600 text-white'\n                        : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                    }`}\n                  >\n                    {theme.charAt(0).toUpperCase() + theme.slice(1)}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Currency\n              </label>\n              <select\n                value={appearance.currency}\n                onChange={(e) => handleAppearanceChange('currency', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value=\"USD\">USD ($)</option>\n                <option value=\"EUR\">EUR (€)</option>\n                <option value=\"GBP\">GBP (£)</option>\n                <option value=\"JPY\">JPY (¥)</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Language\n              </label>\n              <select\n                value={appearance.language}\n                onChange={(e) => handleAppearanceChange('language', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value=\"English\">English</option>\n                <option value=\"Spanish\">Español</option>\n                <option value=\"French\">Français</option>\n                <option value=\"German\">Deutsch</option>\n              </select>\n            </div>\n          </div>\n        </Card>\n\n        {/* Account */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Account</h3>\n          <div className=\"space-y-3\">\n            <Button variant=\"secondary\" className=\"w-full justify-start\">\n              <i className=\"ri-download-line mr-2\"></i>\n              Export Data\n            </Button>\n            <Button variant=\"secondary\" className=\"w-full justify-start\">\n              <i className=\"ri-refresh-line mr-2\"></i>\n              Reset Settings\n            </Button>\n            <button \n              onClick={handleSignOut}\n              className=\"inline-flex items-center justify-center font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed bg-red-600 hover:bg-red-700 text-white focus:ring-red-500 px-4 py-2 text-sm w-full justify-start\"\n            >\n              <i className=\"ri-logout-box-line mr-2\"></i>\n              Sign Out\n            </button>\n          </div>\n        </Card>\n\n        {/* App Info */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">App Information</h3>\n          <div className=\"space-y-3 text-sm\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-500\">Version</span>\n              <span className=\"text-gray-900\">1.2.3</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-500\">Build</span>\n              <span className=\"text-gray-900\">2024.01.15</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-500\">API Status</span>\n              <span className=\"text-green-600 flex items-center\">\n                <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></div>\n                Connected\n              </span>\n            </div>\n            <Button variant=\"secondary\" className=\"w-full justify-start mt-4\">\n              <i className=\"ri-question-line mr-2\"></i>\n              Help &amp; Support\n            </Button>\n          </div>\n        </Card>\n      </div>\n\n      {/* API Configuration Modal */}\n      {showApiConfig && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg w-full max-w-md max-h-[90vh] overflow-y-auto\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">API Configuration</h2>\n                <button\n                  onClick={() => setShowApiConfig(false)}\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n                >\n                  <i className=\"ri-close-line text-xl text-gray-500\"></i>\n                </button>\n              </div>\n\n              <div className=\"space-y-6\">\n                {/* Bybit API */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3 flex items-center\">\n                    <i className=\"ri-currency-line text-orange-600 mr-2\"></i>\n                    Bybit API\n                  </h3>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        API Key\n                      </label>\n                      <input\n                        type=\"password\"\n                        value={apiSettings.bybitApiKey}\n                        onChange={(e) => handleApiChange('bybitApiKey', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        placeholder=\"Enter Bybit API Key\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        API Secret\n                      </label>\n                      <input\n                        type=\"password\"\n                        value={apiSettings.bybitApiSecret}\n                        onChange={(e) => handleApiChange('bybitApiSecret', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        placeholder=\"Enter Bybit API Secret\"\n                      />\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-700\">Use Testnet</span>\n                      <button\n                        onClick={() => handleApiChange('bybitTestnet', !apiSettings.bybitTestnet)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          apiSettings.bybitTestnet ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            apiSettings.bybitTestnet ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    <button\n                      onClick={() => testApiConnection('bybit')}\n                      className=\"w-full bg-orange-100 hover:bg-orange-200 text-orange-700 py-2 px-4 rounded-lg transition-colors text-sm\"\n                    >\n                      Test Connection\n                    </button>\n                  </div>\n                </div>\n\n                {/* OKX API */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3 flex items-center\">\n                    <i className=\"ri-exchange-line text-blue-600 mr-2\"></i>\n                    OKX API\n                  </h3>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        API Key\n                      </label>\n                      <input\n                        type=\"password\"\n                        value={apiSettings.okxApiKey}\n                        onChange={(e) => handleApiChange('okxApiKey', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        placeholder=\"Enter OKX API Key\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        API Secret\n                      </label>\n                      <input\n                        type=\"password\"\n                        value={apiSettings.okxApiSecret}\n                        onChange={(e) => handleApiChange('okxApiSecret', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        placeholder=\"Enter OKX API Secret\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Passphrase\n                      </label>\n                      <input\n                        type=\"password\"\n                        value={apiSettings.okxPassphrase}\n                        onChange={(e) => handleApiChange('okxPassphrase', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        placeholder=\"Enter OKX Passphrase\"\n                      />\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-700\">Use Testnet</span>\n                      <button\n                        onClick={() => handleApiChange('okxTestnet', !apiSettings.okxTestnet)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          apiSettings.okxTestnet ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            apiSettings.okxTestnet ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    <button\n                      onClick={() => testApiConnection('okx')}\n                      className=\"w-full bg-blue-100 hover:bg-blue-200 text-blue-700 py-2 px-4 rounded-lg transition-colors text-sm\"\n                    >\n                      Test Connection\n                    </button>\n                  </div>\n                </div>\n\n                {/* Webhook Settings */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3 flex items-center\">\n                    <i className=\"ri-webhook-line text-purple-600 mr-2\"></i>\n                    Webhook Settings\n                  </h3>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Webhook URL\n                      </label>\n                      <input\n                        type=\"url\"\n                        value={apiSettings.webhookUrl}\n                        onChange={(e) => handleApiChange('webhookUrl', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        placeholder=\"https://your-webhook-url.com\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Webhook Secret\n                      </label>\n                      <input\n                        type=\"password\"\n                        value={apiSettings.webhookSecret}\n                        onChange={(e) => handleApiChange('webhookSecret', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        placeholder=\"Enter webhook secret\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex space-x-3 mt-6\">\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => setShowApiConfig(false)}\n                  className=\"flex-1\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  onClick={handleApiSave}\n                  className=\"flex-1\"\n                >\n                  Save Settings\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Risk Management Configuration Modal */}\n      {showRiskConfig && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg w-full max-w-md max-h-[90vh] overflow-y-auto\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">Risk Management</h2>\n                <button\n                  onClick={() => setShowRiskConfig(false)}\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n                >\n                  <i className=\"ri-close-line text-xl text-gray-500\"></i>\n                </button>\n              </div>\n\n              <div className=\"space-y-6\">\n                {/* Daily Limits */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Daily Limits</h3>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Maximum Daily Loss ($)\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={riskManagement.maxDailyLoss}\n                        onChange={(e) => handleRiskChange('maxDailyLoss', parseFloat(e.target.value))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        min=\"50\"\n                        max=\"10000\"\n                        step=\"50\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Maximum Position Size ($)\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={riskManagement.maxPositionSize}\n                        onChange={(e) => handleRiskChange('maxPositionSize', parseFloat(e.target.value))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        min=\"100\"\n                        max=\"50000\"\n                        step=\"100\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Maximum Open Positions\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={riskManagement.maxOpenPositions}\n                        onChange={(e) => handleRiskChange('maxOpenPositions', parseInt(e.target.value))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        min=\"1\"\n                        max=\"20\"\n                        step=\"1\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {/* Risk Percentages */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Risk Percentages</h3>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Stop Loss Percentage (%)\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={riskManagement.stopLossPercentage}\n                        onChange={(e) => handleRiskChange('stopLossPercentage', parseFloat(e.target.value))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        min=\"1\"\n                        max=\"20\"\n                        step=\"0.5\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Take Profit Percentage (%)\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={riskManagement.takeProfitPercentage}\n                        onChange={(e) => handleRiskChange('takeProfitPercentage', parseFloat(e.target.value))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        min=\"1\"\n                        max=\"50\"\n                        step=\"0.5\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Risk Per Trade (%)\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={riskManagement.riskPerTrade}\n                        onChange={(e) => handleRiskChange('riskPerTrade', parseFloat(e.target.value))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        min=\"0.5\"\n                        max=\"10\"\n                        step=\"0.1\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Emergency Stop Loss (%)\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={riskManagement.emergencyStopLoss}\n                        onChange={(e) => handleRiskChange('emergencyStopLoss', parseFloat(e.target.value))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                        min=\"10\"\n                        max=\"50\"\n                        step=\"1\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {/* Auto Controls */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Automatic Controls</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Auto Stop Trading</span>\n                        <p className=\"text-xs text-gray-500\">Stop all bots when daily loss limit is reached</p>\n                      </div>\n                      <button\n                        onClick={() => handleRiskChange('autoStopTrading', !riskManagement.autoStopTrading)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          riskManagement.autoStopTrading ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            riskManagement.autoStopTrading ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex space-x-3 mt-6\">\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => setShowRiskConfig(false)}\n                  className=\"flex-1\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  onClick={handleRiskSave}\n                  className=\"flex-1\"\n                >\n                  Save Settings\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Alerts Configuration Modal */}\n      {showAlertsConfig && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg w-full max-w-md max-h-[90vh] overflow-y-auto\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">Alert Configuration</h2>\n                <button\n                  onClick={() => setShowAlertsConfig(false)}\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n                >\n                  <i className=\"ri-close-line text-xl text-gray-500\"></i>\n                </button>\n              </div>\n\n              <div className=\"space-y-6\">\n                {/* Trading Alerts */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Trading Alerts</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">New Trade Alerts</span>\n                        <p className=\"text-xs text-gray-500\">Notify when bots open new positions</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('newTradeAlert', !alerts.newTradeAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.newTradeAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.newTradeAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Close Position Alerts</span>\n                        <p className=\"text-xs text-gray-500\">Notify when positions are closed</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('closePositionAlert', !alerts.closePositionAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.closePositionAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.closePositionAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                {/* P&L Alerts */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">P&L Alerts</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Profit Alerts</span>\n                        <p className=\"text-xs text-gray-500\">Notify for profitable trades</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('profitAlert', !alerts.profitAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.profitAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.profitAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    {alerts.profitAlert && (\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Profit Threshold (%)\n                        </label>\n                        <input\n                          type=\"number\"\n                          value={alerts.profitThreshold}\n                          onChange={(e) => handleAlertsChange('profitThreshold', parseFloat(e.target.value))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                          min=\"1\"\n                          max=\"50\"\n                          step=\"0.5\"\n                        />\n                      </div>\n                    )}\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Loss Alerts</span>\n                        <p className=\"text-xs text-gray-500\">Notify for losing trades</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('lossAlert', !alerts.lossAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.lossAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.lossAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    {alerts.lossAlert && (\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Loss Threshold (%)\n                        </label>\n                        <input\n                          type=\"number\"\n                          value={alerts.lossThreshold}\n                          onChange={(e) => handleAlertsChange('lossThreshold', parseFloat(e.target.value))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                          min=\"1\"\n                          max=\"20\"\n                          step=\"0.5\"\n                        />\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Risk Alerts */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Risk Alerts</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Low Balance Alert</span>\n                        <p className=\"text-xs text-gray-500\">Warning when balance is low</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('lowBalanceAlert', !alerts.lowBalanceAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.lowBalanceAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.lowBalanceAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    {alerts.lowBalanceAlert && (\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Low Balance Threshold ($)\n                        </label>\n                        <input\n                          type=\"number\"\n                          value={alerts.lowBalanceThreshold}\n                          onChange={(e) => handleAlertsChange('lowBalanceThreshold', parseFloat(e.target.value))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                          min=\"10\"\n                          max=\"1000\"\n                          step=\"10\"\n                        />\n                      </div>\n                    )}\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Liquidation Risk Alert</span>\n                        <p className=\"text-xs text-gray-500\">Alert when positions are at risk</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('liquidationAlert', !alerts.liquidationAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.liquidationAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.liquidationAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    {alerts.liquidationAlert && (\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Liquidation Threshold (%)\n                        </label>\n                        <input\n                          type=\"number\"\n                          value={alerts.liquidationThreshold}\n                          onChange={(e) => handleAlertsChange('liquidationThreshold', parseFloat(e.target.value))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                          min=\"50\"\n                          max=\"95\"\n                          step=\"5\"\n                        />\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Reporting Alerts */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">P&L Reports</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Daily P&L Report</span>\n                        <p className=\"text-xs text-gray-500\">Daily profit/loss summary</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('dailyPnlAlert', !alerts.dailyPnlAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.dailyPnlAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.dailyPnlAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Weekly P&L Report</span>\n                        <p className=\"text-xs text-gray-500\">Weekly profit/loss summary</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('weeklyPnlAlert', !alerts.weeklyPnlAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.weeklyPnlAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.weeklyPnlAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-700\">Monthly P&L Report</span>\n                        <p className=\"text-xs text-gray-500\">Monthly profit/loss summary</p>\n                      </div>\n                      <button\n                        onClick={() => handleAlertsChange('monthlyPnlAlert', !alerts.monthlyPnlAlert)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.monthlyPnlAlert ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.monthlyPnlAlert ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Notification Channels */}\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Notification Channels</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-700\">Email Alerts</span>\n                      <button\n                        onClick={() => handleAlertsChange('emailAlerts', !alerts.emailAlerts)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.emailAlerts ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.emailAlerts ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-700\">Push Notifications</span>\n                      <button\n                        onClick={() => handleAlertsChange('pushAlerts', !alerts.pushAlerts)}\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                          alerts.pushAlerts ? 'bg-blue-600' : 'bg-gray-200'\n                        }`}\n                      >\n                        <span\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                            alerts.pushAlerts ? 'translate-x-6' : 'translate-x-1'\n                          }`}\n                        />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex space-x-3 mt-6\">\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => setShowAlertsConfig(false)}\n                  className=\"flex-1\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  onClick={handleAlertsSave}\n                  className=\"flex-1\"\n                >\n                  Save Settings\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Profile Modal */}\n      {showEditProfile && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg w-full max-w-md\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">Edit Profile</h2>\n                <button\n                  onClick={() => setShowEditProfile(false)}\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n                >\n                  <i className=\"ri-close-line text-xl text-gray-500\"></i>\n                </button>\n              </div>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Full Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={profileData.name}\n                    onChange={(e) => handleProfileChange('name', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"Enter your full name\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Email Address\n                  </label>\n                  <input\n                    type=\"email\"\n                    value={profileData.email}\n                    onChange={(e) => handleProfileChange('email', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"Enter your email\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Phone Number\n                  </label>\n                  <input\n                    type=\"tel\"\n                    value={profileData.phone}\n                    onChange={(e) => handleProfileChange('phone', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"Enter your phone number\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Timezone\n                  </label>\n                  <select\n                    value={profileData.timezone}\n                    onChange={(e) => handleProfileChange('timezone', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"UTC-8 (PST)\">UTC-8 (PST)</option>\n                    <option value=\"UTC-5 (EST)\">UTC-5 (EST)</option>\n                    <option value=\"UTC+0 (GMT)\">UTC+0 (GMT)</option>\n                    <option value=\"UTC+1 (CET)\">UTC+1 (CET)</option>\n                    <option value=\"UTC+8 (CST)\">UTC+8 (CST)</option>\n                    <option value=\"UTC+9 (JST)\">UTC+9 (JST)</option>\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"flex space-x-3 mt-6\">\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => setShowEditProfile(false)}\n                  className=\"flex-1\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  onClick={handleProfileSave}\n                  className=\"flex-1\"\n                >\n                  Save Changes\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <Navigation />\n    </div>\n  );\n}\n\n"],"names":["useApiKeys","apiKeys","setApiKeys","useState","loading","setLoading","error","setError","fetchApiKeys","response","apiCall","API_ENDPOINTS","err","saveApiKey","formData","testApiConnection","toggleApiKey","id","isActive","deleteApiKey","useEffect","Settings","navigate","useNavigate","signOut","useAuth","apiKeysLoading","testConnection","notifications","setNotifications","security","setSecurity","trading","setTrading","appearance","setAppearance","apiSettings","setApiSettings","alerts","setAlerts","riskManagement","setRiskManagement","showEditProfile","setShowEditProfile","showApiConfig","setShowApiConfig","showAlertsConfig","setShowAlertsConfig","showRiskConfig","setShowRiskConfig","profileData","setProfileData","handleNotificationChange","key","value","prev","handleSecurityChange","handleTradingChange","handleAppearanceChange","handleApiChange","handleAlertsChange","handleProfileSave","handleApiSave","handleAlertsSave","handleProfileChange","field","exchange","result","handleSignOut","handleRiskChange","handleRiskSave","jsxs","jsx","Header","Card","apiKey","label","desc","icon","color","e","theme","Button","Navigation"],"mappings":"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"}