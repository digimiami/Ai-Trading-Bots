{"version":3,"file":"page-42f28b3f.js","sources":["../../src/pages/onboarding/page.tsx"],"sourcesContent":["\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '../../components/base/Button';\nimport Card from '../../components/base/Card';\n\nexport default function Onboarding() {\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [formData, setFormData] = useState({\n    experience: '',\n    riskTolerance: '',\n    tradingGoals: '',\n    initialCapital: '',\n    preferredExchange: ''\n  });\n\n  const steps = [\n    {\n      title: 'Welcome to Pablo',\n      subtitle: 'AI-Powered Trading Bots',\n      content: (\n        <div className=\"text-center space-y-6\">\n          <div className=\"w-24 h-24 bg-blue-100 rounded-full flex items-center justify-center mx-auto\">\n            <i className=\"ri-robot-line text-4xl text-blue-600\"></i>\n          </div>\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Start Your Trading Journey</h2>\n            <p className=\"text-gray-600\">\n              Create intelligent trading bots that work 24/7 across multiple exchanges\n            </p>\n          </div>\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center space-x-3 text-left\">\n              <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center\">\n                <i className=\"ri-check-line text-green-600\"></i>\n              </div>\n              <span className=\"text-gray-700\">Multi-exchange support (Bybit, OKX)</span>\n            </div>\n            <div className=\"flex items-center space-x-3 text-left\">\n              <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center\">\n                <i className=\"ri-check-line text-green-600\"></i>\n              </div>\n              <span className=\"text-gray-700\">Advanced risk management</span>\n            </div>\n            <div className=\"flex items-center space-x-3 text-left\">\n              <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center\">\n                <i className=\"ri-check-line text-green-600\"></i>\n              </div>\n              <span className=\"text-gray-700\">Real-time performance tracking</span>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: 'Trading Experience',\n      subtitle: 'Help us understand your background',\n      content: (\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">What's your trading experience?</h3>\n          <div className=\"space-y-3\">\n            {[\n              { value: 'beginner', label: 'Beginner', desc: 'New to trading' },\n              { value: 'intermediate', label: 'Intermediate', desc: '1-3 years experience' },\n              { value: 'advanced', label: 'Advanced', desc: '3+ years experience' },\n              { value: 'professional', label: 'Professional', desc: 'Professional trader' }\n            ].map(({ value, label, desc }) => (\n              <button\n                key={value}\n                onClick={() => setFormData(prev => ({ ...prev, experience: value }))}\n                className={`w-full p-4 rounded-lg border-2 text-left transition-colors ${\n                  formData.experience === value\n                    ? 'border-blue-600 bg-blue-50'\n                    : 'border-gray-200 hover:border-gray-300'\n                }`}\n              >\n                <div className=\"font-medium text-gray-900\">{label}</div>\n                <div className=\"text-sm text-gray-500\">{desc}</div>\n              </button>\n            ))}\n          </div>\n        </div>\n      )\n    },\n    {\n      title: 'Risk Tolerance',\n      subtitle: 'Set your comfort level',\n      content: (\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">What's your risk tolerance?</h3>\n          <div className=\"space-y-3\">\n            {[\n              { value: 'conservative', label: 'Conservative', desc: 'Low risk, steady returns', color: 'green' },\n              { value: 'moderate', label: 'Moderate', desc: 'Balanced risk and reward', color: 'blue' },\n              { value: 'aggressive', label: 'Aggressive', desc: 'High risk, high potential returns', color: 'orange' }\n            ].map(({ value, label, desc, color }) => (\n              <button\n                key={value}\n                onClick={() => setFormData(prev => ({ ...prev, riskTolerance: value }))}\n                className={`w-full p-4 rounded-lg border-2 text-left transition-colors ${\n                  formData.riskTolerance === value\n                    ? `border-${color}-600 bg-${color}-50`\n                    : 'border-gray-200 hover:border-gray-300'\n                }`}\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-8 h-8 bg-${color}-100 rounded-full flex items-center justify-center`}>\n                    <i className={`ri-shield-${value === 'conservative' ? 'check' : value === 'moderate' ? 'star' : 'flash'}-line text-${color}-600`}></i>\n                  </div>\n                  <div>\n                    <div className=\"font-medium text-gray-900\">{label}</div>\n                    <div className=\"text-sm text-gray-500\">{desc}</div>\n                  </div>\n                </div>\n              </button>\n            ))}\n          </div>\n        </div>\n      )\n    },\n    {\n      title: 'Trading Goals',\n      subtitle: 'What do you want to achieve?',\n      content: (\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">What are your trading goals?</h3>\n          <div className=\"space-y-3\">\n            {[\n              { value: 'passive-income', label: 'Passive Income', desc: 'Generate steady monthly returns' },\n              { value: 'capital-growth', label: 'Capital Growth', desc: 'Grow portfolio value over time' },\n              { value: 'learning', label: 'Learning', desc: 'Learn automated trading strategies' },\n              { value: 'diversification', label: 'Diversification', desc: 'Diversify investment portfolio' }\n            ].map(({ value, label, desc }) => (\n              <button\n                key={value}\n                onClick={() => setFormData(prev => ({ ...prev, tradingGoals: value }))}\n                className={`w-full p-4 rounded-lg border-2 text-left transition-colors ${\n                  formData.tradingGoals === value\n                    ? 'border-blue-600 bg-blue-50'\n                    : 'border-gray-200 hover:border-gray-300'\n                }`}\n              >\n                <div className=\"font-medium text-gray-900\">{label}</div>\n                <div className=\"text-sm text-gray-500\">{desc}</div>\n              </button>\n            ))}\n          </div>\n        </div>\n      )\n    },\n    {\n      title: 'Initial Setup',\n      subtitle: 'Configure your trading parameters',\n      content: (\n        <div className=\"space-y-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Initial Trading Capital\n            </label>\n            <select\n              value={formData.initialCapital}\n              onChange={(e) => setFormData(prev => ({ ...prev, initialCapital: e.target.value }))}\n              className=\"w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"\">Select amount</option>\n              <option value=\"100-500\">$100 - $500</option>\n              <option value=\"500-1000\">$500 - $1,000</option>\n              <option value=\"1000-5000\">$1,000 - $5,000</option>\n              <option value=\"5000-10000\">$5,000 - $10,000</option>\n              <option value=\"10000+\">$10,000+</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Preferred Exchange\n            </label>\n            <div className=\"space-y-2\">\n              {[\n                { value: 'bybit', label: 'Bybit', desc: 'Popular derivatives exchange' },\n                { value: 'okx', label: 'OKX', desc: 'Global crypto exchange' },\n                { value: 'both', label: 'Both', desc: 'Use multiple exchanges' }\n              ].map(({ value, label, desc }) => (\n                <button\n                  key={value}\n                  onClick={() => setFormData(prev => ({ ...prev, preferredExchange: value }))}\n                  className={`w-full p-3 rounded-lg border text-left transition-colors ${\n                    formData.preferredExchange === value\n                      ? 'border-blue-600 bg-blue-50'\n                      : 'border-gray-200 hover:border-gray-300'\n                  }`}\n                >\n                  <div className=\"font-medium text-gray-900\">{label}</div>\n                  <div className=\"text-sm text-gray-500\">{desc}</div>\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: 'Ready to Start!',\n      subtitle: 'Your account is configured',\n      content: (\n        <div className=\"text-center space-y-6\">\n          <div className=\"w-24 h-24 bg-green-100 rounded-full flex items-center justify-center mx-auto\">\n            <i className=\"ri-check-line text-4xl text-green-600\"></i>\n          </div>\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">All Set!</h2>\n            <p className=\"text-gray-600\">\n              Your trading profile has been configured. You can now create your first bot.\n            </p>\n          </div>\n          <div className=\"bg-gray-50 rounded-lg p-4 space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-500\">Experience:</span>\n              <span className=\"font-medium capitalize\">{formData.experience}</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-500\">Risk Tolerance:</span>\n              <span className=\"font-medium capitalize\">{formData.riskTolerance}</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-500\">Goals:</span>\n              <span className=\"font-medium capitalize\">{formData.tradingGoals?.replace('-', ' ')}</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-500\">Capital:</span>\n              <span className=\"font-medium\">${formData.initialCapital}</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-500\">Exchange:</span>\n              <span className=\"font-medium capitalize\">{formData.preferredExchange}</span>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  ];\n\n  const handleNext = () => {\n    if (currentStep < steps.length - 1) {\n      setCurrentStep(currentStep + 1);\n    } else {\n      // Complete onboarding\n      localStorage.setItem('onboarding_completed', 'true');\n      localStorage.setItem('user_profile', JSON.stringify(formData));\n      navigate('/');\n    }\n  };\n\n  const handleBack = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const canProceed = () => {\n    switch (currentStep) {\n      case 0: return true;\n      case 1: return formData.experience !== '';\n      case 2: return formData.riskTolerance !== '';\n      case 3: return formData.tradingGoals !== '';\n      case 4: return formData.initialCapital !== '' && formData.preferredExchange !== '';\n      case 5: return true;\n      default: return false;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4\">\n      <div className=\"w-full max-w-md\">\n        {/* Progress Bar */}\n        <div className=\"mb-8\">\n          <div className=\"flex justify-between text-sm text-gray-500 mb-2\">\n            <span>Step {currentStep + 1} of {steps.length}</span>\n            <span>{Math.round(((currentStep + 1) / steps.length) * 100)}%</span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div \n              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${((currentStep + 1) / steps.length) * 100}%` }}\n            ></div>\n          </div>\n        </div>\n\n        {/* Content Card */}\n        <Card className=\"p-6\">\n          <div className=\"mb-6\">\n            <h1 className=\"text-xl font-bold text-gray-900 mb-1\">\n              {steps[currentStep].title}\n            </h1>\n            <p className=\"text-gray-500 text-sm\">\n              {steps[currentStep].subtitle}\n            </p>\n          </div>\n\n          <div className=\"mb-8\">\n            {steps[currentStep].content}\n          </div>\n\n          {/* Navigation */}\n          <div className=\"flex space-x-3\">\n            {currentStep > 0 && (\n              <Button\n                variant=\"secondary\"\n                onClick={handleBack}\n                className=\"flex-1\"\n              >\n                Back\n              </Button>\n            )}\n            <Button\n              variant=\"primary\"\n              onClick={handleNext}\n              disabled={!canProceed()}\n              className=\"flex-1\"\n            >\n              {currentStep === steps.length - 1 ? 'Get Started' : 'Continue'}\n            </Button>\n          </div>\n        </Card>\n\n        {/* Skip Option */}\n        {currentStep < steps.length - 1 && (\n          <div className=\"text-center mt-4\">\n            <button\n              onClick={() => {\n                localStorage.setItem('onboarding_completed', 'true');\n                navigate('/');\n              }}\n              className=\"text-gray-500 text-sm hover:text-gray-700 transition-colors\"\n            >\n              Skip setup\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["Onboarding","navigate","useNavigate","currentStep","setCurrentStep","useState","formData","setFormData","steps","jsxs","jsx","value","label","desc","prev","color","e","handleNext","handleBack","canProceed","Card","Button"],"mappings":"sIAMA,SAAwBA,GAAa,OACnC,MAAMC,EAAWC,IACX,CAACC,EAAaC,CAAc,EAAIC,WAAS,CAAC,EAC1C,CAACC,EAAUC,CAAW,EAAIF,WAAS,CACvC,WAAY,GACZ,cAAe,GACf,aAAc,GACd,eAAgB,GAChB,kBAAmB,EAAA,CACpB,EAEKG,EAAQ,CACZ,CACE,MAAO,mBACP,SAAU,0BACV,QACEC,EAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,8EACb,eAAC,IAAE,CAAA,UAAU,uCAAuC,CACtD,CAAA,SACC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,KAAA,CAAG,UAAU,wCAAwC,SAA0B,6BAAA,EAC/EA,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAE7B,2EAAA,CAAA,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,qEACb,eAAC,IAAE,CAAA,UAAU,+BAA+B,CAC9C,CAAA,EACCA,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAmC,sCAAA,CAAA,EACrE,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,qEACb,eAAC,IAAE,CAAA,UAAU,+BAA+B,CAC9C,CAAA,EACCA,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAwB,2BAAA,CAAA,EAC1D,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,qEACb,eAAC,IAAE,CAAA,UAAU,+BAA+B,CAC9C,CAAA,EACCA,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAA8B,iCAAA,CAAA,EAChE,CAAA,EACF,CAAA,EACF,CAEJ,EACA,CACE,MAAO,qBACP,SAAU,qCACV,QACED,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAA+B,kCAAA,EACnFA,EAAAA,IAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CACC,CAAE,MAAO,WAAY,MAAO,WAAY,KAAM,gBAAiB,EAC/D,CAAE,MAAO,eAAgB,MAAO,eAAgB,KAAM,sBAAuB,EAC7E,CAAE,MAAO,WAAY,MAAO,WAAY,KAAM,qBAAsB,EACpE,CAAE,MAAO,eAAgB,MAAO,eAAgB,KAAM,qBAAsB,CAAA,EAC5E,IAAI,CAAC,CAAE,MAAAC,EAAO,MAAAC,EAAO,KAAAC,CACrB,IAAAJ,EAAA,KAAC,SAAA,CAEC,QAAS,IAAMF,EAAYO,IAAS,CAAE,GAAGA,EAAM,WAAYH,CAAA,EAAQ,EACnE,UAAW,8DACTL,EAAS,aAAeK,EACpB,6BACA,uCACN,GAEA,SAAA,CAACD,EAAA,IAAA,MAAA,CAAI,UAAU,4BAA6B,SAAME,EAAA,EACjDF,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAyB,SAAKG,EAAA,CAAA,CAAA,EATxCF,CAWR,CAAA,EACH,CAAA,EACF,CAEJ,EACA,CACE,MAAO,iBACP,SAAU,yBACV,QACEF,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAA2B,8BAAA,EAC/EA,EAAAA,IAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CACC,CAAE,MAAO,eAAgB,MAAO,eAAgB,KAAM,2BAA4B,MAAO,OAAQ,EACjG,CAAE,MAAO,WAAY,MAAO,WAAY,KAAM,2BAA4B,MAAO,MAAO,EACxF,CAAE,MAAO,aAAc,MAAO,aAAc,KAAM,oCAAqC,MAAO,QAAS,CAAA,EACvG,IAAI,CAAC,CAAE,MAAAC,EAAO,MAAAC,EAAO,KAAAC,EAAM,MAAAE,KAC3BL,EAAA,IAAC,SAAA,CAEC,QAAS,IAAMH,EAAYO,IAAS,CAAE,GAAGA,EAAM,cAAeH,CAAA,EAAQ,EACtE,UAAW,8DACTL,EAAS,gBAAkBK,EACvB,UAAUI,CAAK,WAAWA,CAAK,MAC/B,uCACN,GAEA,SAAAN,EAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAW,cAAcK,CAAK,qDACjC,SAAAL,EAAAA,IAAC,KAAE,UAAW,aAAaC,IAAU,eAAiB,QAAUA,IAAU,WAAa,OAAS,OAAO,cAAcI,CAAK,OAAQ,CACpI,CAAA,SACC,MACC,CAAA,SAAA,CAACL,EAAA,IAAA,MAAA,CAAI,UAAU,4BAA6B,SAAME,EAAA,EACjDF,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAyB,SAAKG,EAAA,CAAA,EAC/C,CAAA,EACF,CAAA,EAhBKF,CAkBR,CAAA,EACH,CAAA,EACF,CAEJ,EACA,CACE,MAAO,gBACP,SAAU,+BACV,QACEF,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAA4B,+BAAA,EAChFA,EAAAA,IAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CACC,CAAE,MAAO,iBAAkB,MAAO,iBAAkB,KAAM,iCAAkC,EAC5F,CAAE,MAAO,iBAAkB,MAAO,iBAAkB,KAAM,gCAAiC,EAC3F,CAAE,MAAO,WAAY,MAAO,WAAY,KAAM,oCAAqC,EACnF,CAAE,MAAO,kBAAmB,MAAO,kBAAmB,KAAM,gCAAiC,CAAA,EAC7F,IAAI,CAAC,CAAE,MAAAC,EAAO,MAAAC,EAAO,KAAAC,CACrB,IAAAJ,EAAA,KAAC,SAAA,CAEC,QAAS,IAAMF,EAAYO,IAAS,CAAE,GAAGA,EAAM,aAAcH,CAAA,EAAQ,EACrE,UAAW,8DACTL,EAAS,eAAiBK,EACtB,6BACA,uCACN,GAEA,SAAA,CAACD,EAAA,IAAA,MAAA,CAAI,UAAU,4BAA6B,SAAME,EAAA,EACjDF,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAyB,SAAKG,EAAA,CAAA,CAAA,EATxCF,CAWR,CAAA,EACH,CAAA,EACF,CAEJ,EACA,CACE,MAAO,gBACP,SAAU,oCACV,QACEF,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,0BAAA,EACAD,EAAA,KAAC,SAAA,CACC,MAAOH,EAAS,eAChB,SAAWU,GAAMT,EAAqBO,IAAA,CAAE,GAAGA,EAAM,eAAgBE,EAAE,OAAO,KAAQ,EAAA,EAClF,UAAU,+GAEV,SAAA,CAACN,EAAA,IAAA,SAAA,CAAO,MAAM,GAAG,SAAa,gBAAA,EAC7BA,EAAA,IAAA,SAAA,CAAO,MAAM,UAAU,SAAW,cAAA,EAClCA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAa,gBAAA,EACrCA,EAAA,IAAA,SAAA,CAAO,MAAM,YAAY,SAAe,kBAAA,EACxCA,EAAA,IAAA,SAAA,CAAO,MAAM,aAAa,SAAgB,mBAAA,EAC1CA,EAAA,IAAA,SAAA,CAAO,MAAM,SAAS,SAAQ,WAAA,CAAA,CAAA,CACjC,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,qBAAA,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CACC,CAAE,MAAO,QAAS,MAAO,QAAS,KAAM,8BAA+B,EACvE,CAAE,MAAO,MAAO,MAAO,MAAO,KAAM,wBAAyB,EAC7D,CAAE,MAAO,OAAQ,MAAO,OAAQ,KAAM,wBAAyB,CAAA,EAC/D,IAAI,CAAC,CAAE,MAAAC,EAAO,MAAAC,EAAO,KAAAC,CACrB,IAAAJ,EAAA,KAAC,SAAA,CAEC,QAAS,IAAMF,EAAYO,IAAS,CAAE,GAAGA,EAAM,kBAAmBH,CAAA,EAAQ,EAC1E,UAAW,4DACTL,EAAS,oBAAsBK,EAC3B,6BACA,uCACN,GAEA,SAAA,CAACD,EAAA,IAAA,MAAA,CAAI,UAAU,4BAA6B,SAAME,EAAA,EACjDF,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAyB,SAAKG,EAAA,CAAA,CAAA,EATxCF,CAWR,CAAA,EACH,CAAA,EACF,CAAA,EACF,CAEJ,EACA,CACE,MAAO,kBACP,SAAU,6BACV,QACEF,EAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,+EACb,eAAC,IAAE,CAAA,UAAU,wCAAwC,CACvD,CAAA,SACC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,KAAA,CAAG,UAAU,wCAAwC,SAAQ,WAAA,EAC7DA,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAE7B,+EAAA,CAAA,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,sCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAW,cAAA,EAC1CA,EAAA,IAAA,OAAA,CAAK,UAAU,yBAA0B,WAAS,WAAW,CAAA,EAChE,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAe,kBAAA,EAC9CA,EAAA,IAAA,OAAA,CAAK,UAAU,yBAA0B,WAAS,cAAc,CAAA,EACnE,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAM,SAAA,EACtCA,EAAAA,IAAC,QAAK,UAAU,yBAA0B,cAAS,6BAAc,QAAQ,IAAK,IAAK,CAAA,CAAA,EACrF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAQ,WAAA,EACxCD,EAAAA,KAAC,OAAK,CAAA,UAAU,cAAc,SAAA,CAAA,IAAEH,EAAS,cAAA,EAAe,CAAA,EAC1D,EACAG,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAS,YAAA,EACxCA,EAAA,IAAA,OAAA,CAAK,UAAU,yBAA0B,WAAS,kBAAkB,CAAA,EACvE,CAAA,EACF,CAAA,EACF,CAEJ,CAAA,EAGIO,EAAa,IAAM,CACnBd,EAAcK,EAAM,OAAS,EAC/BJ,EAAeD,EAAc,CAAC,GAGjB,aAAA,QAAQ,uBAAwB,MAAM,EACnD,aAAa,QAAQ,eAAgB,KAAK,UAAUG,CAAQ,CAAC,EAC7DL,EAAS,GAAG,EACd,EAGIiB,EAAa,IAAM,CACnBf,EAAc,GAChBC,EAAeD,EAAc,CAAC,CAChC,EAGIgB,EAAa,IAAM,CACvB,OAAQhB,EAAa,CACnB,IAAK,GAAU,MAAA,GACf,IAAK,GAAG,OAAOG,EAAS,aAAe,GACvC,IAAK,GAAG,OAAOA,EAAS,gBAAkB,GAC1C,IAAK,GAAG,OAAOA,EAAS,eAAiB,GACzC,IAAK,GAAG,OAAOA,EAAS,iBAAmB,IAAMA,EAAS,oBAAsB,GAChF,IAAK,GAAU,MAAA,GACf,QAAgB,MAAA,EAClB,CAAA,EAGF,aACG,MAAI,CAAA,UAAU,iGACb,SAACG,EAAA,KAAA,MAAA,CAAI,UAAU,kBAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kDACb,SAAA,CAAAA,OAAC,OAAK,CAAA,SAAA,CAAA,QAAMN,EAAc,EAAE,OAAKK,EAAM,MAAA,EAAO,SAC7C,OAAM,CAAA,SAAA,CAAA,KAAK,OAAQL,EAAc,GAAKK,EAAM,OAAU,GAAG,EAAE,GAAA,EAAC,CAAA,EAC/D,EACAE,EAAAA,IAAC,MAAI,CAAA,UAAU,sCACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAU,2DACV,MAAO,CAAE,MAAO,IAAKP,EAAc,GAAKK,EAAM,OAAU,GAAG,GAAI,CAAA,CAAA,EAEnE,CAAA,EACF,EAGAC,EAAAA,KAACW,EAAK,CAAA,UAAU,MACd,SAAA,CAACX,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAAAC,MAAC,MAAG,UAAU,uCACX,SAAMF,EAAAL,CAAW,EAAE,MACtB,QACC,IAAE,CAAA,UAAU,wBACV,SAAMK,EAAAL,CAAW,EAAE,SACtB,CAAA,EACF,QAEC,MAAI,CAAA,UAAU,OACZ,SAAMK,EAAAL,CAAW,EAAE,QACtB,EAGAM,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACZ,SAAA,CAAAN,EAAc,GACbO,EAAA,IAACW,EAAA,CACC,QAAQ,YACR,QAASH,EACT,UAAU,SACX,SAAA,MAAA,CAED,EAEFR,EAAA,IAACW,EAAA,CACC,QAAQ,UACR,QAASJ,EACT,SAAU,CAACE,EAAW,EACtB,UAAU,SAET,SAAgBhB,IAAAK,EAAM,OAAS,EAAI,cAAgB,UAAA,CACtD,CAAA,EACF,CAAA,EACF,EAGCL,EAAcK,EAAM,OAAS,GAC3BE,EAAAA,IAAA,MAAA,CAAI,UAAU,mBACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACA,aAAA,QAAQ,uBAAwB,MAAM,EACnDT,EAAS,GAAG,CACd,EACA,UAAU,8DACX,SAAA,YAAA,CAAA,EAGH,CAAA,CAEJ,CAAA,CACF,CAAA,CAEJ"}