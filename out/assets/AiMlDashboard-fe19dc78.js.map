{"version":3,"file":"AiMlDashboard-fe19dc78.js","sources":["../../ai-ml-system/web/pages/AiMlDashboard.tsx"],"sourcesContent":["/**\r\n * Comprehensive AI/ML Dashboard Component\r\n * Displays ML predictions, AI performance metrics, and strategy analysis\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../../../src/lib/supabase';\r\n\r\ninterface MLPrediction {\r\n  id: string;\r\n  symbol: string;\r\n  signal: 'BUY' | 'SELL' | 'HOLD';\r\n  confidence: number;\r\n  timestamp: Date;\r\n  outcome?: boolean;\r\n  pnl?: number;\r\n  price?: number;\r\n  volume?: number;\r\n  features: {\r\n    rsi?: number;\r\n    macd?: number;\r\n    bollinger_position?: number;\r\n    volume_trend?: number;\r\n    price_momentum?: number;\r\n    adx?: number;\r\n    ema_diff?: number;\r\n  };\r\n}\r\n\r\ninterface AIPerformance {\r\n  strategy: string;\r\n  accuracy: number;\r\n  total_trades: number;\r\n  profitable_trades: number;\r\n  avg_profit: number;\r\n  sharpe_ratio: number;\r\n  win_rate: number;\r\n}\r\n\r\nconst AiMlDashboard: React.FC = () => {\r\n  const [mlPredictions, setMLPredictions] = useState<MLPrediction[]>([]);\r\n  const [aiPerformance, setAIPerformance] = useState<AIPerformance[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isInitializing, setIsInitializing] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Fetch ML predictions\r\n  const fetchMLPredictions = async () => {\r\n    try {\r\n      const { data: { session } } = await supabase.auth.getSession();\r\n      if (!session) {\r\n        setError('Please log in to view AI/ML dashboard');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(\r\n        `${import.meta.env.VITE_PUBLIC_SUPABASE_URL}/functions/v1/ml-predictions?action=get_predictions&limit=50`,\r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${session.access_token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch ML predictions');\r\n      }\r\n\r\n      const result = await response.json();\r\n      if (result.success && result.predictions) {\r\n        const formattedPredictions = result.predictions.map((p: any) => ({\r\n          id: p.id,\r\n          symbol: p.symbol,\r\n          signal: p.prediction.toUpperCase() as 'BUY' | 'SELL' | 'HOLD',\r\n          confidence: p.confidence,\r\n          timestamp: new Date(p.timestamp),\r\n          outcome: p.actual_outcome ? p.actual_outcome === p.prediction : undefined,\r\n          pnl: p.pnl,\r\n          price: p.price,\r\n          volume: p.volume,\r\n          features: p.features || {}\r\n        }));\r\n        setMLPredictions(formattedPredictions);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching ML predictions:', error);\r\n      setError('Failed to load predictions');\r\n    }\r\n  };\r\n\r\n  // Fetch AI performance metrics\r\n  const fetchAIPerformance = async () => {\r\n    try {\r\n      const { data: { session } } = await supabase.auth.getSession();\r\n      if (!session) return;\r\n\r\n      const response = await fetch(\r\n        `${import.meta.env.VITE_PUBLIC_SUPABASE_URL}/functions/v1/ml-predictions?action=get_performance`,\r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${session.access_token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch AI performance');\r\n      }\r\n\r\n      const result = await response.json();\r\n      if (result.success && result.performance) {\r\n        setAIPerformance(result.performance);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching AI performance:', error);\r\n    }\r\n  };\r\n\r\n  // Initialize AI performance data\r\n  const initializePerformanceData = async () => {\r\n    setIsInitializing(true);\r\n    try {\r\n      const { data: { session } } = await supabase.auth.getSession();\r\n      if (!session) return;\r\n\r\n      const response = await fetch(\r\n        `${import.meta.env.VITE_PUBLIC_SUPABASE_URL}/functions/v1/ml-predictions?action=initialize_performance`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${session.access_token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({})\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        await fetchAIPerformance();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error initializing performance data:', error);\r\n    } finally {\r\n      setIsInitializing(false);\r\n    }\r\n  };\r\n\r\n  // Generate sample ML prediction\r\n  const generateSamplePrediction = async () => {\r\n    try {\r\n      const { data: { session } } = await supabase.auth.getSession();\r\n      if (!session) return;\r\n\r\n      const symbols = ['BTCUSDT', 'ETHUSDT', 'BNBUSDT', 'SOLUSDT', 'XRPUSDT'];\r\n      const randomSymbol = symbols[Math.floor(Math.random() * symbols.length)];\r\n\r\n      const response = await fetch(\r\n        `${import.meta.env.VITE_PUBLIC_SUPABASE_URL}/functions/v1/ml-predictions?action=predict`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${session.access_token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            symbol: randomSymbol,\r\n            bot_id: null\r\n          })\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        await fetchMLPredictions();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error generating prediction:', error);\r\n    }\r\n  };\r\n\r\n  // Calculate metrics from performance data\r\n  const calculateMetrics = () => {\r\n    if (aiPerformance.length === 0) {\r\n      return {\r\n        accuracy: 0,\r\n        precision: 0,\r\n        recall: 0,\r\n        f1Score: 0,\r\n        liveWinRate: 0,\r\n        avgPnL: 0,\r\n        profitFactor: 1.0,\r\n        sharpeRatio: 0\r\n      };\r\n    }\r\n\r\n    const totalTrades = aiPerformance.reduce((sum, s) => sum + s.total_trades, 0);\r\n    const profitableTrades = aiPerformance.reduce((sum, s) => sum + s.profitable_trades, 0);\r\n    const avgAccuracy = aiPerformance.reduce((sum, s) => sum + s.accuracy, 0) / aiPerformance.length;\r\n    const avgSharpe = aiPerformance.reduce((sum, s) => sum + s.sharpe_ratio, 0) / aiPerformance.length;\r\n    const winRate = totalTrades > 0 ? profitableTrades / totalTrades : 0;\r\n    const avgProfit = aiPerformance.reduce((sum, s) => sum + s.avg_profit, 0) / aiPerformance.length;\r\n\r\n    return {\r\n      accuracy: avgAccuracy,\r\n      precision: winRate * 0.95, // Estimated\r\n      recall: winRate * 0.92, // Estimated\r\n      f1Score: winRate * 0.93, // Harmonic mean estimate\r\n      liveWinRate: winRate,\r\n      avgPnL: avgProfit * 1000, // Convert to dollar amount\r\n      profitFactor: winRate > 0 ? (winRate / (1 - winRate)) * 1.2 : 1.0,\r\n      sharpeRatio: avgSharpe\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      setIsLoading(true);\r\n      await Promise.all([fetchMLPredictions(), fetchAIPerformance()]);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    loadData();\r\n    \r\n    // Refresh data every 30 seconds\r\n    const interval = setInterval(() => {\r\n      fetchMLPredictions();\r\n      fetchAIPerformance();\r\n    }, 30000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-16 w-16 border-b-4 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600 font-medium\">Loading AI/ML Dashboard...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\r\n        <h3 className=\"text-lg font-semibold text-red-900 mb-2\">‚ö†Ô∏è Error</h3>\r\n        <p className=\"text-red-700\">{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const metrics = calculateMetrics();\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header Section */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">AI/ML Trading Dashboard</h2>\r\n          <p className=\"text-gray-600\">Machine Learning Insights & Bot Performance</p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-3\">\r\n          <select className=\"px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n            <option>Last 24 Hours</option>\r\n            <option>Last 7 Days</option>\r\n            <option>Last 30 Days</option>\r\n          </select>\r\n          <button\r\n            onClick={generateSamplePrediction}\r\n            className=\"bg-purple-600 text-white px-4 py-2 rounded-lg font-semibold hover:bg-purple-700 transition-colors flex items-center space-x-2\"\r\n          >\r\n            <span>üé≤</span>\r\n            <span>Generate Prediction</span>\r\n          </button>\r\n          {aiPerformance.length === 0 && (\r\n            <button\r\n              onClick={initializePerformanceData}\r\n              disabled={isInitializing}\r\n              className=\"bg-green-600 text-white px-4 py-2 rounded-lg font-semibold hover:bg-green-700 transition-colors disabled:opacity-50\"\r\n            >\r\n              {isInitializing ? 'Initializing...' : 'Initialize Data'}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Performance Metrics - 4 Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        {/* Model Accuracy */}\r\n        <div className=\"bg-white rounded-lg shadow p-6 border-l-4 border-green-500\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <h3 className=\"text-sm font-medium text-gray-600\">Model Accuracy</h3>\r\n            <div className=\"text-green-500\">\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-3xl font-bold text-gray-900\">{(metrics.accuracy * 100).toFixed(1)}%</p>\r\n          <p className=\"text-xs text-gray-500 mt-1\">Overall AI Performance</p>\r\n        </div>\r\n\r\n        {/* Active Models */}\r\n        <div className=\"bg-white rounded-lg shadow p-6 border-l-4 border-blue-500\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <h3 className=\"text-sm font-medium text-gray-600\">Active Models</h3>\r\n            <div className=\"text-blue-500\">\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-3xl font-bold text-gray-900\">{aiPerformance.length}</p>\r\n          <p className=\"text-xs text-gray-500 mt-1\">ML Strategies Running</p>\r\n        </div>\r\n\r\n        {/* Predictions Today */}\r\n        <div className=\"bg-white rounded-lg shadow p-6 border-l-4 border-purple-500\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <h3 className=\"text-sm font-medium text-gray-600\">Predictions Today</h3>\r\n            <div className=\"text-purple-500\">\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-3xl font-bold text-gray-900\">{mlPredictions.length}</p>\r\n          <p className=\"text-xs text-gray-500 mt-1\">AI Decisions Made</p>\r\n        </div>\r\n\r\n        {/* Avg Confidence */}\r\n        <div className=\"bg-white rounded-lg shadow p-6 border-l-4 border-orange-500\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <h3 className=\"text-sm font-medium text-gray-600\">Avg Confidence</h3>\r\n            <div className=\"text-orange-500\">\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-3xl font-bold text-gray-900\">\r\n            {mlPredictions.length > 0 \r\n              ? (mlPredictions.reduce((sum, p) => sum + p.confidence, 0) / mlPredictions.length * 100).toFixed(1)\r\n              : '0.0'}%\r\n          </p>\r\n          <p className=\"text-xs text-gray-500 mt-1\">Prediction Confidence</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Bot ML Status Table */}\r\n      {aiPerformance.length > 0 && (\r\n        <div className=\"bg-white rounded-lg shadow\">\r\n          <div className=\"px-6 py-4 border-b border-gray-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Bot ML Status</h3>\r\n              <div className=\"flex space-x-4 text-sm\">\r\n                <span className=\"text-green-600 font-medium\">{aiPerformance.length} Enabled</span>\r\n                <span className=\"text-gray-500\">0 Disabled</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Bot Name</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Symbol</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Strategy</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ML Status</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ML Trades</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Success Rate</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {aiPerformance.map((strategy, index) => (\r\n                  <tr key={strategy.strategy} className=\"hover:bg-gray-50\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                      PABLO {strategy.strategy.toUpperCase().replace('_', ' ')}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {['BNBUSDT', 'BTCUSDT', 'ETHUSDT', 'SOLUSDT'][index % 4]}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n                      {strategy.strategy}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\r\n                        ‚óè ENABLED\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {strategy.total_trades}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-gray-900\">\r\n                      {(strategy.win_rate * 100).toFixed(1)}%\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                      <button className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800 hover:bg-red-200\">\r\n                        ‚óè Disable ML\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* ML Predictions Confidence Chart */}\r\n      {mlPredictions.length > 0 && (\r\n        <div className=\"bg-white rounded-lg shadow p-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">ML Predictions Confidence</h3>\r\n          <div className=\"h-64 flex items-center justify-center text-gray-400\">\r\n            {/* Chart placeholder - showing confidence trend */}\r\n            <div className=\"text-center\">\r\n              <p className=\"text-sm\">Confidence trend over time</p>\r\n              <p className=\"text-xs mt-2\">Average: {mlPredictions.length > 0 \r\n                ? (mlPredictions.reduce((sum, p) => sum + p.confidence, 0) / mlPredictions.length * 100).toFixed(1)\r\n                : '0.0'}%</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* AI Strategy Performance Chart */}\r\n      {aiPerformance.length > 0 && (\r\n        <div className=\"bg-white rounded-lg shadow p-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">AI Strategy Performance</h3>\r\n          <div className=\"grid grid-cols-4 gap-4\">\r\n            {aiPerformance.map((strategy) => (\r\n              <div key={strategy.strategy} className=\"text-center\">\r\n                <div className=\"flex flex-col items-center space-y-2\">\r\n                  <div className=\"w-full bg-gray-100 rounded-t\">\r\n                    <div \r\n                      className=\"bg-purple-500 rounded-t transition-all\"\r\n                      style={{ height: `${strategy.accuracy * 200}px` }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"w-full bg-gray-100 rounded-t\">\r\n                    <div \r\n                      className=\"bg-green-500 rounded-t transition-all\"\r\n                      style={{ height: `${strategy.win_rate * 200}px` }}\r\n                    ></div>\r\n                  </div>\r\n                  <p className=\"text-xs font-medium text-gray-700\">\r\n                    {strategy.strategy.replace('_', ' ')}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Recent AI Predictions */}\r\n      <div className=\"bg-white rounded-lg shadow\">\r\n        <div className=\"px-6 py-4 border-b border-gray-200 flex items-center justify-between\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900\">Recent AI Predictions</h3>\r\n          <button \r\n            onClick={() => {\r\n              fetchMLPredictions();\r\n              fetchAIPerformance();\r\n            }}\r\n            className=\"px-4 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700\"\r\n          >\r\n            Refresh\r\n          </button>\r\n        </div>\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Symbol</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Prediction</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Confidence</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">RSI</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">MACD</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ADX</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Time</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {mlPredictions.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan={7} className=\"px-6 py-8 text-center text-gray-500\">\r\n                    No predictions yet. Click \"Generate Prediction\" to create AI predictions.\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                mlPredictions.map((prediction) => (\r\n                  <tr key={prediction.id} className=\"hover:bg-gray-50\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                      {prediction.symbol}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className={`inline-flex px-3 py-1 text-xs font-semibold rounded-full ${\r\n                        prediction.signal === 'BUY' ? 'bg-green-100 text-green-800' :\r\n                        prediction.signal === 'SELL' ? 'bg-red-100 text-red-800' :\r\n                        'bg-gray-100 text-gray-800'\r\n                      }`}>\r\n                        {prediction.signal}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {(prediction.confidence * 100).toFixed(1)}%\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {prediction.features.rsi?.toFixed(2) || 'N/A'}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {prediction.features.macd?.toFixed(4) || 'N/A'}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {prediction.features.adx?.toFixed(2) || 'N/A'}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                      {new Date(prediction.timestamp).toLocaleTimeString()}\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AiMlDashboard;\r\n"],"names":["AiMlDashboard","mlPredictions","setMLPredictions","useState","aiPerformance","setAIPerformance","isLoading","setIsLoading","isInitializing","setIsInitializing","error","setError","fetchMLPredictions","session","supabase","response","result","formattedPredictions","p","fetchAIPerformance","initializePerformanceData","generateSamplePrediction","symbols","randomSymbol","calculateMetrics","totalTrades","sum","s","profitableTrades","avgAccuracy","avgSharpe","winRate","avgProfit","useEffect","interval","jsxs","jsx","metrics","strategy","index","prediction","_a","_b","_c"],"mappings":"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"}