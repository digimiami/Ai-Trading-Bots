{"version":3,"file":"page-dfa4cecb.js","sources":["../../src/hooks/useAdmin.ts","../../src/pages/admin/page.tsx"],"sourcesContent":["\nimport { useState } from 'react';\nimport { supabase } from '../lib/supabase';\n\ninterface User {\n  id: string;\n  email: string;\n  role: string;\n  created_at: string;\n  last_sign_in_at: string;\n}\n\ninterface InvitationCode {\n  id: string;\n  code: string;\n  email: string;\n  used: boolean;\n  created_at: string;\n  expires_at: string;\n}\n\ninterface TradingBot {\n  id: string;\n  name: string;\n  status: string;\n  total_trades: number;\n  win_rate: number;\n  pnl: number;\n  users: { email: string };\n}\n\ninterface SystemStats {\n  totalUsers: number;\n  totalBots: number;\n  totalTrades: number;\n  totalAlerts: number;\n  platformPnL: number;\n  recentTrades: number;\n}\n\ninterface TradingAnalytics {\n  totalTrades: number;\n  filledTrades: number;\n  failedTrades: number;\n  pendingTrades: number;\n  totalPnL: number;\n  successRate: number;\n  exchangeStats: Record<string, { count: number; pnl: number }>;\n  trades: any[];\n}\n\ninterface FinancialOverview {\n  totalVolume: number;\n  totalFees: number;\n  totalPnL: number;\n  dailyPnL: Record<string, number>;\n  netProfit: number;\n}\n\ninterface UserActivity {\n  id: string;\n  email: string;\n  created_at: string;\n  last_sign_in_at: string;\n  trading_bots: any[];\n  trades: any[];\n}\n\ninterface RiskMetrics {\n  largeTrades: any[];\n  failedTrades: any[];\n  riskScore: number;\n}\n\nexport function useAdmin() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const callAdminFunction = async (action: string, params: any = {}) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const { data, error } = await supabase.functions.invoke('admin-management-enhanced', {\n        body: { action, ...params }\n      });\n\n      if (error) throw error;\n      return data;\n    } catch (err: any) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Existing user management functions\n  const getUsers = async (): Promise<User[]> => {\n    const data = await callAdminFunction('getUsers');\n    return data.users || [];\n  };\n\n  const createUser = async (email: string, password: string, role: string = 'user') => {\n    return await callAdminFunction('createUser', { email, password, role });\n  };\n\n  const deleteUser = async (userId: string) => {\n    return await callAdminFunction('deleteUser', { userId });\n  };\n\n  const getInvitationCodes = async (): Promise<InvitationCode[]> => {\n    const data = await callAdminFunction('getInvitationCodes');\n    return data.codes || [];\n  };\n\n  const generateInvitationCode = async (email: string, expiresInDays: number = 7) => {\n    return await callAdminFunction('generateInvitationCode', { email, expiresInDays });\n  };\n\n  // NEW: Trading Bot Management\n  const getAllBots = async (): Promise<TradingBot[]> => {\n    const data = await callAdminFunction('getAllBots');\n    return data.bots || [];\n  };\n\n  const adminControlBot = async (botId: string, action: string) => {\n    return await callAdminFunction('adminControlBot', { botId, action });\n  };\n\n  const getBotAnalytics = async () => {\n    const data = await callAdminFunction('getBotAnalytics');\n    return data.analytics || [];\n  };\n\n  // NEW: System Monitoring\n  const getSystemStats = async (): Promise<SystemStats> => {\n    const data = await callAdminFunction('getSystemStats');\n    return data.stats;\n  };\n\n  const getTradingAnalytics = async (period: string = '7'): Promise<TradingAnalytics> => {\n    const data = await callAdminFunction('getTradingAnalytics', { period });\n    return data.analytics;\n  };\n\n  // NEW: Financial Oversight\n  const getFinancialOverview = async (): Promise<FinancialOverview> => {\n    const data = await callAdminFunction('getFinancialOverview');\n    return data.financial;\n  };\n\n  // NEW: User Activity Monitoring\n  const getUserActivity = async (): Promise<UserActivity[]> => {\n    const data = await callAdminFunction('getUserActivity');\n    return data.userActivity || [];\n  };\n\n  // NEW: System Logs\n  const getSystemLogs = async (limit: number = 100) => {\n    const data = await callAdminFunction('getSystemLogs', { limit });\n    return data.logs || [];\n  };\n\n  // NEW: Risk Monitoring\n  const getRiskMetrics = async (): Promise<RiskMetrics> => {\n    const data = await callAdminFunction('getRiskMetrics');\n    return data.risk;\n  };\n\n  // NEW: Data Export\n  const exportData = async (type: string, userId?: string) => {\n    const data = await callAdminFunction('exportData', { type, userId });\n    return data.data;\n  };\n\n  return {\n    loading,\n    error,\n    // User Management\n    getUsers,\n    createUser,\n    deleteUser,\n    getInvitationCodes,\n    generateInvitationCode,\n    // Trading Bot Management\n    getAllBots,\n    adminControlBot,\n    getBotAnalytics,\n    // System Monitoring\n    getSystemStats,\n    getTradingAnalytics,\n    // Financial Oversight\n    getFinancialOverview,\n    // User Activity\n    getUserActivity,\n    // System Administration\n    getSystemLogs,\n    // Risk & Security\n    getRiskMetrics,\n    exportData\n  };\n}\n","\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../../components/feature/Header';\nimport Navigation from '../../components/feature/Navigation';\nimport Button from '../../components/base/Button';\nimport Card from '../../components/base/Card';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useAdmin } from '../../hooks/useAdmin';\n\ninterface User {\n  id: string;\n  email: string;\n  role: string;\n  created_at: string;\n  last_sign_in_at: string;\n}\n\ninterface InvitationCode {\n  id: string;\n  code: string;\n  email: string;\n  used: boolean;\n  created_at: string;\n  expires_at: string;\n}\n\ninterface TradingBot {\n  id: string;\n  name: string;\n  status: string;\n  total_trades: number;\n  win_rate: number;\n  pnl: number;\n  users: { email: string };\n}\n\ninterface SystemStats {\n  totalUsers: number;\n  totalBots: number;\n  totalTrades: number;\n  totalAlerts: number;\n  platformPnL: number;\n  recentTrades: number;\n}\n\ninterface TradingAnalytics {\n  totalTrades: number;\n  filledTrades: number;\n  failedTrades: number;\n  pendingTrades: number;\n  totalPnL: number;\n  successRate: number;\n  exchangeStats: Record<string, { count: number; pnl: number }>;\n  trades: any[];\n}\n\ninterface FinancialOverview {\n  totalVolume: number;\n  totalFees: number;\n  totalPnL: number;\n  dailyPnL: Record<string, number>;\n  netProfit: number;\n}\n\ninterface UserActivity {\n  id: string;\n  email: string;\n  created_at: string;\n  last_sign_in_at: string;\n  trading_bots: any[];\n  trades: any[];\n}\n\ninterface RiskMetrics {\n  largeTrades: any[];\n  failedTrades: any[];\n  riskScore: number;\n}\n\nexport default function AdminPage() {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const { \n    createUser, \n    generateInvitationCode, \n    getUsers, \n    getInvitationCodes,\n    getAllBots,\n    adminControlBot,\n    getBotAnalytics,\n    getSystemStats,\n    getTradingAnalytics,\n    getFinancialOverview,\n    getUserActivity,\n    getSystemLogs,\n    getRiskMetrics,\n    exportData\n  } = useAdmin();\n  \n  const [activeTab, setActiveTab] = useState('overview');\n  const [users, setUsers] = useState<User[]>([]);\n  const [invitationCodes, setInvitationCodes] = useState<InvitationCode[]>([]);\n  const [allBots, setAllBots] = useState<TradingBot[]>([]);\n  const [systemStats, setSystemStats] = useState<SystemStats | null>(null);\n  const [tradingAnalytics, setTradingAnalytics] = useState<TradingAnalytics | null>(null);\n  const [financialOverview, setFinancialOverview] = useState<FinancialOverview | null>(null);\n  const [userActivity, setUserActivity] = useState<UserActivity[]>([]);\n  const [systemLogs, setSystemLogs] = useState<any[]>([]);\n  const [riskMetrics, setRiskMetrics] = useState<RiskMetrics | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [showCreateUser, setShowCreateUser] = useState(false);\n  const [showCreateInvitation, setShowCreateInvitation] = useState(false);\n  \n  const [newUser, setNewUser] = useState({\n    email: '',\n    password: '',\n    role: 'user'\n  });\n  \n  const [newInvitation, setNewInvitation] = useState({\n    email: '',\n    expiresInDays: 7\n  });\n\n  useEffect(() => {\n    console.log('🔧 Admin page loaded - User:', user?.email, 'Role:', user?.role);\n    if (user?.role !== 'admin') {\n      console.log('❌ User is not admin, redirecting to home');\n      navigate('/');\n      return;\n    }\n    console.log('✅ User is admin, loading admin data...');\n    loadData();\n  }, [user, navigate]);\n\n  const loadData = async () => {\n    try {\n      console.log('🔄 Loading admin data...');\n      setLoading(true);\n      const [\n        usersData, \n        codesData, \n        botsData, \n        statsData, \n        analyticsData, \n        financialData, \n        activityData, \n        logsData, \n        riskData\n      ] = await Promise.all([\n        getUsers(),\n        getInvitationCodes(),\n        getAllBots(),\n        getSystemStats(),\n        getTradingAnalytics(),\n        getFinancialOverview(),\n        getUserActivity(),\n        getSystemLogs(),\n        getRiskMetrics()\n      ]);\n      \n      console.log('✅ Admin data loaded successfully');\n      \n      setUsers(usersData || []);\n      setInvitationCodes(codesData || []);\n      setAllBots(botsData || []);\n      setSystemStats(statsData);\n      setTradingAnalytics(analyticsData);\n      setFinancialOverview(financialData);\n      setUserActivity(activityData || []);\n      setSystemLogs(logsData || []);\n      setRiskMetrics(riskData);\n    } catch (error) {\n      console.error('❌ Error loading admin data:', error);\n      console.error('❌ Error details:', error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateUser = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      await createUser(newUser.email, newUser.password, newUser.role);\n      setNewUser({ email: '', password: '', role: 'user' });\n      setShowCreateUser(false);\n      loadData();\n    } catch (error) {\n      console.error('Error creating user:', error);\n    }\n  };\n\n  const handleCreateInvitation = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      await generateInvitationCode(newInvitation.email, newInvitation.expiresInDays);\n      setNewInvitation({ email: '', expiresInDays: 7 });\n      setShowCreateInvitation(false);\n      loadData();\n    } catch (error) {\n      console.error('Error creating invitation:', error);\n    }\n  };\n\n  const handleBotControl = async (botId: string, action: string) => {\n    try {\n      await adminControlBot(botId, action);\n      loadData();\n    } catch (error) {\n      console.error('Error controlling bot:', error);\n    }\n  };\n\n  const handleExportData = async (type: string, userId?: string) => {\n    try {\n      const data = await exportData(type, userId);\n      const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${type}_export_${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error exporting data:', error);\n    }\n  };\n\n  if (user?.role !== 'admin') {\n    return null;\n  }\n\n  const tabs = [\n    { id: 'overview', label: 'Overview', icon: 'ri-dashboard-line' },\n    { id: 'users', label: 'Users', icon: 'ri-user-line' },\n    { id: 'bots', label: 'Trading Bots', icon: 'ri-robot-line' },\n    { id: 'analytics', label: 'Analytics', icon: 'ri-bar-chart-line' },\n    { id: 'financial', label: 'Financial', icon: 'ri-money-dollar-circle-line' },\n    { id: 'monitoring', label: 'Monitoring', icon: 'ri-eye-line' },\n    { id: 'security', label: 'Security', icon: 'ri-shield-check-line' },\n    { id: 'system', label: 'System', icon: 'ri-settings-line' }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header \n        title=\"Admin Panel\"\n        subtitle=\"Complete System Management & Control\"\n      />\n      \n      <div className=\"pt-20 pb-20 px-4\">\n        {/* Tab Navigation */}\n        <div className=\"mb-6\">\n          <div className=\"flex flex-wrap gap-2\">\n            {tabs.map((tab) => (\n              <Button\n                key={tab.id}\n                variant={activeTab === tab.id ? 'primary' : 'secondary'}\n                onClick={() => setActiveTab(tab.id)}\n                className=\"flex items-center gap-2\"\n              >\n                <i className={tab.icon}></i>\n                {tab.label}\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        {/* Overview Tab */}\n        {activeTab === 'overview' && (\n          <div className=\"space-y-6\">\n            {/* Quick Stats */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <Card className=\"text-center p-4\">\n                <div className=\"text-2xl font-bold text-blue-600\">{systemStats?.totalUsers || 0}</div>\n                <div className=\"text-sm text-gray-500\">Total Users</div>\n              </Card>\n              <Card className=\"text-center p-4\">\n                <div className=\"text-2xl font-bold text-green-600\">{systemStats?.totalBots || 0}</div>\n                <div className=\"text-sm text-gray-500\">Active Bots</div>\n              </Card>\n              <Card className=\"text-center p-4\">\n                <div className=\"text-2xl font-bold text-purple-600\">{systemStats?.totalTrades || 0}</div>\n                <div className=\"text-sm text-gray-500\">Total Trades</div>\n              </Card>\n              <Card className=\"text-center p-4\">\n                <div className=\"text-2xl font-bold text-orange-600\">${systemStats?.platformPnL?.toFixed(2) || '0.00'}</div>\n                <div className=\"text-sm text-gray-500\">Platform PnL</div>\n              </Card>\n            </div>\n\n            {/* Quick Actions */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <Button\n                variant=\"primary\"\n                onClick={() => setShowCreateUser(true)}\n                className=\"h-16 flex flex-col items-center justify-center\"\n              >\n                <i className=\"ri-user-add-line text-2xl mb-2\"></i>\n                Create User\n              </Button>\n              <Button\n                variant=\"secondary\"\n                onClick={() => setShowCreateInvitation(true)}\n                className=\"h-16 flex flex-col items-center justify-center\"\n              >\n                <i className=\"ri-mail-send-line text-2xl mb-2\"></i>\n                Send Invitation\n              </Button>\n              <Button\n                variant=\"secondary\"\n                onClick={() => handleExportData('all_trades')}\n                className=\"h-16 flex flex-col items-center justify-center\"\n              >\n                <i className=\"ri-download-line text-2xl mb-2\"></i>\n                Export Data\n              </Button>\n              <Button\n                variant=\"secondary\"\n                onClick={() => setActiveTab('monitoring')}\n                className=\"h-16 flex flex-col items-center justify-center\"\n              >\n                <i className=\"ri-eye-line text-2xl mb-2\"></i>\n                View Logs\n              </Button>\n            </div>\n\n            {/* Recent Activity */}\n            <Card className=\"p-4\">\n              <h3 className=\"text-lg font-semibold mb-4\">Recent Trading Activity</h3>\n              {loading ? (\n                <div className=\"text-center py-8\">\n                  <i className=\"ri-loader-4-line animate-spin text-2xl text-gray-400\"></i>\n                </div>\n              ) : (\n                <div className=\"space-y-3\">\n                  {tradingAnalytics?.trades?.slice(0, 10).map((trade, index) => (\n                    <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                      <div>\n                        <div className=\"font-medium\">{trade.symbol} - {trade.side}</div>\n                        <div className=\"text-sm text-gray-500\">\n                          {trade.exchange} • {new Date(trade.created_at).toLocaleString()}\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className={`font-medium ${trade.pnl >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                          ${trade.pnl?.toFixed(2) || '0.00'}\n                        </div>\n                        <span className={`px-2 py-1 rounded-full text-xs ${\n                          trade.status === 'filled' ? 'bg-green-100 text-green-800' :\n                          trade.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                          'bg-red-100 text-red-800'\n                        }`}>\n                          {trade.status}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </Card>\n          </div>\n        )}\n\n        {/* Users Tab */}\n        {activeTab === 'users' && (\n          <div className=\"space-y-6\">\n            <Card className=\"p-4\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"text-lg font-semibold\">User Management</h3>\n                <Button onClick={() => setShowCreateUser(true)}>\n                  <i className=\"ri-user-add-line mr-2\"></i>\n                  Create User\n                </Button>\n              </div>\n              {loading ? (\n                <div className=\"text-center py-8\">\n                  <i className=\"ri-loader-4-line animate-spin text-2xl text-gray-400\"></i>\n                </div>\n              ) : (\n                <div className=\"space-y-3\">\n                  {users.map((user) => (\n                    <div key={user.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                      <div>\n                        <div className=\"font-medium\">{user.email}</div>\n                        <div className=\"text-sm text-gray-500\">\n                          Role: {user.role} • Created: {new Date(user.created_at).toLocaleDateString()}\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <span className={`px-2 py-1 rounded-full text-xs ${\n                          user.role === 'admin' ? 'bg-red-100 text-red-800' : 'bg-blue-100 text-blue-800'\n                        }`}>\n                          {user.role}\n                        </span>\n                        <div className={`w-2 h-2 rounded-full ${\n                          user.last_sign_in_at ? 'bg-green-500' : 'bg-gray-400'\n                        }`}></div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </Card>\n\n            <Card className=\"p-4\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"text-lg font-semibold\">Invitation Codes</h3>\n                <Button onClick={() => setShowCreateInvitation(true)}>\n                  <i className=\"ri-mail-send-line mr-2\"></i>\n                  Create Invitation\n                </Button>\n              </div>\n              <div className=\"space-y-3\">\n                {invitationCodes.map((code) => (\n                  <div key={code.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <div>\n                      <div className=\"font-mono text-sm\">{code.code}</div>\n                      <div className=\"text-sm text-gray-500\">\n                        For: {code.email} • Expires: {new Date(code.expires_at).toLocaleDateString()}\n                      </div>\n                    </div>\n                    <span className={`px-2 py-1 rounded-full text-xs ${\n                      code.used ? 'bg-gray-100 text-gray-800' : 'bg-green-100 text-green-800'\n                    }`}>\n                      {code.used ? 'Used' : 'Active'}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </Card>\n          </div>\n        )}\n\n        {/* Trading Bots Tab */}\n        {activeTab === 'bots' && (\n          <div className=\"space-y-6\">\n            <Card className=\"p-4\">\n              <h3 className=\"text-lg font-semibold mb-4\">All Trading Bots</h3>\n              {loading ? (\n                <div className=\"text-center py-8\">\n                  <i className=\"ri-loader-4-line animate-spin text-2xl text-gray-400\"></i>\n                </div>\n              ) : (\n                <div className=\"space-y-3\">\n                  {allBots.map((bot) => (\n                    <div key={bot.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                      <div>\n                        <div className=\"font-medium\">{bot.name}</div>\n                        <div className=\"text-sm text-gray-500\">\n                          Owner: {bot.users.email} • Trades: {bot.total_trades} • Win Rate: {bot.win_rate?.toFixed(1)}%\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <span className={`px-2 py-1 rounded-full text-xs ${\n                          bot.status === 'running' ? 'bg-green-100 text-green-800' :\n                          bot.status === 'paused' ? 'bg-yellow-100 text-yellow-800' :\n                          'bg-red-100 text-red-800'\n                        }`}>\n                          {bot.status}\n                        </span>\n                        <div className=\"flex space-x-1\">\n                          <Button\n                            size=\"sm\"\n                            variant=\"secondary\"\n                            onClick={() => handleBotControl(bot.id, 'running')}\n                            disabled={bot.status === 'running'}\n                          >\n                            <i className=\"ri-play-line\"></i>\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"secondary\"\n                            onClick={() => handleBotControl(bot.id, 'paused')}\n                            disabled={bot.status === 'paused'}\n                          >\n                            <i className=\"ri-pause-line\"></i>\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"secondary\"\n                            onClick={() => handleBotControl(bot.id, 'stopped')}\n                            disabled={bot.status === 'stopped'}\n                          >\n                            <i className=\"ri-stop-line\"></i>\n                          </Button>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </Card>\n          </div>\n        )}\n\n        {/* Analytics Tab */}\n        {activeTab === 'analytics' && (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <Card className=\"text-center p-4\">\n                <div className=\"text-2xl font-bold text-blue-600\">{tradingAnalytics?.totalTrades || 0}</div>\n                <div className=\"text-sm text-gray-500\">Total Trades</div>\n              </Card>\n              <Card className=\"text-center p-4\">\n                <div className=\"text-2xl font-bold text-green-600\">{tradingAnalytics?.filledTrades || 0}</div>\n                <div className=\"text-sm text-gray-500\">Successful</div>\n              </Card>\n              <Card className=\"text-center p-4\">\n                <div className=\"text-2xl font-bold text-red-600\">{tradingAnalytics?.failedTrades || 0}</div>\n                <div className=\"text-sm text-gray-500\">Failed</div>\n              </Card>\n              <Card className=\"text-center p-4\">\n                <div className=\"text-2xl font-bold text-purple-600\">{tradingAnalytics?.successRate?.toFixed(1) || '0.0'}%</div>\n                <div className=\"text-sm text-gray-500\">Success Rate</div>\n              </Card>\n            </div>\n\n            <Card className=\"p-4\">\n              <h3 className=\"text-lg font-semibold mb-4\">Exchange Statistics</h3>\n              <div className=\"space-y-3\">\n                {Object.entries(tradingAnalytics?.exchangeStats || {}).map(([exchange, stats]) => (\n                  <div key={exchange} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <div>\n                      <div className=\"font-medium\">{exchange}</div>\n                      <div className=\"text-sm text-gray-500\">{stats.count} trades</div>\n                    </div>\n                    <div className={`font-medium ${stats.pnl >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                      ${stats.pnl.toFixed(2)}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </Card>\n          </div>\n        )}\n\n        {/* Financial Tab */}\n        {activeTab === 'financial' && (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <Card className=\"text-center p-4\">\n                <div className=\"text-2xl font-bold text-blue-600\">${financialOverview?.totalVolume?.toFixed(2) || '0.00'}</div>\n                <div className=\"text-sm text-gray-500\">Total Volume</div>\n              </Card>\n              <Card className=\"text-center p-4\">\n                <div className=\"text-2xl font-bold text-green-600\">${financialOverview?.totalPnL?.toFixed(2) || '0.00'}</div>\n                <div className=\"text-sm text-gray-500\">Total PnL</div>\n              </Card>\n              <Card className=\"text-center p-4\">\n                <div className=\"text-2xl font-bold text-red-600\">${financialOverview?.totalFees?.toFixed(2) || '0.00'}</div>\n                <div className=\"text-sm text-gray-500\">Total Fees</div>\n              </Card>\n              <Card className=\"text-center p-4\">\n                <div className=\"text-2xl font-bold text-purple-600\">${financialOverview?.netProfit?.toFixed(2) || '0.00'}</div>\n                <div className=\"text-sm text-gray-500\">Net Profit</div>\n              </Card>\n            </div>\n          </div>\n        )}\n\n        {/* Monitoring Tab */}\n        {activeTab === 'monitoring' && (\n          <div className=\"space-y-6\">\n            <Card className=\"p-4\">\n              <h3 className=\"text-lg font-semibold mb-4\">System Logs</h3>\n              <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n                {systemLogs.map((log, index) => (\n                  <div key={index} className=\"flex items-start space-x-3 p-3 bg-gray-50 rounded-lg\">\n                    <div className={`w-2 h-2 rounded-full mt-2 ${\n                      log.level === 'error' ? 'bg-red-500' :\n                      log.level === 'warning' ? 'bg-yellow-500' :\n                      log.level === 'success' ? 'bg-green-500' :\n                      'bg-blue-500'\n                    }`}></div>\n                    <div className=\"flex-1\">\n                      <div className=\"font-medium\">{log.message}</div>\n                      <div className=\"text-sm text-gray-500\">\n                        {log.category} • {new Date(log.created_at).toLocaleString()}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </Card>\n          </div>\n        )}\n\n        {/* Security Tab */}\n        {activeTab === 'security' && (\n          <div className=\"space-y-6\">\n            <Card className=\"p-4\">\n              <h3 className=\"text-lg font-semibold mb-4\">Risk Monitoring</h3>\n              <div className=\"grid grid-cols-2 gap-4 mb-4\">\n                <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-red-600\">{riskMetrics?.riskScore || 0}</div>\n                  <div className=\"text-sm text-gray-500\">Risk Score</div>\n                </div>\n                <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-orange-600\">{riskMetrics?.largeTrades?.length || 0}</div>\n                  <div className=\"text-sm text-gray-500\">Large Trades</div>\n                </div>\n              </div>\n              \n              <div className=\"space-y-3\">\n                <h4 className=\"font-medium\">Recent Failed Trades</h4>\n                {riskMetrics?.failedTrades?.slice(0, 10).map((trade, index) => (\n                  <div key={index} className=\"flex items-center justify-between p-3 bg-red-50 rounded-lg\">\n                    <div>\n                      <div className=\"font-medium\">{trade.symbol} - {trade.side}</div>\n                      <div className=\"text-sm text-gray-500\">\n                        {trade.exchange} • {new Date(trade.created_at).toLocaleString()}\n                      </div>\n                    </div>\n                    <span className=\"px-2 py-1 rounded-full text-xs bg-red-100 text-red-800\">\n                      Failed\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </Card>\n          </div>\n        )}\n\n        {/* System Tab */}\n        {activeTab === 'system' && (\n          <div className=\"space-y-6\">\n            <Card className=\"p-4\">\n              <h3 className=\"text-lg font-semibold mb-4\">Data Export</h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => handleExportData('all_trades')}\n                  className=\"h-16 flex flex-col items-center justify-center\"\n                >\n                  <i className=\"ri-download-line text-2xl mb-2\"></i>\n                  Export All Trades\n                </Button>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => handleExportData('users')}\n                  className=\"h-16 flex flex-col items-center justify-center\"\n                >\n                  <i className=\"ri-user-line text-2xl mb-2\"></i>\n                  Export Users\n                </Button>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => handleExportData('all_trades')}\n                  className=\"h-16 flex flex-col items-center justify-center\"\n                >\n                  <i className=\"ri-database-line text-2xl mb-2\"></i>\n                  Export System Data\n                </Button>\n              </div>\n            </Card>\n\n            <Card className=\"p-4\">\n              <h3 className=\"text-lg font-semibold mb-4\">System Information</h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Database Status:</span>\n                  <span className=\"text-green-600 font-medium\">Connected</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">API Status:</span>\n                  <span className=\"text-green-600 font-medium\">Operational</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Last Backup:</span>\n                  <span className=\"text-gray-800\">{new Date().toLocaleDateString()}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">System Uptime:</span>\n                  <span className=\"text-gray-800\">99.9%</span>\n                </div>\n              </div>\n            </Card>\n          </div>\n        )}\n\n        {/* Create User Modal */}\n        {showCreateUser && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <Card className=\"w-full max-w-md p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">Create New User</h3>\n              <form onSubmit={handleCreateUser} className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n                  <input\n                    type=\"email\"\n                    value={newUser.email}\n                    onChange={(e) => setNewUser({...newUser, email: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Password</label>\n                  <input\n                    type=\"password\"\n                    value={newUser.password}\n                    onChange={(e) => setNewUser({...newUser, password: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    required\n                    minLength={6}\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Role</label>\n                  <select\n                    value={newUser.role}\n                    onChange={(e) => setNewUser({...newUser, role: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"user\">User</option>\n                    <option value=\"admin\">Admin</option>\n                  </select>\n                </div>\n                <div className=\"flex space-x-3\">\n                  <Button\n                    type=\"button\"\n                    variant=\"secondary\"\n                    onClick={() => setShowCreateUser(false)}\n                    className=\"flex-1\"\n                  >\n                    Cancel\n                  </Button>\n                  <Button type=\"submit\" variant=\"primary\" className=\"flex-1\">\n                    Create User\n                  </Button>\n                </div>\n              </form>\n            </Card>\n          </div>\n        )}\n\n        {/* Create Invitation Modal */}\n        {showCreateInvitation && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <Card className=\"w-full max-w-md p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">Create Invitation Code</h3>\n              <form onSubmit={handleCreateInvitation} className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n                  <input\n                    type=\"email\"\n                    value={newInvitation.email}\n                    onChange={(e) => setNewInvitation({...newInvitation, email: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Expires in (days)</label>\n                  <select\n                    value={newInvitation.expiresInDays}\n                    onChange={(e) => setNewInvitation({...newInvitation, expiresInDays: parseInt(e.target.value)})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value={1}>1 day</option>\n                    <option value={3}>3 days</option>\n                    <option value={7}>7 days</option>\n                    <option value={14}>14 days</option>\n                    <option value={30}>30 days</option>\n                  </select>\n                </div>\n                <div className=\"flex space-x-3\">\n                  <Button\n                    type=\"button\"\n                    variant=\"secondary\"\n                    onClick={() => setShowCreateInvitation(false)}\n                    className=\"flex-1\"\n                  >\n                    Cancel\n                  </Button>\n                  <Button type=\"submit\" variant=\"primary\" className=\"flex-1\">\n                    Create Invitation\n                  </Button>\n                </div>\n              </form>\n            </Card>\n          </div>\n        )}\n      </div>\n\n      <Navigation />\n    </div>\n  );\n}\n"],"names":["useAdmin","loading","setLoading","useState","error","setError","callAdminFunction","action","params","data","supabase","err","email","password","role","userId","expiresInDays","botId","period","limit","type","AdminPage","navigate","useNavigate","user","useAuth","createUser","generateInvitationCode","getUsers","getInvitationCodes","getAllBots","adminControlBot","getBotAnalytics","getSystemStats","getTradingAnalytics","getFinancialOverview","getUserActivity","getSystemLogs","getRiskMetrics","exportData","activeTab","setActiveTab","users","setUsers","invitationCodes","setInvitationCodes","allBots","setAllBots","systemStats","setSystemStats","tradingAnalytics","setTradingAnalytics","financialOverview","setFinancialOverview","userActivity","setUserActivity","systemLogs","setSystemLogs","riskMetrics","setRiskMetrics","showCreateUser","setShowCreateUser","showCreateInvitation","setShowCreateInvitation","newUser","setNewUser","newInvitation","setNewInvitation","useEffect","loadData","usersData","codesData","botsData","statsData","analyticsData","financialData","activityData","logsData","riskData","handleCreateUser","e","handleCreateInvitation","handleBotControl","handleExportData","blob","url","a","tabs","jsxs","jsx","Header","tab","Button","Card","_a","_b","trade","index","code","bot","_c","exchange","stats","_d","_e","_f","_g","log","_h","_i","Navigation"],"mappings":"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"}