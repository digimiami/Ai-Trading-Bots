{"version":3,"file":"page-Ju567U9A.js","sources":["../../src/pages/home/components/StatsGrid.tsx","../../src/pages/home/components/ActiveBots.tsx","../../src/pages/home/components/MarketOverview.tsx","../../src/hooks/useMarketData.ts","../../src/pages/home/page.tsx"],"sourcesContent":["\ninterface StatCardProps {\n  title: string;\n  value: string;\n  change: string;\n  changeType: 'positive' | 'negative' | 'neutral';\n  icon: string;\n}\n\nfunction StatCard({ title, value, change, changeType, icon }: StatCardProps) {\n  const changeColors = {\n    positive: 'text-green-600',\n    negative: 'text-red-600',\n    neutral: 'text-gray-600'\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg p-4 shadow-sm border border-gray-200\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <p className=\"text-sm font-medium text-gray-600\">{title}</p>\n          <p className=\"text-2xl font-bold text-gray-900 mt-1\">{value}</p>\n          <p className={`text-sm mt-1 ${changeColors[changeType]}`}>\n            {change}\n          </p>\n        </div>\n        <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n          <i className={`${icon} text-blue-600 text-xl`}></i>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function StatsGrid() {\n  const stats = [\n    {\n      title: 'Total PnL',\n      value: '$12,847',\n      change: '+8.2% today',\n      changeType: 'positive' as const,\n      icon: 'ri-money-dollar-circle-line'\n    },\n    {\n      title: 'Active Bots',\n      value: '24',\n      change: '3 new today',\n      changeType: 'positive' as const,\n      icon: 'ri-robot-line'\n    },\n    {\n      title: 'Win Rate',\n      value: '73.5%',\n      change: '+2.1% this week',\n      changeType: 'positive' as const,\n      icon: 'ri-trophy-line'\n    },\n    {\n      title: 'Total Trades',\n      value: '1,247',\n      change: '89 today',\n      changeType: 'neutral' as const,\n      icon: 'ri-exchange-line'\n    }\n  ];\n\n  return (\n    <div className=\"grid grid-cols-2 gap-4\">\n      {stats.map((stat, index) => (\n        <StatCard key={index} {...stat} />\n      ))}\n    </div>\n  );\n}\n","\nimport { TradingBot } from '../../../types/trading';\nimport Card from '../../../components/base/Card';\nimport Button from '../../../components/base/Button';\nimport { useNavigate } from 'react-router-dom';\n\ninterface ActiveBotsProps {\n  bots: TradingBot[];\n}\n\nexport default function ActiveBots({ bots = [] }: ActiveBotsProps) {\n  const navigate = useNavigate();\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active':\n        return 'bg-green-100 text-green-800';\n      case 'paused':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'stopped':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getExchangeIcon = (exchange: string) => {\n    return exchange === 'bybit' ? 'ri-currency-line' : 'ri-exchange-line';\n  };\n\n  const getPnlColor = (pnl: number) => {\n    return pnl >= 0 ? 'text-green-600' : 'text-red-600';\n  };\n\n  // Ensure bots is an array before using slice\n  const safeBots = Array.isArray(bots) ? bots : [];\n\n  return (\n    <Card className=\"p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900\">Active Bots</h2>\n        <Button\n          variant=\"secondary\"\n          size=\"sm\"\n          onClick={() => navigate('/create-bot')}\n        >\n          <i className=\"ri-add-line mr-1\"></i>\n          New Bot\n        </Button>\n      </div>\n\n      <div className=\"space-y-3\">\n        {safeBots.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <i className=\"ri-robot-line text-2xl text-gray-400\"></i>\n            </div>\n            <p className=\"text-gray-500 mb-4\">No active bots yet</p>\n            <Button\n              variant=\"primary\"\n              onClick={() => navigate('/create-bot')}\n              className=\"text-sm\"\n            >\n              Create Your First Bot\n            </Button>\n          </div>\n        ) : (\n          safeBots.slice(0, 5).map((bot) => (\n            <div\n              key={bot.id}\n              className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\"\n            >\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n                  <i\n                    className={`${getExchangeIcon(bot.exchange)} text-blue-600`}\n                  ></i>\n                </div>\n                <div>\n                  <p className=\"font-medium text-gray-900\">{bot.name}</p>\n                  <p className=\"text-sm text-gray-500\">\n                    {bot.symbol} â€¢ {bot.exchange.toUpperCase()}\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"text-right\">\n                <div className=\"flex items-center space-x-2\">\n                  <span\n                    className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(\n                      bot.status\n                    )}`}\n                  >\n                    {bot.status}\n                  </span>\n                </div>\n                <p\n                  className={`text-sm font-medium mt-1 ${getPnlColor(bot.pnl || 0)}`}\n                >\n                  {(bot.pnl || 0) >= 0 ? '+' : ''}\n                  {(bot.pnl || 0).toFixed(2)}\n                </p>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </Card>\n  );\n}\n","\nimport { MarketData } from '../../../types/trading';\nimport Card from '../../../components/base/Card';\n\ninterface MarketOverviewProps {\n  marketData: MarketData[];\n}\n\nexport default function MarketOverview({ marketData }: MarketOverviewProps) {\n  const getChangeColor = (change: number) => {\n    return change >= 0 ? 'text-green-600' : 'text-red-600';\n  };\n\n  const formatPrice = (price: number) => {\n    return price.toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 4\n    });\n  };\n\n  // Add safety check for marketData\n  const safeMarketData = marketData || [];\n\n  return (\n    <Card>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Market Overview</h3>\n        <button className=\"text-blue-600 text-sm font-medium\">Refresh</button>\n      </div>\n      \n      <div className=\"space-y-3\">\n        {safeMarketData.length > 0 ? (\n          safeMarketData.slice(0, 6).map((market, index) => (\n            <div key={index} className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-8 h-8 bg-orange-100 rounded-full flex items-center justify-center\">\n                  <i className=\"ri-currency-line text-orange-600 text-sm\"></i>\n                </div>\n                <div>\n                  <p className=\"font-medium text-gray-900\">{market.symbol}</p>\n                  <p className=\"text-xs text-gray-500\">RSI: {market.rsi?.toFixed(1) || 'N/A'}</p>\n                </div>\n              </div>\n              \n              <div className=\"text-right\">\n                <p className=\"font-medium text-gray-900\">{formatPrice(market.price)}</p>\n                <p className={`text-sm ${getChangeColor(market.change24h)}`}>\n                  {market.change24h >= 0 ? '+' : ''}{market.change24h.toFixed(2)}%\n                </p>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center py-8\">\n            <div className=\"w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-3\">\n              <i className=\"ri-line-chart-line text-gray-400 text-lg\"></i>\n            </div>\n            <p className=\"text-gray-500 text-sm\">No market data available</p>\n            <p className=\"text-gray-400 text-xs mt-1\">Check your connection and try again</p>\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n}\n","\nimport { useState, useEffect } from 'react'\nimport { API_ENDPOINTS, apiCall } from '../lib/supabase'\n\nexport interface MarketData {\n  symbol: string\n  price: number\n  change24h: number\n  volume24h: number\n  high24h: number\n  low24h: number\n  timestamp: string\n  klines: Array<{\n    timestamp: string\n    open: number\n    high: number\n    low: number\n    close: number\n    volume: number\n  }>\n}\n\nexport function useMarketData(symbol: string = 'BTCUSDT', exchange: string = 'bybit') {\n  const [data, setData] = useState<MarketData | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  const fetchMarketData = async () => {\n    try {\n      setLoading(true)\n      const response = await apiCall(\n        `${API_ENDPOINTS.MARKET_DATA}?symbol=${symbol}&exchange=${exchange}`\n      )\n      setData(response)\n      setError(null)\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch market data')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchMarketData()\n    \n    // Set up polling for real-time updates\n    const interval = setInterval(fetchMarketData, 30000) // Update every 30 seconds\n    \n    return () => clearInterval(interval)\n  }, [symbol, exchange])\n\n  return {\n    data,\n    loading,\n    error,\n    refetch: fetchMarketData,\n  }\n}\n","\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../../components/feature/Header';\nimport Navigation from '../../components/feature/Navigation';\nimport Card from '../../components/base/Card';\nimport Button from '../../components/base/Button';\nimport StatsGrid from './components/StatsGrid';\nimport ActiveBots from './components/ActiveBots';\nimport MarketOverview from './components/MarketOverview';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useBots } from '../../hooks/useBots';\nimport { useMarketData } from '../../hooks/useMarketData';\n\nexport default function Home() {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const { bots, loading: botsLoading } = useBots();\n  const { marketData, loading: marketLoading } = useMarketData();\n  const [showWelcome, setShowWelcome] = useState(false);\n\n  useEffect(() => {\n    const isFirstVisit = !localStorage.getItem('welcome_shown');\n    if (isFirstVisit && user) {\n      setShowWelcome(true);\n      localStorage.setItem('welcome_shown', 'true');\n    }\n  }, [user]);\n\n  const activeBots = bots.filter(bot => bot.status === 'active');\n  const totalPnL = bots.reduce((sum, bot) => sum + (bot.totalPnL || 0), 0);\n\n  const handleCreateFirstBot = () => {\n    setShowWelcome(false);\n    navigate('/create-bot');\n  };\n\n  const handleGetStarted = () => {\n    navigate('/onboarding');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header \n        title=\"Pablo\" \n        subtitle=\"AI Trading Platform\"\n        rightAction={\n          <button\n            onClick={() => navigate('/help')}\n            className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n          >\n            <i className=\"ri-notification-line text-xl text-gray-600\"></i>\n          </button>\n        }\n      />\n      \n      <div className=\"pt-20 pb-20 px-4 space-y-6\">\n        {/* Welcome Message for New Users */}\n        {showWelcome && (\n          <Card className=\"p-6 bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-200\">\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center\">\n                <i className=\"ri-robot-line text-2xl text-blue-600\"></i>\n              </div>\n              <div className=\"flex-1\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                  Welcome to Pablo! ðŸŽ‰\n                </h3>\n                <p className=\"text-gray-600 text-sm mb-4\">\n                  Ready to start automated trading? Create your first AI trading bot and let it work 24/7 for you.\n                </p>\n                <div className=\"flex space-x-3\">\n                  <Button\n                    variant=\"primary\"\n                    onClick={handleCreateFirstBot}\n                    className=\"text-sm\"\n                  >\n                    Create First Bot\n                  </Button>\n                  <Button\n                    variant=\"secondary\"\n                    onClick={() => setShowWelcome(false)}\n                    className=\"text-sm\"\n                  >\n                    Maybe Later\n                  </Button>\n                </div>\n              </div>\n              <button\n                onClick={() => setShowWelcome(false)}\n                className=\"p-1 hover:bg-blue-100 rounded-lg transition-colors\"\n              >\n                <i className=\"ri-close-line text-gray-500\"></i>\n              </button>\n            </div>\n          </Card>\n        )}\n\n        {/* Quick Stats */}\n        <StatsGrid />\n\n        {/* Quick Actions */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Quick Actions</h3>\n          <div className=\"grid grid-cols-2 gap-3\">\n            <Button\n              variant=\"primary\"\n              onClick={() => navigate('/create-bot')}\n              className=\"h-12 flex items-center justify-center\"\n            >\n              <i className=\"ri-add-line mr-2\"></i>\n              Create Bot\n            </Button>\n            <Button\n              variant=\"secondary\"\n              onClick={() => navigate('/bots')}\n              className=\"h-12 flex items-center justify-center\"\n            >\n              <i className=\"ri-robot-line mr-2\"></i>\n              Manage Bots\n            </Button>\n          </div>\n        </Card>\n\n        {/* Active Bots */}\n        <ActiveBots />\n\n        {/* Market Overview */}\n        <MarketOverview />\n\n        {/* Recent Activity */}\n        <Card className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Recent Activity</h3>\n            <Button\n              variant=\"secondary\"\n              onClick={() => navigate('/trades')}\n              className=\"text-sm\"\n            >\n              View All\n            </Button>\n          </div>\n          \n          <div className=\"space-y-3\">\n            {[\n              {\n                type: 'trade',\n                message: 'BTC Scalper opened LONG position',\n                time: '2 minutes ago',\n                icon: 'ri-arrow-up-line',\n                color: 'green'\n              },\n              {\n                type: 'profit',\n                message: 'ETH Momentum closed with +$45.20 profit',\n                time: '15 minutes ago',\n                icon: 'ri-money-dollar-circle-line',\n                color: 'green'\n              },\n              {\n                type: 'alert',\n                message: 'SOL Trader hit stop loss at -2.5%',\n                time: '1 hour ago',\n                icon: 'ri-alert-line',\n                color: 'red'\n              },\n              {\n                type: 'bot',\n                message: 'New bot \"DOGE Swing\" created',\n                time: '2 hours ago',\n                icon: 'ri-robot-line',\n                color: 'blue'\n              }\n            ].map((activity, index) => (\n              <div key={index} className=\"flex items-center space-x-3 p-3 bg-gray-50 rounded-lg\">\n                <div className={`w-8 h-8 bg-${activity.color}-100 rounded-full flex items-center justify-center`}>\n                  <i className={`${activity.icon} text-${activity.color}-600`}></i>\n                </div>\n                <div className=\"flex-1\">\n                  <p className=\"text-sm font-medium text-gray-900\">{activity.message}</p>\n                  <p className=\"text-xs text-gray-500\">{activity.time}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Card>\n\n        {/* Performance Summary */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Today's Performance</h3>\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600\">+$156.30</div>\n              <div className=\"text-sm text-gray-600\">Total P&L</div>\n            </div>\n            <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600\">12</div>\n              <div className=\"text-sm text-gray-600\">Trades Executed</div>\n            </div>\n            <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-purple-600\">75%</div>\n              <div className=\"text-sm text-gray-600\">Win Rate</div>\n            </div>\n            <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-orange-600\">{activeBots.length}</div>\n              <div className=\"text-sm text-gray-600\">Active Bots</div>\n            </div>\n          </div>\n        </Card>\n\n        {/* Educational Content */}\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Trading Tips</h3>\n          <div className=\"space-y-3\">\n            <div className=\"p-3 bg-blue-50 rounded-lg\">\n              <div className=\"flex items-start space-x-3\">\n                <i className=\"ri-lightbulb-line text-blue-600 mt-1\"></i>\n                <div>\n                  <h4 className=\"font-medium text-blue-900 mb-1\">Risk Management</h4>\n                  <p className=\"text-sm text-blue-700\">\n                    Never risk more than 2-3% of your capital on a single trade. Use stop losses to protect your investments.\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className=\"p-3 bg-green-50 rounded-lg\">\n              <div className=\"flex items-start space-x-3\">\n                <i className=\"ri-bar-chart-line text-green-600 mt-1\"></i>\n                <div>\n                  <h4 className=\"font-medium text-green-900 mb-1\">Diversification</h4>\n                  <p className=\"text-sm text-green-700\">\n                    Spread your trades across different cryptocurrencies and strategies to reduce overall risk.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Card>\n      </div>\n\n      <Navigation />\n    </div>\n  );\n}\n"],"names":["StatCard","title","value","change","changeType","icon","changeColors","jsxs","jsx","StatsGrid","stats","stat","index","ActiveBots","bots","navigate","useNavigate","getStatusColor","status","getExchangeIcon","exchange","getPnlColor","pnl","safeBots","Card","Button","bot","MarketOverview","marketData","getChangeColor","formatPrice","price","safeMarketData","market","useMarketData","symbol","data","setData","useState","loading","setLoading","error","setError","fetchMarketData","response","apiCall","API_ENDPOINTS","err","useEffect","interval","Home","user","useAuth","useBots","showWelcome","setShowWelcome","activeBots","sum","handleCreateFirstBot","Header","activity","Navigation"],"mappings":"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"}