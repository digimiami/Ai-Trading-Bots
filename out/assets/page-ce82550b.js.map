{"version":3,"file":"page-ce82550b.js","sources":["../../src/pages/auth/page.tsx"],"sourcesContent":["\nimport { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useAuth } from '../../hooks/useAuth'\nimport { Button } from '../../components/base/Button'\nimport { Card } from '../../components/base/Card'\nimport { supabase } from '../../lib/supabase'\n\nexport default function AuthPage() {\n  const [isLogin, setIsLogin] = useState(true)\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [inviteCode, setInviteCode] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [inviteValid, setInviteValid] = useState<boolean | null>(null)\n  const [showFixAuth, setShowFixAuth] = useState(false)\n  \n  const navigate = useNavigate()\n  const { user, loading: authLoading, signIn, signUp } = useAuth()\n\n  // Redirect authenticated users to home page\n  useEffect(() => {\n    if (!authLoading && user) {\n      navigate('/')\n    }\n  }, [user, authLoading, navigate])\n\n  // Check for invitation code in URL\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search)\n    const invite = urlParams.get('invite')\n    if (invite) {\n      setInviteCode(invite)\n      setIsLogin(false)\n      validateInviteCode(invite)\n    }\n  }, [])\n\n  // Show loading while checking authentication\n  if (authLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <Card title=\"Loading...\">\n          <div className=\"text-center\">\n            <p className=\"text-gray-600\">Checking authentication...</p>\n          </div>\n        </Card>\n      </div>\n    )\n  }\n\n  const validateInviteCode = async (code: string) => {\n    try {\n      const { data: { session } } = await supabase.auth.getSession()\n      const response = await fetch(`${supabase.supabaseUrl}/functions/v1/invitation-management?action=validate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${session?.access_token || ''}`\n        },\n        body: JSON.stringify({ code })\n      })\n      \n      const result = await response.json()\n      setInviteValid(result.valid)\n      \n      if (result.valid && result.invitation.email) {\n        setEmail(result.invitation.email)\n      }\n    } catch (err) {\n      setInviteValid(false)\n    }\n  }\n\n  const handleFixAuth = async () => {\n    setLoading(true)\n    setError(null)\n\n    try {\n      const response = await fetch(`${supabase.supabaseUrl}/functions/v1/fix-auth-final`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: 'digimiami@gmail.com',\n          password: 'lagina123'\n        })\n      })\n\n      const result = await response.json()\n      \n      if (result.success) {\n        setError(null)\n        alert('Admin account fixed! You can now login with: digimiami@gmail.com / lagina123')\n        setEmail('digimiami@gmail.com')\n        setPassword('lagina123')\n        setShowFixAuth(false)\n      } else {\n        setError(result.error || 'Failed to fix admin account')\n      }\n    } catch (err) {\n      setError('Failed to fix admin account')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLoading(true)\n    setError(null)\n\n    try {\n      let result\n      \n      if (isLogin) {\n        result = await signIn(email, password)\n      } else {\n        result = await signUp(email, password)\n        \n        // If signup successful and there's an invite code, mark it as used\n        if (!result.error && inviteCode) {\n          try {\n            const { data: { session } } = await supabase.auth.getSession()\n            await fetch(`${supabase.supabaseUrl}/functions/v1/invitation-management?action=use`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${session?.access_token || ''}`\n              },\n              body: JSON.stringify({ \n                code: inviteCode,\n                userId: result.data?.user?.id \n              })\n            })\n          } catch (inviteError) {\n            console.error('Failed to mark invitation as used:', inviteError)\n          }\n        }\n      }\n\n      if (result.error) {\n        setError(result.error.message)\n      }\n    } catch (err) {\n      setError('An unexpected error occurred')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4\">\n      <Card className=\"w-full max-w-md p-8\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">\n            {isLogin ? 'Welcome Back' : 'Create Account'}\n          </h1>\n          <p className=\"text-gray-600\">\n            {isLogin ? 'Sign in to your trading account' : 'Start your trading journey'}\n          </p>\n          {inviteCode && (\n            <div className={`mt-3 p-2 rounded-lg text-sm ${\n              inviteValid === true ? 'bg-green-50 text-green-700' : \n              inviteValid === false ? 'bg-red-50 text-red-700' : \n              'bg-yellow-50 text-yellow-700'\n            }`}>\n              {inviteValid === true ? '✓ Valid invitation code' : \n               inviteValid === false ? '✗ Invalid or expired invitation' : \n               'Validating invitation...'}\n            </div>\n          )}\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          {!isLogin && inviteCode && (\n            <div>\n              <label htmlFor=\"inviteCode\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Invitation Code\n              </label>\n              <input\n                id=\"inviteCode\"\n                type=\"text\"\n                value={inviteCode}\n                onChange={(e) => setInviteCode(e.target.value)}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50\"\n                placeholder=\"Enter invitation code\"\n                readOnly\n              />\n            </div>\n          )}\n\n          <div>\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Email Address\n            </label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"Enter your email\"\n              required\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Password\n            </label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"Enter your password\"\n              required\n            />\n          </div>\n\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\n              <p className=\"text-red-600 text-sm\">{error}</p>\n              {error.includes('Invalid login credentials') && (\n                <button\n                  type=\"button\"\n                  onClick={() => setShowFixAuth(true)}\n                  className=\"mt-2 text-blue-600 hover:text-blue-700 text-sm underline\"\n                >\n                  Fix Admin Account\n                </button>\n              )}\n            </div>\n          )}\n\n          {showFixAuth && (\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n              <p className=\"text-yellow-800 text-sm mb-3\">\n                Click below to fix the admin account authentication:\n              </p>\n              <Button\n                type=\"button\"\n                onClick={handleFixAuth}\n                disabled={loading}\n                className=\"w-full bg-yellow-600 hover:bg-yellow-700\"\n              >\n                {loading ? 'Fixing...' : 'Fix Admin Account'}\n              </Button>\n            </div>\n          )}\n\n          <Button\n            type=\"submit\"\n            className=\"w-full\"\n            disabled={loading || (!isLogin && inviteCode && inviteValid !== true)}\n          >\n            {loading ? 'Processing...' : (isLogin ? 'Sign In' : 'Create Account')}\n          </Button>\n        </form>\n\n        <div className=\"mt-6 text-center\">\n          <button\n            onClick={() => setIsLogin(!isLogin)}\n            className=\"text-blue-600 hover:text-blue-700 text-sm font-medium\"\n          >\n            {isLogin ? \"Don't have an account? Sign up\" : 'Already have an account? Sign in'}\n          </button>\n        </div>\n      </Card>\n    </div>\n  )\n}\n"],"names":["AuthPage","isLogin","setIsLogin","useState","email","setEmail","password","setPassword","inviteCode","setInviteCode","loading","setLoading","error","setError","inviteValid","setInviteValid","showFixAuth","setShowFixAuth","navigate","useNavigate","user","authLoading","signIn","signUp","useAuth","useEffect","invite","validateInviteCode","jsx","Card","code","session","supabase","result","handleFixAuth","handleSubmit","e","_b","_a","inviteError","jsxs","Button"],"mappings":"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"}